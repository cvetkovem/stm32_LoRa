cscope 15 D:\EmBitz\GIT\projects\stm32l1xx_dac"               0000315849
	@D:\EmBitz\GIT\arch\stm32l1xx\cmsis\core_cm3.h

23 #i‡
deföed
 ( 
__ICCARM__
 )

24 #¥agm®
sy°em_ö˛ude


27 #ifde‡
__˝lu•lus


31 #i‚de‡
__CORE_CM3_H_GENERIC


32 
	#__CORE_CM3_H_GENERIC


	)

56 
	#__CM3_CMSIS_VERSION_MAIN
 (0x03Ë

	)

57 
	#__CM3_CMSIS_VERSION_SUB
 (0x00Ë

	)

58 
	#__CM3_CMSIS_VERSION
 ((
__CM3_CMSIS_VERSION_MAIN
 << 16) | \

59 
__CM3_CMSIS_VERSION_SUB
 )

	)

61 
	#__CORTEX_M
 (0x03Ë

	)

64 #i‡ 
deföed
 ( 
__CC_ARM
 )

65 
	#__ASM
 
__asm


	)

66 
	#__INLINE
 
__ölöe


	)

67 
	#__STATIC_INLINE
 
__ölöe


	)

69 #ñi‡
deföed
 ( 
__ICCARM__
 )

70 
	#__ASM
 
__asm


	)

71 
	#__INLINE
 
ölöe


	)

72 
	#__STATIC_INLINE
 
ölöe


	)

74 #ñi‡
deföed
 ( 
__TMS470__
 )

75 
	#__ASM
 
__asm


	)

76 
	#__STATIC_INLINE
 
ölöe


	)

78 #ñi‡
deföed
 ( 
__GNUC__
 )

79 
	#__ASM
 
__asm


	)

80 
	#__INLINE
 
ölöe


	)

81 
	#__STATIC_INLINE
 
ölöe


	)

83 #ñi‡
deföed
 ( 
__TASKING__
 )

84 
	#__ASM
 
__asm


	)

85 
	#__INLINE
 
ölöe


	)

86 
	#__STATIC_INLINE
 
ölöe


	)

92 
	#__FPU_USED
 0

	)

94 #i‡
deföed
 ( 
__CC_ARM
 )

95 #i‡
deföed
 
__TARGET_FPU_VFP


99 #ñi‡
deföed
 ( 
__ICCARM__
 )

100 #i‡
deföed
 
__ARMVFP__


104 #ñi‡
deföed
 ( 
__TMS470__
 )

105 #i‡
deföed
 
__TI__VFP_SUPPORT____


109 #ñi‡
deföed
 ( 
__GNUC__
 )

110 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

114 #ñi‡
deföed
 ( 
__TASKING__
 )

118 
	~<°döt.h
>

119 
	~<c‹e_cmIn°r.h
>

120 
	~<c‹e_cmFunc.h
>

124 #i‚de‡
__CMSIS_GENERIC


126 #i‚de‡
__CORE_CM3_H_DEPENDANT


127 
	#__CORE_CM3_H_DEPENDANT


	)

130 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


131 #i‚de‡
__CM3_REV


132 
	#__CM3_REV
 0x0200

	)

136 #i‚de‡
__MPU_PRESENT


137 
	#__MPU_PRESENT
 0

	)

141 #i‚de‡
__NVIC_PRIO_BITS


142 
	#__NVIC_PRIO_BITS
 4

	)

146 #i‚de‡
__Víd‹_SysTickC⁄fig


147 
	#__Víd‹_SysTickC⁄fig
 0

	)

160 #ifde‡
__˝lu•lus


161 
	#__I
 vﬁ©ûê

	)

163 
	#__I
 vﬁ©ûêc⁄°

	)

165 
	#__O
 vﬁ©ûê

	)

166 
	#__IO
 vﬁ©ûê

	)

198 #i‡(
__CORTEX_M
 != 0x04)

199 
uöt32_t
 
_ª£rved0
:27;

201 
uöt32_t
 
_ª£rved0
:16;

202 
uöt32_t
 
GE
:4;

203 
uöt32_t
 
_ª£rved1
:7;

205 
uöt32_t
 
Q
:1;

206 
uöt32_t
 
V
:1;

207 
uöt32_t
 
C
:1;

208 
uöt32_t
 
Z
:1;

209 
uöt32_t
 
N
:1;

210 } 
b
;

211 
uöt32_t
 
w
;

212 } 
	tAPSR_Ty≥
;

221 
uöt32_t
 
	mISR
:9;

222 
uöt32_t
 
	m_ª£rved0
:23;

223 } 
	mb
;

224 
uöt32_t
 
	mw
;

225 } 
	tIPSR_Ty≥
;

234 
uöt32_t
 
	mISR
:9;

235 #i‡(
__CORTEX_M
 != 0x04)

236 
uöt32_t
 
	m_ª£rved0
:15;

238 
uöt32_t
 
	m_ª£rved0
:7;

239 
uöt32_t
 
	mGE
:4;

240 
uöt32_t
 
	m_ª£rved1
:4;

242 
uöt32_t
 
	mT
:1;

243 
uöt32_t
 
	mIT
:2;

244 
uöt32_t
 
	mQ
:1;

245 
uöt32_t
 
	mV
:1;

246 
uöt32_t
 
	mC
:1;

247 
uöt32_t
 
	mZ
:1;

248 
uöt32_t
 
	mN
:1;

249 } 
	mb
;

250 
uöt32_t
 
	mw
;

251 } 
	txPSR_Ty≥
;

260 
uöt32_t
 
	mnPRIV
:1;

261 
uöt32_t
 
	mSPSEL
:1;

262 
uöt32_t
 
	mFPCA
:1;

263 
uöt32_t
 
	m_ª£rved0
:29;

264 } 
	mb
;

265 
uöt32_t
 
	mw
;

266 } 
	tCONTROL_Ty≥
;

281 
__IO
 
uöt32_t
 
	mISER
[8];

282 
uöt32_t
 
	mRESERVED0
[24];

283 
__IO
 
uöt32_t
 
	mICER
[8];

284 
uöt32_t
 
	mRSERVED1
[24];

285 
__IO
 
uöt32_t
 
	mISPR
[8];

286 
uöt32_t
 
	mRESERVED2
[24];

287 
__IO
 
uöt32_t
 
	mICPR
[8];

288 
uöt32_t
 
	mRESERVED3
[24];

289 
__IO
 
uöt32_t
 
	mIABR
[8];

290 
uöt32_t
 
	mRESERVED4
[56];

291 
__IO
 
uöt8_t
 
	mIP
[240];

292 
uöt32_t
 
	mRESERVED5
[644];

293 
__O
 
uöt32_t
 
	mSTIR
;

294 } 
	tNVIC_Ty≥
;

297 
	#NVIC_STIR_INTID_Pos
 0

	)

298 
	#NVIC_STIR_INTID_Msk
 (0x1FFUL << 
NVIC_STIR_INTID_Pos
Ë

	)

313 
__I
 
uöt32_t
 
	mCPUID
;

314 
__IO
 
uöt32_t
 
	mICSR
;

315 
__IO
 
uöt32_t
 
	mVTOR
;

316 
__IO
 
uöt32_t
 
	mAIRCR
;

317 
__IO
 
uöt32_t
 
	mSCR
;

318 
__IO
 
uöt32_t
 
	mCCR
;

319 
__IO
 
uöt8_t
 
	mSHP
[12];

320 
__IO
 
uöt32_t
 
	mSHCSR
;

321 
__IO
 
uöt32_t
 
	mCFSR
;

322 
__IO
 
uöt32_t
 
	mHFSR
;

323 
__IO
 
uöt32_t
 
	mDFSR
;

324 
__IO
 
uöt32_t
 
	mMMFAR
;

325 
__IO
 
uöt32_t
 
	mBFAR
;

326 
__IO
 
uöt32_t
 
	mAFSR
;

327 
__I
 
uöt32_t
 
	mPFR
[2];

328 
__I
 
uöt32_t
 
	mDFR
;

329 
__I
 
uöt32_t
 
	mADR
;

330 
__I
 
uöt32_t
 
	mMMFR
[4];

331 
__I
 
uöt32_t
 
	mISAR
[5];

332 
uöt32_t
 
	mRESERVED0
[5];

333 
__IO
 
uöt32_t
 
	mCPACR
;

334 } 
	tSCB_Ty≥
;

337 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

338 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

340 
	#SCB_CPUID_VARIANT_Pos
 20

	)

341 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

343 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

344 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

346 
	#SCB_CPUID_PARTNO_Pos
 4

	)

347 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

349 
	#SCB_CPUID_REVISION_Pos
 0

	)

350 
	#SCB_CPUID_REVISION_Msk
 (0xFUL << 
SCB_CPUID_REVISION_Pos
Ë

	)

353 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

354 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

356 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

357 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

359 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

360 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

362 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

363 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

365 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

366 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

368 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

369 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

371 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

372 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

374 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

375 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

377 
	#SCB_ICSR_RETTOBASE_Pos
 11

	)

378 
	#SCB_ICSR_RETTOBASE_Msk
 (1UL << 
SCB_ICSR_RETTOBASE_Pos
Ë

	)

380 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

381 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL << 
SCB_ICSR_VECTACTIVE_Pos
Ë

	)

384 #i‡(
__CM3_REV
 < 0x0201)

385 
	#SCB_VTOR_TBLBASE_Pos
 29

	)

386 
	#SCB_VTOR_TBLBASE_Msk
 (1UL << 
SCB_VTOR_TBLBASE_Pos
Ë

	)

388 
	#SCB_VTOR_TBLOFF_Pos
 7

	)

389 
	#SCB_VTOR_TBLOFF_Msk
 (0x3FFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

391 
	#SCB_VTOR_TBLOFF_Pos
 7

	)

392 
	#SCB_VTOR_TBLOFF_Msk
 (0x1FFFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

396 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

397 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

399 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

400 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

402 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

403 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

405 
	#SCB_AIRCR_PRIGROUP_Pos
 8

	)

406 
	#SCB_AIRCR_PRIGROUP_Msk
 (7UL << 
SCB_AIRCR_PRIGROUP_Pos
Ë

	)

408 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

409 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

411 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

412 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

414 
	#SCB_AIRCR_VECTRESET_Pos
 0

	)

415 
	#SCB_AIRCR_VECTRESET_Msk
 (1UL << 
SCB_AIRCR_VECTRESET_Pos
Ë

	)

418 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

419 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

421 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

422 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

424 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

425 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

428 
	#SCB_CCR_STKALIGN_Pos
 9

	)

429 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

431 
	#SCB_CCR_BFHFNMIGN_Pos
 8

	)

432 
	#SCB_CCR_BFHFNMIGN_Msk
 (1UL << 
SCB_CCR_BFHFNMIGN_Pos
Ë

	)

434 
	#SCB_CCR_DIV_0_TRP_Pos
 4

	)

435 
	#SCB_CCR_DIV_0_TRP_Msk
 (1UL << 
SCB_CCR_DIV_0_TRP_Pos
Ë

	)

437 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

438 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

440 
	#SCB_CCR_USERSETMPEND_Pos
 1

	)

441 
	#SCB_CCR_USERSETMPEND_Msk
 (1UL << 
SCB_CCR_USERSETMPEND_Pos
Ë

	)

443 
	#SCB_CCR_NONBASETHRDENA_Pos
 0

	)

444 
	#SCB_CCR_NONBASETHRDENA_Msk
 (1UL << 
SCB_CCR_NONBASETHRDENA_Pos
Ë

	)

447 
	#SCB_SHCSR_USGFAULTENA_Pos
 18

	)

448 
	#SCB_SHCSR_USGFAULTENA_Msk
 (1UL << 
SCB_SHCSR_USGFAULTENA_Pos
Ë

	)

450 
	#SCB_SHCSR_BUSFAULTENA_Pos
 17

	)

451 
	#SCB_SHCSR_BUSFAULTENA_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTENA_Pos
Ë

	)

453 
	#SCB_SHCSR_MEMFAULTENA_Pos
 16

	)

454 
	#SCB_SHCSR_MEMFAULTENA_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTENA_Pos
Ë

	)

456 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

457 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

459 
	#SCB_SHCSR_BUSFAULTPENDED_Pos
 14

	)

460 
	#SCB_SHCSR_BUSFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTPENDED_Pos
Ë

	)

462 
	#SCB_SHCSR_MEMFAULTPENDED_Pos
 13

	)

463 
	#SCB_SHCSR_MEMFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTPENDED_Pos
Ë

	)

465 
	#SCB_SHCSR_USGFAULTPENDED_Pos
 12

	)

466 
	#SCB_SHCSR_USGFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_USGFAULTPENDED_Pos
Ë

	)

468 
	#SCB_SHCSR_SYSTICKACT_Pos
 11

	)

469 
	#SCB_SHCSR_SYSTICKACT_Msk
 (1UL << 
SCB_SHCSR_SYSTICKACT_Pos
Ë

	)

471 
	#SCB_SHCSR_PENDSVACT_Pos
 10

	)

472 
	#SCB_SHCSR_PENDSVACT_Msk
 (1UL << 
SCB_SHCSR_PENDSVACT_Pos
Ë

	)

474 
	#SCB_SHCSR_MONITORACT_Pos
 8

	)

475 
	#SCB_SHCSR_MONITORACT_Msk
 (1UL << 
SCB_SHCSR_MONITORACT_Pos
Ë

	)

477 
	#SCB_SHCSR_SVCALLACT_Pos
 7

	)

478 
	#SCB_SHCSR_SVCALLACT_Msk
 (1UL << 
SCB_SHCSR_SVCALLACT_Pos
Ë

	)

480 
	#SCB_SHCSR_USGFAULTACT_Pos
 3

	)

481 
	#SCB_SHCSR_USGFAULTACT_Msk
 (1UL << 
SCB_SHCSR_USGFAULTACT_Pos
Ë

	)

483 
	#SCB_SHCSR_BUSFAULTACT_Pos
 1

	)

484 
	#SCB_SHCSR_BUSFAULTACT_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTACT_Pos
Ë

	)

486 
	#SCB_SHCSR_MEMFAULTACT_Pos
 0

	)

487 
	#SCB_SHCSR_MEMFAULTACT_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTACT_Pos
Ë

	)

490 
	#SCB_CFSR_USGFAULTSR_Pos
 16

	)

491 
	#SCB_CFSR_USGFAULTSR_Msk
 (0xFFFFUL << 
SCB_CFSR_USGFAULTSR_Pos
Ë

	)

493 
	#SCB_CFSR_BUSFAULTSR_Pos
 8

	)

494 
	#SCB_CFSR_BUSFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_BUSFAULTSR_Pos
Ë

	)

496 
	#SCB_CFSR_MEMFAULTSR_Pos
 0

	)

497 
	#SCB_CFSR_MEMFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_MEMFAULTSR_Pos
Ë

	)

500 
	#SCB_HFSR_DEBUGEVT_Pos
 31

	)

501 
	#SCB_HFSR_DEBUGEVT_Msk
 (1UL << 
SCB_HFSR_DEBUGEVT_Pos
Ë

	)

503 
	#SCB_HFSR_FORCED_Pos
 30

	)

504 
	#SCB_HFSR_FORCED_Msk
 (1UL << 
SCB_HFSR_FORCED_Pos
Ë

	)

506 
	#SCB_HFSR_VECTTBL_Pos
 1

	)

507 
	#SCB_HFSR_VECTTBL_Msk
 (1UL << 
SCB_HFSR_VECTTBL_Pos
Ë

	)

510 
	#SCB_DFSR_EXTERNAL_Pos
 4

	)

511 
	#SCB_DFSR_EXTERNAL_Msk
 (1UL << 
SCB_DFSR_EXTERNAL_Pos
Ë

	)

513 
	#SCB_DFSR_VCATCH_Pos
 3

	)

514 
	#SCB_DFSR_VCATCH_Msk
 (1UL << 
SCB_DFSR_VCATCH_Pos
Ë

	)

516 
	#SCB_DFSR_DWTTRAP_Pos
 2

	)

517 
	#SCB_DFSR_DWTTRAP_Msk
 (1UL << 
SCB_DFSR_DWTTRAP_Pos
Ë

	)

519 
	#SCB_DFSR_BKPT_Pos
 1

	)

520 
	#SCB_DFSR_BKPT_Msk
 (1UL << 
SCB_DFSR_BKPT_Pos
Ë

	)

522 
	#SCB_DFSR_HALTED_Pos
 0

	)

523 
	#SCB_DFSR_HALTED_Msk
 (1UL << 
SCB_DFSR_HALTED_Pos
Ë

	)

538 
uöt32_t
 
	mRESERVED0
[1];

539 
__I
 
uöt32_t
 
	mICTR
;

540 #i‡((
deföed
 
__CM3_REV
) && (__CM3_REV >= 0x200))

541 
__IO
 
uöt32_t
 
	mACTLR
;

543 
uöt32_t
 
	mRESERVED1
[1];

545 } 
	tSCnSCB_Ty≥
;

548 
	#SCnSCB_ICTR_INTLINESNUM_Pos
 0

	)

549 
	#SCnSCB_ICTR_INTLINESNUM_Msk
 (0xFUL << 
SCnSCB_ICTR_INTLINESNUM_Pos
Ë

	)

553 
	#SCnSCB_ACTLR_DISFOLD_Pos
 2

	)

554 
	#SCnSCB_ACTLR_DISFOLD_Msk
 (1UL << 
SCnSCB_ACTLR_DISFOLD_Pos
Ë

	)

556 
	#SCnSCB_ACTLR_DISDEFWBUF_Pos
 1

	)

557 
	#SCnSCB_ACTLR_DISDEFWBUF_Msk
 (1UL << 
SCnSCB_ACTLR_DISDEFWBUF_Pos
Ë

	)

559 
	#SCnSCB_ACTLR_DISMCYCINT_Pos
 0

	)

560 
	#SCnSCB_ACTLR_DISMCYCINT_Msk
 (1UL << 
SCnSCB_ACTLR_DISMCYCINT_Pos
Ë

	)

575 
__IO
 
uöt32_t
 
	mCTRL
;

576 
__IO
 
uöt32_t
 
	mLOAD
;

577 
__IO
 
uöt32_t
 
	mVAL
;

578 
__I
 
uöt32_t
 
	mCALIB
;

579 } 
	tSysTick_Ty≥
;

582 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

583 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

585 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

586 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

588 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

589 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

591 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

592 
	#SysTick_CTRL_ENABLE_Msk
 (1UL << 
SysTick_CTRL_ENABLE_Pos
Ë

	)

595 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

596 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL << 
SysTick_LOAD_RELOAD_Pos
Ë

	)

599 
	#SysTick_VAL_CURRENT_Pos
 0

	)

600 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

603 
	#SysTick_CALIB_NOREF_Pos
 31

	)

604 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

606 
	#SysTick_CALIB_SKEW_Pos
 30

	)

607 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

609 
	#SysTick_CALIB_TENMS_Pos
 0

	)

610 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

625 
__O
 union

627 
__O
 
uöt8_t
 
	mu8
;

628 
__O
 
uöt16_t
 
	mu16
;

629 
__O
 
uöt32_t
 
	mu32
;

630 } 
	mPORT
 [32];

631 
uöt32_t
 
	mRESERVED0
[864];

632 
__IO
 
uöt32_t
 
	mTER
;

633 
uöt32_t
 
	mRESERVED1
[15];

634 
__IO
 
uöt32_t
 
	mTPR
;

635 
uöt32_t
 
	mRESERVED2
[15];

636 
__IO
 
uöt32_t
 
	mTCR
;

637 } 
	tITM_Ty≥
;

640 
	#ITM_TPR_PRIVMASK_Pos
 0

	)

641 
	#ITM_TPR_PRIVMASK_Msk
 (0xFUL << 
ITM_TPR_PRIVMASK_Pos
Ë

	)

644 
	#ITM_TCR_BUSY_Pos
 23

	)

645 
	#ITM_TCR_BUSY_Msk
 (1UL << 
ITM_TCR_BUSY_Pos
Ë

	)

647 
	#ITM_TCR_Tø˚BusID_Pos
 16

	)

648 
	#ITM_TCR_Tø˚BusID_Msk
 (0x7FUL << 
ITM_TCR_Tø˚BusID_Pos
Ë

	)

650 
	#ITM_TCR_GTSFREQ_Pos
 10

	)

651 
	#ITM_TCR_GTSFREQ_Msk
 (3UL << 
ITM_TCR_GTSFREQ_Pos
Ë

	)

653 
	#ITM_TCR_TSPªsˇÀ_Pos
 8

	)

654 
	#ITM_TCR_TSPªsˇÀ_Msk
 (3UL << 
ITM_TCR_TSPªsˇÀ_Pos
Ë

	)

656 
	#ITM_TCR_SWOENA_Pos
 4

	)

657 
	#ITM_TCR_SWOENA_Msk
 (1UL << 
ITM_TCR_SWOENA_Pos
Ë

	)

659 
	#ITM_TCR_TXENA_Pos
 3

	)

660 
	#ITM_TCR_TXENA_Msk
 (1UL << 
ITM_TCR_TXENA_Pos
Ë

	)

662 
	#ITM_TCR_SYNCENA_Pos
 2

	)

663 
	#ITM_TCR_SYNCENA_Msk
 (1UL << 
ITM_TCR_SYNCENA_Pos
Ë

	)

665 
	#ITM_TCR_TSENA_Pos
 1

	)

666 
	#ITM_TCR_TSENA_Msk
 (1UL << 
ITM_TCR_TSENA_Pos
Ë

	)

668 
	#ITM_TCR_ITMENA_Pos
 0

	)

669 
	#ITM_TCR_ITMENA_Msk
 (1UL << 
ITM_TCR_ITMENA_Pos
Ë

	)

684 
__IO
 
uöt32_t
 
	mCTRL
;

685 
__IO
 
uöt32_t
 
	mCYCCNT
;

686 
__IO
 
uöt32_t
 
	mCPICNT
;

687 
__IO
 
uöt32_t
 
	mEXCCNT
;

688 
__IO
 
uöt32_t
 
	mSLEEPCNT
;

689 
__IO
 
uöt32_t
 
	mLSUCNT
;

690 
__IO
 
uöt32_t
 
	mFOLDCNT
;

691 
__I
 
uöt32_t
 
	mPCSR
;

692 
__IO
 
uöt32_t
 
	mCOMP0
;

693 
__IO
 
uöt32_t
 
	mMASK0
;

694 
__IO
 
uöt32_t
 
	mFUNCTION0
;

695 
uöt32_t
 
	mRESERVED0
[1];

696 
__IO
 
uöt32_t
 
	mCOMP1
;

697 
__IO
 
uöt32_t
 
	mMASK1
;

698 
__IO
 
uöt32_t
 
	mFUNCTION1
;

699 
uöt32_t
 
	mRESERVED1
[1];

700 
__IO
 
uöt32_t
 
	mCOMP2
;

701 
__IO
 
uöt32_t
 
	mMASK2
;

702 
__IO
 
uöt32_t
 
	mFUNCTION2
;

703 
uöt32_t
 
	mRESERVED2
[1];

704 
__IO
 
uöt32_t
 
	mCOMP3
;

705 
__IO
 
uöt32_t
 
	mMASK3
;

706 
__IO
 
uöt32_t
 
	mFUNCTION3
;

707 } 
	tDWT_Ty≥
;

710 
	#DWT_CTRL_NUMCOMP_Pos
 28

	)

711 
	#DWT_CTRL_NUMCOMP_Msk
 (0xFUL << 
DWT_CTRL_NUMCOMP_Pos
Ë

	)

713 
	#DWT_CTRL_NOTRCPKT_Pos
 27

	)

714 
	#DWT_CTRL_NOTRCPKT_Msk
 (0x1UL << 
DWT_CTRL_NOTRCPKT_Pos
Ë

	)

716 
	#DWT_CTRL_NOEXTTRIG_Pos
 26

	)

717 
	#DWT_CTRL_NOEXTTRIG_Msk
 (0x1UL << 
DWT_CTRL_NOEXTTRIG_Pos
Ë

	)

719 
	#DWT_CTRL_NOCYCCNT_Pos
 25

	)

720 
	#DWT_CTRL_NOCYCCNT_Msk
 (0x1UL << 
DWT_CTRL_NOCYCCNT_Pos
Ë

	)

722 
	#DWT_CTRL_NOPRFCNT_Pos
 24

	)

723 
	#DWT_CTRL_NOPRFCNT_Msk
 (0x1UL << 
DWT_CTRL_NOPRFCNT_Pos
Ë

	)

725 
	#DWT_CTRL_CYCEVTENA_Pos
 22

	)

726 
	#DWT_CTRL_CYCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCEVTENA_Pos
Ë

	)

728 
	#DWT_CTRL_FOLDEVTENA_Pos
 21

	)

729 
	#DWT_CTRL_FOLDEVTENA_Msk
 (0x1UL << 
DWT_CTRL_FOLDEVTENA_Pos
Ë

	)

731 
	#DWT_CTRL_LSUEVTENA_Pos
 20

	)

732 
	#DWT_CTRL_LSUEVTENA_Msk
 (0x1UL << 
DWT_CTRL_LSUEVTENA_Pos
Ë

	)

734 
	#DWT_CTRL_SLEEPEVTENA_Pos
 19

	)

735 
	#DWT_CTRL_SLEEPEVTENA_Msk
 (0x1UL << 
DWT_CTRL_SLEEPEVTENA_Pos
Ë

	)

737 
	#DWT_CTRL_EXCEVTENA_Pos
 18

	)

738 
	#DWT_CTRL_EXCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_EXCEVTENA_Pos
Ë

	)

740 
	#DWT_CTRL_CPIEVTENA_Pos
 17

	)

741 
	#DWT_CTRL_CPIEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CPIEVTENA_Pos
Ë

	)

743 
	#DWT_CTRL_EXCTRCENA_Pos
 16

	)

744 
	#DWT_CTRL_EXCTRCENA_Msk
 (0x1UL << 
DWT_CTRL_EXCTRCENA_Pos
Ë

	)

746 
	#DWT_CTRL_PCSAMPLENA_Pos
 12

	)

747 
	#DWT_CTRL_PCSAMPLENA_Msk
 (0x1UL << 
DWT_CTRL_PCSAMPLENA_Pos
Ë

	)

749 
	#DWT_CTRL_SYNCTAP_Pos
 10

	)

750 
	#DWT_CTRL_SYNCTAP_Msk
 (0x3UL << 
DWT_CTRL_SYNCTAP_Pos
Ë

	)

752 
	#DWT_CTRL_CYCTAP_Pos
 9

	)

753 
	#DWT_CTRL_CYCTAP_Msk
 (0x1UL << 
DWT_CTRL_CYCTAP_Pos
Ë

	)

755 
	#DWT_CTRL_POSTINIT_Pos
 5

	)

756 
	#DWT_CTRL_POSTINIT_Msk
 (0xFUL << 
DWT_CTRL_POSTINIT_Pos
Ë

	)

758 
	#DWT_CTRL_POSTPRESET_Pos
 1

	)

759 
	#DWT_CTRL_POSTPRESET_Msk
 (0xFUL << 
DWT_CTRL_POSTPRESET_Pos
Ë

	)

761 
	#DWT_CTRL_CYCCNTENA_Pos
 0

	)

762 
	#DWT_CTRL_CYCCNTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCCNTENA_Pos
Ë

	)

765 
	#DWT_CPICNT_CPICNT_Pos
 0

	)

766 
	#DWT_CPICNT_CPICNT_Msk
 (0xFFUL << 
DWT_CPICNT_CPICNT_Pos
Ë

	)

769 
	#DWT_EXCCNT_EXCCNT_Pos
 0

	)

770 
	#DWT_EXCCNT_EXCCNT_Msk
 (0xFFUL << 
DWT_EXCCNT_EXCCNT_Pos
Ë

	)

773 
	#DWT_SLEEPCNT_SLEEPCNT_Pos
 0

	)

774 
	#DWT_SLEEPCNT_SLEEPCNT_Msk
 (0xFFUL << 
DWT_SLEEPCNT_SLEEPCNT_Pos
Ë

	)

777 
	#DWT_LSUCNT_LSUCNT_Pos
 0

	)

778 
	#DWT_LSUCNT_LSUCNT_Msk
 (0xFFUL << 
DWT_LSUCNT_LSUCNT_Pos
Ë

	)

781 
	#DWT_FOLDCNT_FOLDCNT_Pos
 0

	)

782 
	#DWT_FOLDCNT_FOLDCNT_Msk
 (0xFFUL << 
DWT_FOLDCNT_FOLDCNT_Pos
Ë

	)

785 
	#DWT_MASK_MASK_Pos
 0

	)

786 
	#DWT_MASK_MASK_Msk
 (0x1FUL << 
DWT_MASK_MASK_Pos
Ë

	)

789 
	#DWT_FUNCTION_MATCHED_Pos
 24

	)

790 
	#DWT_FUNCTION_MATCHED_Msk
 (0x1UL << 
DWT_FUNCTION_MATCHED_Pos
Ë

	)

792 
	#DWT_FUNCTION_DATAVADDR1_Pos
 16

	)

793 
	#DWT_FUNCTION_DATAVADDR1_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR1_Pos
Ë

	)

795 
	#DWT_FUNCTION_DATAVADDR0_Pos
 12

	)

796 
	#DWT_FUNCTION_DATAVADDR0_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR0_Pos
Ë

	)

798 
	#DWT_FUNCTION_DATAVSIZE_Pos
 10

	)

799 
	#DWT_FUNCTION_DATAVSIZE_Msk
 (0x3UL << 
DWT_FUNCTION_DATAVSIZE_Pos
Ë

	)

801 
	#DWT_FUNCTION_LNK1ENA_Pos
 9

	)

802 
	#DWT_FUNCTION_LNK1ENA_Msk
 (0x1UL << 
DWT_FUNCTION_LNK1ENA_Pos
Ë

	)

804 
	#DWT_FUNCTION_DATAVMATCH_Pos
 8

	)

805 
	#DWT_FUNCTION_DATAVMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_DATAVMATCH_Pos
Ë

	)

807 
	#DWT_FUNCTION_CYCMATCH_Pos
 7

	)

808 
	#DWT_FUNCTION_CYCMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_CYCMATCH_Pos
Ë

	)

810 
	#DWT_FUNCTION_EMITRANGE_Pos
 5

	)

811 
	#DWT_FUNCTION_EMITRANGE_Msk
 (0x1UL << 
DWT_FUNCTION_EMITRANGE_Pos
Ë

	)

813 
	#DWT_FUNCTION_FUNCTION_Pos
 0

	)

814 
	#DWT_FUNCTION_FUNCTION_Msk
 (0xFUL << 
DWT_FUNCTION_FUNCTION_Pos
Ë

	)

829 
__IO
 
uöt32_t
 
	mSSPSR
;

830 
__IO
 
uöt32_t
 
	mCSPSR
;

831 
uöt32_t
 
	mRESERVED0
[2];

832 
__IO
 
uöt32_t
 
	mACPR
;

833 
uöt32_t
 
	mRESERVED1
[55];

834 
__IO
 
uöt32_t
 
	mSPPR
;

835 
uöt32_t
 
	mRESERVED2
[131];

836 
__I
 
uöt32_t
 
	mFFSR
;

837 
__IO
 
uöt32_t
 
	mFFCR
;

838 
__I
 
uöt32_t
 
	mFSCR
;

839 
uöt32_t
 
	mRESERVED3
[759];

840 
__I
 
uöt32_t
 
	mTRIGGER
;

841 
__I
 
uöt32_t
 
	mFIFO0
;

842 
__I
 
uöt32_t
 
	mITATBCTR2
;

843 
uöt32_t
 
	mRESERVED4
[1];

844 
__I
 
uöt32_t
 
	mITATBCTR0
;

845 
__I
 
uöt32_t
 
	mFIFO1
;

846 
__IO
 
uöt32_t
 
	mITCTRL
;

847 
uöt32_t
 
	mRESERVED5
[39];

848 
__IO
 
uöt32_t
 
	mCLAIMSET
;

849 
__IO
 
uöt32_t
 
	mCLAIMCLR
;

850 
uöt32_t
 
	mRESERVED7
[8];

851 
__I
 
uöt32_t
 
	mDEVID
;

852 
__I
 
uöt32_t
 
	mDEVTYPE
;

853 } 
	tTPI_Ty≥
;

856 
	#TPI_ACPR_PRESCALER_Pos
 0

	)

857 
	#TPI_ACPR_PRESCALER_Msk
 (0x1FFFUL << 
TPI_ACPR_PRESCALER_Pos
Ë

	)

860 
	#TPI_SPPR_TXMODE_Pos
 0

	)

861 
	#TPI_SPPR_TXMODE_Msk
 (0x3UL << 
TPI_SPPR_TXMODE_Pos
Ë

	)

864 
	#TPI_FFSR_FtN⁄St›_Pos
 3

	)

865 
	#TPI_FFSR_FtN⁄St›_Msk
 (0x1UL << 
TPI_FFSR_FtN⁄St›_Pos
Ë

	)

867 
	#TPI_FFSR_TCPª£¡_Pos
 2

	)

868 
	#TPI_FFSR_TCPª£¡_Msk
 (0x1UL << 
TPI_FFSR_TCPª£¡_Pos
Ë

	)

870 
	#TPI_FFSR_FtSt›≥d_Pos
 1

	)

871 
	#TPI_FFSR_FtSt›≥d_Msk
 (0x1UL << 
TPI_FFSR_FtSt›≥d_Pos
Ë

	)

873 
	#TPI_FFSR_FlInProg_Pos
 0

	)

874 
	#TPI_FFSR_FlInProg_Msk
 (0x1UL << 
TPI_FFSR_FlInProg_Pos
Ë

	)

877 
	#TPI_FFCR_TrigIn_Pos
 8

	)

878 
	#TPI_FFCR_TrigIn_Msk
 (0x1UL << 
TPI_FFCR_TrigIn_Pos
Ë

	)

880 
	#TPI_FFCR_EnFC⁄t_Pos
 1

	)

881 
	#TPI_FFCR_EnFC⁄t_Msk
 (0x1UL << 
TPI_FFCR_EnFC⁄t_Pos
Ë

	)

884 
	#TPI_TRIGGER_TRIGGER_Pos
 0

	)

885 
	#TPI_TRIGGER_TRIGGER_Msk
 (0x1UL << 
TPI_TRIGGER_TRIGGER_Pos
Ë

	)

888 
	#TPI_FIFO0_ITM_ATVALID_Pos
 29

	)

889 
	#TPI_FIFO0_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ITM_ATVALID_Pos
Ë

	)

891 
	#TPI_FIFO0_ITM_byãcou¡_Pos
 27

	)

892 
	#TPI_FIFO0_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ITM_byãcou¡_Pos
Ë

	)

894 
	#TPI_FIFO0_ETM_ATVALID_Pos
 26

	)

895 
	#TPI_FIFO0_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ETM_ATVALID_Pos
Ë

	)

897 
	#TPI_FIFO0_ETM_byãcou¡_Pos
 24

	)

898 
	#TPI_FIFO0_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ETM_byãcou¡_Pos
Ë

	)

900 
	#TPI_FIFO0_ETM2_Pos
 16

	)

901 
	#TPI_FIFO0_ETM2_Msk
 (0xFFUL << 
TPI_FIFO0_ETM2_Pos
Ë

	)

903 
	#TPI_FIFO0_ETM1_Pos
 8

	)

904 
	#TPI_FIFO0_ETM1_Msk
 (0xFFUL << 
TPI_FIFO0_ETM1_Pos
Ë

	)

906 
	#TPI_FIFO0_ETM0_Pos
 0

	)

907 
	#TPI_FIFO0_ETM0_Msk
 (0xFFUL << 
TPI_FIFO0_ETM0_Pos
Ë

	)

910 
	#TPI_ITATBCTR2_ATREADY_Pos
 0

	)

911 
	#TPI_ITATBCTR2_ATREADY_Msk
 (0x1UL << 
TPI_ITATBCTR2_ATREADY_Pos
Ë

	)

914 
	#TPI_FIFO1_ITM_ATVALID_Pos
 29

	)

915 
	#TPI_FIFO1_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ITM_ATVALID_Pos
Ë

	)

917 
	#TPI_FIFO1_ITM_byãcou¡_Pos
 27

	)

918 
	#TPI_FIFO1_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ITM_byãcou¡_Pos
Ë

	)

920 
	#TPI_FIFO1_ETM_ATVALID_Pos
 26

	)

921 
	#TPI_FIFO1_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ETM_ATVALID_Pos
Ë

	)

923 
	#TPI_FIFO1_ETM_byãcou¡_Pos
 24

	)

924 
	#TPI_FIFO1_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ETM_byãcou¡_Pos
Ë

	)

926 
	#TPI_FIFO1_ITM2_Pos
 16

	)

927 
	#TPI_FIFO1_ITM2_Msk
 (0xFFUL << 
TPI_FIFO1_ITM2_Pos
Ë

	)

929 
	#TPI_FIFO1_ITM1_Pos
 8

	)

930 
	#TPI_FIFO1_ITM1_Msk
 (0xFFUL << 
TPI_FIFO1_ITM1_Pos
Ë

	)

932 
	#TPI_FIFO1_ITM0_Pos
 0

	)

933 
	#TPI_FIFO1_ITM0_Msk
 (0xFFUL << 
TPI_FIFO1_ITM0_Pos
Ë

	)

936 
	#TPI_ITATBCTR0_ATREADY_Pos
 0

	)

937 
	#TPI_ITATBCTR0_ATREADY_Msk
 (0x1UL << 
TPI_ITATBCTR0_ATREADY_Pos
Ë

	)

940 
	#TPI_ITCTRL_Mode_Pos
 0

	)

941 
	#TPI_ITCTRL_Mode_Msk
 (0x1UL << 
TPI_ITCTRL_Mode_Pos
Ë

	)

944 
	#TPI_DEVID_NRZVALID_Pos
 11

	)

945 
	#TPI_DEVID_NRZVALID_Msk
 (0x1UL << 
TPI_DEVID_NRZVALID_Pos
Ë

	)

947 
	#TPI_DEVID_MANCVALID_Pos
 10

	)

948 
	#TPI_DEVID_MANCVALID_Msk
 (0x1UL << 
TPI_DEVID_MANCVALID_Pos
Ë

	)

950 
	#TPI_DEVID_PTINVALID_Pos
 9

	)

951 
	#TPI_DEVID_PTINVALID_Msk
 (0x1UL << 
TPI_DEVID_PTINVALID_Pos
Ë

	)

953 
	#TPI_DEVID_MöBufSz_Pos
 6

	)

954 
	#TPI_DEVID_MöBufSz_Msk
 (0x7UL << 
TPI_DEVID_MöBufSz_Pos
Ë

	)

956 
	#TPI_DEVID_AsynClkIn_Pos
 5

	)

957 
	#TPI_DEVID_AsynClkIn_Msk
 (0x1UL << 
TPI_DEVID_AsynClkIn_Pos
Ë

	)

959 
	#TPI_DEVID_NrTø˚I≈ut_Pos
 0

	)

960 
	#TPI_DEVID_NrTø˚I≈ut_Msk
 (0x1FUL << 
TPI_DEVID_NrTø˚I≈ut_Pos
Ë

	)

963 
	#TPI_DEVTYPE_SubTy≥_Pos
 0

	)

964 
	#TPI_DEVTYPE_SubTy≥_Msk
 (0xFUL << 
TPI_DEVTYPE_SubTy≥_Pos
Ë

	)

966 
	#TPI_DEVTYPE_Maj‹Ty≥_Pos
 4

	)

967 
	#TPI_DEVTYPE_Maj‹Ty≥_Msk
 (0xFUL << 
TPI_DEVTYPE_Maj‹Ty≥_Pos
Ë

	)

972 #i‡(
__MPU_PRESENT
 == 1)

983 
__I
 
uöt32_t
 
	mTYPE
;

984 
__IO
 
uöt32_t
 
	mCTRL
;

985 
__IO
 
uöt32_t
 
	mRNR
;

986 
__IO
 
uöt32_t
 
	mRBAR
;

987 
__IO
 
uöt32_t
 
	mRASR
;

988 
__IO
 
uöt32_t
 
	mRBAR_A1
;

989 
__IO
 
uöt32_t
 
	mRASR_A1
;

990 
__IO
 
uöt32_t
 
	mRBAR_A2
;

991 
__IO
 
uöt32_t
 
	mRASR_A2
;

992 
__IO
 
uöt32_t
 
	mRBAR_A3
;

993 
__IO
 
uöt32_t
 
	mRASR_A3
;

994 } 
	tMPU_Ty≥
;

997 
	#MPU_TYPE_IREGION_Pos
 16

	)

998 
	#MPU_TYPE_IREGION_Msk
 (0xFFUL << 
MPU_TYPE_IREGION_Pos
Ë

	)

1000 
	#MPU_TYPE_DREGION_Pos
 8

	)

1001 
	#MPU_TYPE_DREGION_Msk
 (0xFFUL << 
MPU_TYPE_DREGION_Pos
Ë

	)

1003 
	#MPU_TYPE_SEPARATE_Pos
 0

	)

1004 
	#MPU_TYPE_SEPARATE_Msk
 (1UL << 
MPU_TYPE_SEPARATE_Pos
Ë

	)

1007 
	#MPU_CTRL_PRIVDEFENA_Pos
 2

	)

1008 
	#MPU_CTRL_PRIVDEFENA_Msk
 (1UL << 
MPU_CTRL_PRIVDEFENA_Pos
Ë

	)

1010 
	#MPU_CTRL_HFNMIENA_Pos
 1

	)

1011 
	#MPU_CTRL_HFNMIENA_Msk
 (1UL << 
MPU_CTRL_HFNMIENA_Pos
Ë

	)

1013 
	#MPU_CTRL_ENABLE_Pos
 0

	)

1014 
	#MPU_CTRL_ENABLE_Msk
 (1UL << 
MPU_CTRL_ENABLE_Pos
Ë

	)

1017 
	#MPU_RNR_REGION_Pos
 0

	)

1018 
	#MPU_RNR_REGION_Msk
 (0xFFUL << 
MPU_RNR_REGION_Pos
Ë

	)

1021 
	#MPU_RBAR_ADDR_Pos
 5

	)

1022 
	#MPU_RBAR_ADDR_Msk
 (0x7FFFFFFUL << 
MPU_RBAR_ADDR_Pos
Ë

	)

1024 
	#MPU_RBAR_VALID_Pos
 4

	)

1025 
	#MPU_RBAR_VALID_Msk
 (1UL << 
MPU_RBAR_VALID_Pos
Ë

	)

1027 
	#MPU_RBAR_REGION_Pos
 0

	)

1028 
	#MPU_RBAR_REGION_Msk
 (0xFUL << 
MPU_RBAR_REGION_Pos
Ë

	)

1031 
	#MPU_RASR_ATTRS_Pos
 16

	)

1032 
	#MPU_RASR_ATTRS_Msk
 (0xFFFFUL << 
MPU_RASR_ATTRS_Pos
Ë

	)

1034 
	#MPU_RASR_SRD_Pos
 8

	)

1035 
	#MPU_RASR_SRD_Msk
 (0xFFUL << 
MPU_RASR_SRD_Pos
Ë

	)

1037 
	#MPU_RASR_SIZE_Pos
 1

	)

1038 
	#MPU_RASR_SIZE_Msk
 (0x1FUL << 
MPU_RASR_SIZE_Pos
Ë

	)

1040 
	#MPU_RASR_ENABLE_Pos
 0

	)

1041 
	#MPU_RASR_ENABLE_Msk
 (1UL << 
MPU_RASR_ENABLE_Pos
Ë

	)

1057 
__IO
 
uöt32_t
 
	mDHCSR
;

1058 
__O
 
uöt32_t
 
	mDCRSR
;

1059 
__IO
 
uöt32_t
 
	mDCRDR
;

1060 
__IO
 
uöt32_t
 
	mDEMCR
;

1061 } 
	tC‹eDebug_Ty≥
;

1064 
	#C‹eDebug_DHCSR_DBGKEY_Pos
 16

	)

1065 
	#C‹eDebug_DHCSR_DBGKEY_Msk
 (0xFFFFUL << 
C‹eDebug_DHCSR_DBGKEY_Pos
Ë

	)

1067 
	#C‹eDebug_DHCSR_S_RESET_ST_Pos
 25

	)

1068 
	#C‹eDebug_DHCSR_S_RESET_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RESET_ST_Pos
Ë

	)

1070 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Pos
 24

	)

1071 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RETIRE_ST_Pos
Ë

	)

1073 
	#C‹eDebug_DHCSR_S_LOCKUP_Pos
 19

	)

1074 
	#C‹eDebug_DHCSR_S_LOCKUP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_LOCKUP_Pos
Ë

	)

1076 
	#C‹eDebug_DHCSR_S_SLEEP_Pos
 18

	)

1077 
	#C‹eDebug_DHCSR_S_SLEEP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_SLEEP_Pos
Ë

	)

1079 
	#C‹eDebug_DHCSR_S_HALT_Pos
 17

	)

1080 
	#C‹eDebug_DHCSR_S_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_S_HALT_Pos
Ë

	)

1082 
	#C‹eDebug_DHCSR_S_REGRDY_Pos
 16

	)

1083 
	#C‹eDebug_DHCSR_S_REGRDY_Msk
 (1UL << 
C‹eDebug_DHCSR_S_REGRDY_Pos
Ë

	)

1085 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Pos
 5

	)

1086 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Msk
 (1UL << 
C‹eDebug_DHCSR_C_SNAPSTALL_Pos
Ë

	)

1088 
	#C‹eDebug_DHCSR_C_MASKINTS_Pos
 3

	)

1089 
	#C‹eDebug_DHCSR_C_MASKINTS_Msk
 (1UL << 
C‹eDebug_DHCSR_C_MASKINTS_Pos
Ë

	)

1091 
	#C‹eDebug_DHCSR_C_STEP_Pos
 2

	)

1092 
	#C‹eDebug_DHCSR_C_STEP_Msk
 (1UL << 
C‹eDebug_DHCSR_C_STEP_Pos
Ë

	)

1094 
	#C‹eDebug_DHCSR_C_HALT_Pos
 1

	)

1095 
	#C‹eDebug_DHCSR_C_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_C_HALT_Pos
Ë

	)

1097 
	#C‹eDebug_DHCSR_C_DEBUGEN_Pos
 0

	)

1098 
	#C‹eDebug_DHCSR_C_DEBUGEN_Msk
 (1UL << 
C‹eDebug_DHCSR_C_DEBUGEN_Pos
Ë

	)

1101 
	#C‹eDebug_DCRSR_REGWnR_Pos
 16

	)

1102 
	#C‹eDebug_DCRSR_REGWnR_Msk
 (1UL << 
C‹eDebug_DCRSR_REGWnR_Pos
Ë

	)

1104 
	#C‹eDebug_DCRSR_REGSEL_Pos
 0

	)

1105 
	#C‹eDebug_DCRSR_REGSEL_Msk
 (0x1FUL << 
C‹eDebug_DCRSR_REGSEL_Pos
Ë

	)

1108 
	#C‹eDebug_DEMCR_TRCENA_Pos
 24

	)

1109 
	#C‹eDebug_DEMCR_TRCENA_Msk
 (1UL << 
C‹eDebug_DEMCR_TRCENA_Pos
Ë

	)

1111 
	#C‹eDebug_DEMCR_MON_REQ_Pos
 19

	)

1112 
	#C‹eDebug_DEMCR_MON_REQ_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_REQ_Pos
Ë

	)

1114 
	#C‹eDebug_DEMCR_MON_STEP_Pos
 18

	)

1115 
	#C‹eDebug_DEMCR_MON_STEP_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_STEP_Pos
Ë

	)

1117 
	#C‹eDebug_DEMCR_MON_PEND_Pos
 17

	)

1118 
	#C‹eDebug_DEMCR_MON_PEND_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_PEND_Pos
Ë

	)

1120 
	#C‹eDebug_DEMCR_MON_EN_Pos
 16

	)

1121 
	#C‹eDebug_DEMCR_MON_EN_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_EN_Pos
Ë

	)

1123 
	#C‹eDebug_DEMCR_VC_HARDERR_Pos
 10

	)

1124 
	#C‹eDebug_DEMCR_VC_HARDERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_HARDERR_Pos
Ë

	)

1126 
	#C‹eDebug_DEMCR_VC_INTERR_Pos
 9

	)

1127 
	#C‹eDebug_DEMCR_VC_INTERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_INTERR_Pos
Ë

	)

1129 
	#C‹eDebug_DEMCR_VC_BUSERR_Pos
 8

	)

1130 
	#C‹eDebug_DEMCR_VC_BUSERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_BUSERR_Pos
Ë

	)

1132 
	#C‹eDebug_DEMCR_VC_STATERR_Pos
 7

	)

1133 
	#C‹eDebug_DEMCR_VC_STATERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_STATERR_Pos
Ë

	)

1135 
	#C‹eDebug_DEMCR_VC_CHKERR_Pos
 6

	)

1136 
	#C‹eDebug_DEMCR_VC_CHKERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CHKERR_Pos
Ë

	)

1138 
	#C‹eDebug_DEMCR_VC_NOCPERR_Pos
 5

	)

1139 
	#C‹eDebug_DEMCR_VC_NOCPERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_NOCPERR_Pos
Ë

	)

1141 
	#C‹eDebug_DEMCR_VC_MMERR_Pos
 4

	)

1142 
	#C‹eDebug_DEMCR_VC_MMERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_MMERR_Pos
Ë

	)

1144 
	#C‹eDebug_DEMCR_VC_CORERESET_Pos
 0

	)

1145 
	#C‹eDebug_DEMCR_VC_CORERESET_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CORERESET_Pos
Ë

	)

1157 
	#SCS_BASE
 (0xE000E000ULË

	)

1158 
	#ITM_BASE
 (0xE0000000ULË

	)

1159 
	#DWT_BASE
 (0xE0001000ULË

	)

1160 
	#TPI_BASE
 (0xE0040000ULË

	)

1161 
	#C‹eDebug_BASE
 (0xE000EDF0ULË

	)

1162 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

1163 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

1164 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

1166 
	#SCnSCB
 ((
SCnSCB_Ty≥
 *Ë
SCS_BASE
 )

	)

1167 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

1168 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

1169 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

1170 
	#ITM
 ((
ITM_Ty≥
 *Ë
ITM_BASE
 )

	)

1171 
	#DWT
 ((
DWT_Ty≥
 *Ë
DWT_BASE
 )

	)

1172 
	#TPI
 ((
TPI_Ty≥
 *Ë
TPI_BASE
 )

	)

1173 
	#C‹eDebug
 ((
C‹eDebug_Ty≥
 *Ë
C‹eDebug_BASE
Ë

	)

1175 #i‡(
__MPU_PRESENT
 == 1)

1176 
	#MPU_BASE
 (
SCS_BASE
 + 0x0D90ULË

	)

1177 
	#MPU
 ((
MPU_Ty≥
 *Ë
MPU_BASE
 )

	)

1214 
__STATIC_INLINE
 
	$NVIC_SëPri‹ôyGroupög
(
uöt32_t
 
Pri‹ôyGroup
)

1216 
uöt32_t
 
ªg_vÆue
;

1217 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07);

1219 
ªg_vÆue
 = 
SCB
->
AIRCR
;

1220 
ªg_vÆue
 &~(
SCB_AIRCR_VECTKEY_Msk
 | 
SCB_AIRCR_PRIGROUP_Msk
);

1221 
ªg_vÆue
 = (reg_value |

1222 ((
uöt32_t
)0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

1223 (
Pri‹ôyGroupTmp
 << 8));

1224 
SCB
->
AIRCR
 = 
ªg_vÆue
;

1225 
	}
}

1234 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôyGroupög
()

1236  ((
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
Ë>> 
SCB_AIRCR_PRIGROUP_Pos
);

1237 
	}
}

1246 
__STATIC_INLINE
 
	$NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1248 
NVIC
->
ISER
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1249 
	}
}

1258 
__STATIC_INLINE
 
	$NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1260 
NVIC
->
ICER
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1261 
	}
}

1274 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1276 ((
uöt32_t
Ë((
NVIC
->
ISPR
[(uöt32_t)(
IRQn
) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));

1277 
	}
}

1286 
__STATIC_INLINE
 
	$NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1288 
NVIC
->
ISPR
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1289 
	}
}

1298 
__STATIC_INLINE
 
	$NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1300 
NVIC
->
ICPR
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1301 
	}
}

1313 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëA˘ive
(
IRQn_Ty≥
 
IRQn
)

1315 ((
uöt32_t
)((
NVIC
->
IABR
[(uöt32_t)(
IRQn
) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));

1316 
	}
}

1328 
__STATIC_INLINE
 
	$NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

1330 if(
IRQn
 < 0) {

1331 
SCB
->
SHP
[((
uöt32_t
)(
IRQn
Ë& 0xF)-4] = ((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & 0xff); }

1333 
NVIC
->
IP
[(
uöt32_t
)(
IRQn
)] = ((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & 0xff); }

1334 
	}
}

1348 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

1351 if(
IRQn
 < 0) {

1352 ((
uöt32_t
)(
SCB
->
SHP
[((uöt32_t)(
IRQn
Ë& 0xF)-4] >> (8 - 
__NVIC_PRIO_BITS
))); }

1354 ((
uöt32_t
)(
NVIC
->
IP
[(uöt32_t)(
IRQn
)] >> (8 - 
__NVIC_PRIO_BITS
))); }

1355 
	}
}

1370 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_EncodePri‹ôy
 (
uöt32_t
 
Pri‹ôyGroup
, uöt32_à
Pªem±Pri‹ôy
, uöt32_à
SubPri‹ôy
)

1372 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & 0x07);

1373 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1374 
uöt32_t
 
SubPri‹ôyBôs
;

1376 
Pªem±Pri‹ôyBôs
 = ((7 - 
Pri‹ôyGroupTmp
Ë> 
__NVIC_PRIO_BITS
) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;

1377 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + 
__NVIC_PRIO_BITS
) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

1380 ((
Pªem±Pri‹ôy
 & ((1 << (
Pªem±Pri‹ôyBôs
)Ë- 1)Ë<< 
SubPri‹ôyBôs
) |

1381 ((
SubPri‹ôy
 & ((1 << (
SubPri‹ôyBôs
 )) - 1)))

1383 
	}
}

1398 
__STATIC_INLINE
 
	$NVIC_DecodePri‹ôy
 (
uöt32_t
 
Pri‹ôy
, uöt32_à
Pri‹ôyGroup
, uöt32_t* 
pPªem±Pri‹ôy
, uöt32_t* 
pSubPri‹ôy
)

1400 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & 0x07);

1401 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1402 
uöt32_t
 
SubPri‹ôyBôs
;

1404 
Pªem±Pri‹ôyBôs
 = ((7 - 
Pri‹ôyGroupTmp
Ë> 
__NVIC_PRIO_BITS
) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;

1405 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + 
__NVIC_PRIO_BITS
) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

1407 *
pPªem±Pri‹ôy
 = (
Pri‹ôy
 >> 
SubPri‹ôyBôs
Ë& ((1 << (
Pªem±Pri‹ôyBôs
)) - 1);

1408 *
pSubPri‹ôy
 = (
Pri‹ôy
 ) & ((1 << (
SubPri‹ôyBôs
 )) - 1);

1409 
	}
}

1416 
__STATIC_INLINE
 
	$NVIC_Sy°emRe£t
()

1418 
	`__DSB
();

1420 
SCB
->
AIRCR
 = ((0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

1421 (
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
) |

1422 
SCB_AIRCR_SYSRESETREQ_Msk
);

1423 
	`__DSB
();

1425 
	}
}

1438 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

1455 
__STATIC_INLINE
 
uöt32_t
 
	$SysTick_C⁄fig
(
uöt32_t
 
ticks
)

1457 i‡(
ticks
 > 
SysTick_LOAD_RELOAD_Msk
)  (1);

1459 
SysTick
->
LOAD
 = (
ticks
 & 
SysTick_LOAD_RELOAD_Msk
) - 1;

1460 
	`NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1<<
__NVIC_PRIO_BITS
) - 1);

1461 
SysTick
->
VAL
 = 0;

1462 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

1463 
SysTick_CTRL_TICKINT_Msk
 |

1464 
SysTick_CTRL_ENABLE_Msk
;

1466 
	}
}

1481 vﬁ©ûê
öt32_t
 
ITM_RxBuf„r
;

1482 
	#ITM_RXBUFFER_EMPTY
 0x5AA55AA5

	)

1495 
__STATIC_INLINE
 
uöt32_t
 
	$ITM_SídCh¨
 (
uöt32_t
 
ch
)

1497 i‡((
ITM
->
TCR
 & 
ITM_TCR_ITMENA_Msk
) &&

1498 (
ITM
->
TER
 & (1UL << 0) ) )

1500 
ITM
->
PORT
[0].
u32
 == 0);

1501 
ITM
->
PORT
[0].
u8
 = (
uöt8_t
Ë
ch
;

1503  (
ch
);

1504 
	}
}

1514 
__STATIC_INLINE
 
öt32_t
 
	$ITM_Re˚iveCh¨
 () {

1515 
öt32_t
 
ch
 = -1;

1517 i‡(
ITM_RxBuf„r
 !
ITM_RXBUFFER_EMPTY
) {

1518 
ch
 = 
ITM_RxBuf„r
;

1519 
ITM_RxBuf„r
 = 
ITM_RXBUFFER_EMPTY
;

1522  (
ch
);

1523 
	}
}

1533 
__STATIC_INLINE
 
öt32_t
 
	$ITM_CheckCh¨
 () {

1535 i‡(
ITM_RxBuf„r
 =
ITM_RXBUFFER_EMPTY
) {

1540 
	}
}

1548 #ifde‡
__˝lu•lus


	@D:\EmBitz\GIT\arch\stm32l1xx\cmsis\core_cmFunc.h

24 #i‚de‡
__CORE_CMFUNC_H


25 
	#__CORE_CMFUNC_H


	)

34 #i‡ 
deföed
 ( 
__CC_ARM
 )

37 #i‡(
__ARMCC_VERSION
 < 400677)

50 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CONTROL
()

52 
uöt32_t
 
__ªgC⁄åﬁ
 
	`__ASM
("control");

53 (
__ªgC⁄åﬁ
);

54 
	}
}

63 
__STATIC_INLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

65 
uöt32_t
 
__ªgC⁄åﬁ
 
	`__ASM
("control");

66 
__ªgC⁄åﬁ
 = 
c⁄åﬁ
;

67 
	}
}

76 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_IPSR
()

78 
uöt32_t
 
__ªgIPSR
 
	`__ASM
("ipsr");

79 (
__ªgIPSR
);

80 
	}
}

89 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_APSR
()

91 
uöt32_t
 
__ªgAPSR
 
	`__ASM
("apsr");

92 (
__ªgAPSR
);

93 
	}
}

102 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_xPSR
()

104 
uöt32_t
 
__ªgXPSR
 
	`__ASM
("xpsr");

105 (
__ªgXPSR
);

106 
	}
}

115 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PSP
()

117 
uöt32_t
 
__ªgPro˚ssSèckPoöãr
 
	`__ASM
("psp");

118 (
__ªgPro˚ssSèckPoöãr
);

119 
	}
}

128 
__STATIC_INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

130 
uöt32_t
 
__ªgPro˚ssSèckPoöãr
 
	`__ASM
("psp");

131 
__ªgPro˚ssSèckPoöãr
 = 
t›OfProcSèck
;

132 
	}
}

141 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_MSP
()

143 
uöt32_t
 
__ªgMaöSèckPoöãr
 
	`__ASM
("msp");

144 (
__ªgMaöSèckPoöãr
);

145 
	}
}

154 
__STATIC_INLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

156 
uöt32_t
 
__ªgMaöSèckPoöãr
 
	`__ASM
("msp");

157 
__ªgMaöSèckPoöãr
 = 
t›OfMaöSèck
;

158 
	}
}

167 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

169 
uöt32_t
 
__ªgPriMask
 
	`__ASM
("primask");

170 (
__ªgPriMask
);

171 
	}
}

180 
__STATIC_INLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

182 
uöt32_t
 
__ªgPriMask
 
	`__ASM
("primask");

183 
__ªgPriMask
 = (
¥iMask
);

184 
	}
}

187 #i‡ (
__CORTEX_M
 >= 0x03)

194 
	#__íabÀ_Áu…_úq
 
__íabÀ_fiq


	)

202 
	#__dißbÀ_Áu…_úq
 
__dißbÀ_fiq


	)

211 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

213 
uöt32_t
 
__ªgBa£Pri
 
	`__ASM
("basepri");

214 (
__ªgBa£Pri
);

215 
	}
}

224 
__STATIC_INLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
ba£Pri
)

226 
uöt32_t
 
__ªgBa£Pri
 
	`__ASM
("basepri");

227 
__ªgBa£Pri
 = (
ba£Pri
 & 0xff);

228 
	}
}

237 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

239 
uöt32_t
 
__ªgFau…Mask
 
	`__ASM
("faultmask");

240 (
__ªgFau…Mask
);

241 
	}
}

250 
__STATIC_INLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

252 
uöt32_t
 
__ªgFau…Mask
 
	`__ASM
("faultmask");

253 
__ªgFau…Mask
 = (
Áu…Mask
 & (
uöt32_t
)1);

254 
	}
}

259 #i‡ (
__CORTEX_M
 == 0x04)

267 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

269 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

270 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

271 (
__ªgÂs¸
);

275 
	}
}

284 
__STATIC_INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

286 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

287 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

288 
__ªgÂs¸
 = (
Âs¸
);

290 
	}
}

295 #ñi‡
deföed
 ( 
__ICCARM__
 )

298 
	~<cmsis_ür.h
>

301 #ñi‡
deföed
 ( 
__TMS470__
 )

304 
	~<cmsis_ccs.h
>

307 #ñi‡
deföed
 ( 
__GNUC__
 )

315 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_úq
()

317 
__ASM
 volatile ("cpsie i");

318 
	}
}

326 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_úq
()

328 
__ASM
 volatile ("cpsid i");

329 
	}
}

338 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CONTROL
()

340 
uöt32_t
 
ªsu…
;

342 
__ASM
 vﬁ©ûê("MRS %0, c⁄åﬁ" : "Ù" (
ªsu…
) );

343 (
ªsu…
);

344 
	}
}

353 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

355 
__ASM
 vﬁ©ûê("MSR c⁄åﬁ, %0" : : "r" (
c⁄åﬁ
) );

356 
	}
}

365 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_IPSR
()

367 
uöt32_t
 
ªsu…
;

369 
__ASM
 vﬁ©ûê("MRS %0, ip§" : "Ù" (
ªsu…
) );

370 (
ªsu…
);

371 
	}
}

380 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_APSR
()

382 
uöt32_t
 
ªsu…
;

384 
__ASM
 vﬁ©ûê("MRS %0,áp§" : "Ù" (
ªsu…
) );

385 (
ªsu…
);

386 
	}
}

395 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_xPSR
()

397 
uöt32_t
 
ªsu…
;

399 
__ASM
 vﬁ©ûê("MRS %0, xp§" : "Ù" (
ªsu…
) );

400 (
ªsu…
);

401 
	}
}

410 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PSP
()

412 
uöt32_t
 
ªsu…
;

414 
__ASM
 vﬁ©ûê("MRS %0,Ö•\n" : "Ù" (
ªsu…
) );

415 (
ªsu…
);

416 
	}
}

425 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

427 
__ASM
 vﬁ©ûê("MSRÖ•, %0\n" : : "r" (
t›OfProcSèck
) );

428 
	}
}

437 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_MSP
()

439 
uöt32_t
 
ªsu…
;

441 
__ASM
 vﬁ©ûê("MRS %0, m•\n" : "Ù" (
ªsu…
) );

442 (
ªsu…
);

443 
	}
}

452 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

454 
__ASM
 vﬁ©ûê("MSR m•, %0\n" : : "r" (
t›OfMaöSèck
) );

455 
	}
}

464 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

466 
uöt32_t
 
ªsu…
;

468 
__ASM
 vﬁ©ûê("MRS %0,Örimask" : "Ù" (
ªsu…
) );

469 (
ªsu…
);

470 
	}
}

479 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

481 
__ASM
 vﬁ©ûê("MSRÖrimask, %0" : : "r" (
¥iMask
) );

482 
	}
}

485 #i‡ (
__CORTEX_M
 >= 0x03)

492 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_Áu…_úq
()

494 
__ASM
 volatile ("cpsie f");

495 
	}
}

503 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_Áu…_úq
()

505 
__ASM
 volatile ("cpsid f");

506 
	}
}

515 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

517 
uöt32_t
 
ªsu…
;

519 
__ASM
 vﬁ©ûê("MRS %0, ba£¥i_max" : "Ù" (
ªsu…
) );

520 (
ªsu…
);

521 
	}
}

530 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
vÆue
)

532 
__ASM
 vﬁ©ûê("MSR ba£¥i, %0" : : "r" (
vÆue
) );

533 
	}
}

542 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

544 
uöt32_t
 
ªsu…
;

546 
__ASM
 vﬁ©ûê("MRS %0, fau…mask" : "Ù" (
ªsu…
) );

547 (
ªsu…
);

548 
	}
}

557 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

559 
__ASM
 vﬁ©ûê("MSR fau…mask, %0" : : "r" (
Áu…Mask
) );

560 
	}
}

565 #i‡ (
__CORTEX_M
 == 0x04)

573 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

575 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

576 
uöt32_t
 
ªsu…
;

578 
__ASM
 vﬁ©ûê("VMRS %0, fps¸" : "Ù" (
ªsu…
) );

579 (
ªsu…
);

583 
	}
}

592 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

594 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

595 
__ASM
 vﬁ©ûê("VMSR fps¸, %0" : : "r" (
Âs¸
) );

597 
	}
}

602 #ñi‡
deföed
 ( 
__TASKING__
 )

	@D:\EmBitz\GIT\arch\stm32l1xx\cmsis\core_cmInstr.h

24 #i‚de‡
__CORE_CMINSTR_H


25 
	#__CORE_CMINSTR_H


	)

34 #i‡ 
deföed
 ( 
__CC_ARM
 )

37 #i‡(
__ARMCC_VERSION
 < 400677)

46 
	#__NOP
 
__n›


	)

54 
	#__WFI
 
__wfi


	)

62 
	#__WFE
 
__w„


	)

69 
	#__SEV
 
__£v


	)

78 
	#__ISB
(Ë
	`__isb
(0xF)

	)

86 
	#__DSB
(Ë
	`__dsb
(0xF)

	)

94 
	#__DMB
(Ë
	`__dmb
(0xF)

	)

104 
	#__REV
 
__ªv


	)

114 
__©åibuã__
((
£˘i⁄
(".ªv16_ãxt"))Ë
__STATIC_INLINE
 
__ASM
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

116 
ªv16
 
r0
,Ñ0

117 
bx
 
Ã


118 
	}
}

128 
__©åibuã__
((
£˘i⁄
(".ªvsh_ãxt"))Ë
__STATIC_INLINE
 
__ASM
 
öt32_t
 
	$__REVSH
(
öt32_t
 
vÆue
)

130 
ªvsh
 
r0
,Ñ0

131 
bx
 
Ã


132 
	}
}

143 
	#__ROR
 
__r‹


	)

146 #i‡ (
__CORTEX_M
 >= 0x03)

155 
	#__RBIT
 
__rbô


	)

165 
	#__LDREXB
(
±r
Ë((
uöt8_t
 ) 
	`__ldªx
’å))

	)

175 
	#__LDREXH
(
±r
Ë((
uöt16_t
Ë
	`__ldªx
’å))

	)

185 
	#__LDREXW
(
±r
Ë((
uöt32_t
 ) 
	`__ldªx
’å))

	)

197 
	#__STREXB
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

209 
	#__STREXH
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

221 
	#__STREXW
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

229 
	#__CLREX
 
__˛ªx


	)

240 
	#__SSAT
 
__sßt


	)

251 
	#__USAT
 
__ußt


	)

261 
	#__CLZ
 
__˛z


	)

267 #ñi‡
deföed
 ( 
__ICCARM__
 )

270 
	~<cmsis_ür.h
>

273 #ñi‡
deföed
 ( 
__TMS470__
 )

276 
	~<cmsis_ccs.h
>

279 #ñi‡
deföed
 ( 
__GNUC__
 )

286 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__NOP
()

288 
__ASM
 volatile ("nop");

289 
	}
}

297 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__WFI
()

299 
__ASM
 volatile ("wfi");

300 
	}
}

308 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__WFE
()

310 
__ASM
 volatile ("wfe");

311 
	}
}

318 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__SEV
()

320 
__ASM
 volatile ("sev");

321 
	}
}

330 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__ISB
()

332 
__ASM
 volatile ("isb");

333 
	}
}

341 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__DSB
()

343 
__ASM
 volatile ("dsb");

344 
	}
}

352 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__DMB
()

354 
__ASM
 volatile ("dmb");

355 
	}
}

365 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__REV
(
uöt32_t
 
vÆue
)

367 
uöt32_t
 
ªsu…
;

369 
__ASM
 vﬁ©ûê("ªv %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

370 (
ªsu…
);

371 
	}
}

381 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

383 
uöt32_t
 
ªsu…
;

385 
__ASM
 vﬁ©ûê("ªv16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

386 (
ªsu…
);

387 
	}
}

397 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
öt32_t
 
	$__REVSH
(
öt32_t
 
vÆue
)

399 
uöt32_t
 
ªsu…
;

401 
__ASM
 vﬁ©ûê("ªvsh %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

402 (
ªsu…
);

403 
	}
}

414 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__ROR
(
uöt32_t
 
›1
, uöt32_à
›2
)

417 
__ASM
 vﬁ©ûê("r‹ %0, %0, %1" : "+r" (
›1
Ë: "r" (
›2
) );

418 (
›1
);

419 
	}
}

422 #i‡ (
__CORTEX_M
 >= 0x03)

431 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__RBIT
(
uöt32_t
 
vÆue
)

433 
uöt32_t
 
ªsu…
;

435 
__ASM
 vﬁ©ûê("rbô %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

436 (
ªsu…
);

437 
	}
}

447 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt8_t
 
	$__LDREXB
(vﬁ©ûê
uöt8_t
 *
addr
)

449 
uöt8_t
 
ªsu…
;

451 
__ASM
 vﬁ©ûê("ldªxb %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) );

452 (
ªsu…
);

453 
	}
}

463 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt16_t
 
	$__LDREXH
(vﬁ©ûê
uöt16_t
 *
addr
)

465 
uöt16_t
 
ªsu…
;

467 
__ASM
 vﬁ©ûê("ldªxh %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) );

468 (
ªsu…
);

469 
	}
}

479 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__LDREXW
(vﬁ©ûê
uöt32_t
 *
addr
)

481 
uöt32_t
 
ªsu…
;

483 
__ASM
 vﬁ©ûê("ldªx %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) );

484 (
ªsu…
);

485 
	}
}

497 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__STREXB
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
addr
)

499 
uöt32_t
 
ªsu…
;

501 
__ASM
 vﬁ©ûê("°ªxb %0, %2, [%1]" : "=&r" (
ªsu…
Ë: "r" (
addr
), "r" (
vÆue
) );

502 (
ªsu…
);

503 
	}
}

515 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__STREXH
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
addr
)

517 
uöt32_t
 
ªsu…
;

519 
__ASM
 vﬁ©ûê("°ªxh %0, %2, [%1]" : "=&r" (
ªsu…
Ë: "r" (
addr
), "r" (
vÆue
) );

520 (
ªsu…
);

521 
	}
}

533 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__STREXW
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
addr
)

535 
uöt32_t
 
ªsu…
;

537 
__ASM
 vﬁ©ûê("°ªx %0, %2, [%1]" : "=&r" (
ªsu…
Ë: "r" (
addr
), "r" (
vÆue
) );

538 (
ªsu…
);

539 
	}
}

547 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__CLREX
()

549 
__ASM
 volatile ("clrex");

550 
	}
}

561 
	#__SSAT
(
ARG1
,
ARG2
) \

563 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

564 
	`__ASM
 ("sßà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

565 
__RES
; \

566 })

	)

577 
	#__USAT
(
ARG1
,
ARG2
) \

579 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

580 
	`__ASM
 ("ußà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

581 
__RES
; \

582 })

	)

592 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt8_t
 
	$__CLZ
(
uöt32_t
 
vÆue
)

594 
uöt8_t
 
ªsu…
;

596 
__ASM
 vﬁ©ûê("˛z %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

597 (
ªsu…
);

598 
	}
}

605 #ñi‡
deföed
 ( 
__TASKING__
 )

	@D:\EmBitz\GIT\core\stdlib_mcu32\stdlib.h

5 #i‚de‡
__STDLIB_H__


6 
	#__STDLIB_H__


	)

8 
	~<°ddef.h
>

9 
	~<°d¨g.h
>

10 
	~<°döt.h
>

13 sig√d 
	töt8_t
;

14 
	tuöt8_t
;

16 sig√d 
	töt16_t
;

17 
	tuöt16_t
;

19 sig√d 
	töt32_t
;

20 
	tuöt32_t
;

22 
uöt8_t
 
	tboﬁ
;

26 
	mquŸ
;

27 
	mªm
;

28 } 
	tldiv_t
;

30 
	#åue
 1

	)

31 
	#Ál£
 0

	)

36 
öt32_t
 
abs_32
(öt32_à
i
);

37 
öt16_t
 
abs_16
(öt16_à
s
);

38 
öt8_t
 
abs_8
(öt8_à
c
);

40 
öt32_t
 
max_32
(öt32_à
a
, i¡32_à
b
);

41 
öt16_t
 
max_16
(öt16_à
a
, i¡16_à
b
);

42 
öt8_t
 
max_8
(öt8_à
a
, i¡8_à
b
);

44 
öt32_t
 
mö_32
(öt32_à
a
, i¡32_à
b
);

45 
öt16_t
 
mö_16
(öt16_à
a
, i¡16_à
b
);

46 
öt8_t
 
mö_8
(öt8_à
a
, i¡8_à
b
);

48 #unde‡
mem˝y


49 * 
mem˝y
(* 
d°
, c⁄° * 
§c
, 
size_t
 
Àn
);

51 #unde‡
memcmp


52 
memcmp
(c⁄° * 
s1
, c⁄° * 
s2
, 
size_t
 
n
);

53 
memcmp_r
(c⁄° * 
s1
, c⁄° * 
s2
, 
size_t
 
n
);

55 #unde‡
°∫cmp


56 
°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

58 #unde‡
mem£t


59 * 
mem£t
(* 
s
, 
c
, 
size_t
 
n
);

61 #unde‡
°æí


62 
size_t
 
°æí
 (c⁄° *
°r
);

64 #unde‡
v•rötf


65 
v•rötf
–*
out
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
);

67 #unde‡
¢¥öt


68 
¢¥öt
(*
out
, c⁄° *
f‹m©
, ...);

70 #unde‡
ldiv


71 
	#div
(
numî
,
díom
Ë
	`ldiv
(“umî),(díom))

	)

72 
ldiv_t
 
ldiv
(
numî
, 
díom
);

74 #unde‡
°∫˝y


75 *
°∫˝y
(*
d°0
, c⁄° *
§c0
, 
size_t
 
cou¡
);

77 #unde‡
°r˝y


78 * 
°r˝y
 (* 
d°
, c⁄° * 
§c
);

80 #unde‡
°rcmp


81 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

	@D:\EmBitz\GIT\core\stdlib_mcu32\stdlib_mcu32.c

5 
	~<°dlib.h
>

11 
ölöe
 
öt32_t
 
	$abs_32
(
öt32_t
 
i
)

13  ((
i
 ^ (i >> 31)) - (i >> 31));

14 
	}
}

16 
ölöe
 
öt16_t
 
	$abs_16
(
öt16_t
 
s
)

18  ((
s
 ^ (s >> 15)) - (s >> 15));

19 
	}
}

21 
ölöe
 
öt8_t
 
	$abs_8
(
öt8_t
 
c
)

23  ((
c
 ^ (c >> 7)) - (c >> 7));

24 
	}
}

26 
ölöe
 
öt32_t
 
	$max_32
(
öt32_t
 
a
, i¡32_à
b
)

28  
a
 - (◊ - 
b
) & ((a - b) >> 31));

29 
	}
}

31 
ölöe
 
öt32_t
 
	$mö_32
(
öt32_t
 
a
, i¡32_à
b
)

33  
b
 + ((
a
 - b) & ((a - b) >> 31));

34 
	}
}

36 
ölöe
 
öt16_t
 
	$max_16
(
öt16_t
 
a
, i¡16_à
b
)

38  
a
 - (◊ - 
b
) & ((a - b) >> 15));

39 
	}
}

41 
ölöe
 
öt16_t
 
	$mö_16
(
öt16_t
 
a
, i¡16_à
b
)

43  
b
 + ((
a
 - b) & ((a - b) >> 15));

44 
	}
}

46 
ölöe
 
öt8_t
 
	$max_8
(
öt8_t
 
a
, i¡8_à
b
)

48  
a
 - (◊ - 
b
) & ((a - b) >> 7));

49 
	}
}

51 
ölöe
 
öt8_t
 
	$mö_8
(
öt8_t
 
a
, i¡8_à
b
)

53  
b
 + ((
a
 - b) & ((a - b) >> 7));

54 
	}
}

56 * 
	$mem˝y
(* 
d°
, c⁄° * 
§c
, 
size_t
 
Àn
)

58 c⁄° *
c§c
 = (c⁄° *Ë
§c
;

60 *
tmp
 = (*Ë
d°
;

62 
Àn
--Ë*
tmp
++ = *
c§c
++;

64  
d°
;

65 
	}
}

67 
	$memcmp
(c⁄° * 
s1
, c⁄° * 
s2
, 
size_t
 
n
)

69 c⁄° *
cs1
 = (c⁄° *Ë
s1
;

70 c⁄° *
cs2
 = (c⁄° *Ë
s2
;

72 sig√d 
ªt
 = 0;

74 
ªt
 =0 && 
n
--Ëªà*
cs1
++ - *
cs2
++;

76  
ªt
;

77 
	}
}

79 
	$memcmp_r
(c⁄° * 
s1
, c⁄° * 
s2
, 
size_t
 
n
)

81 c⁄° *
cs1
 = (c⁄° *Ë
s1
;

82 c⁄° *
cs2
 = (c⁄° *Ë
s2
;

84 sig√d 
ªt
 = 0;

86 
ªt
 =0 && 
n
--Ëªà
cs1
[n] - 
cs2
[n];

88  
ªt
;

89 
	}
}

91 
	$°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

93 
ªt
 = 0;

95 (
ªt
 =0Ë&& (*(
uöt8_t
 *)
s2
 !0Ë&& (
n
--)Ëªà*(uöt8_à*)
s1
++ - *(uint8_t *)s2++;

97  
ªt
;

98 
	}
}

100 * 
	$mem£t
(* 
s
, 
c
, 
size_t
 
n
)

102 * 
s1
 = (*)
s
;

104 
n
--Ë*
s1
++ = 
c
;

106  
s
;

107 
	}
}

112 
	#PAD_RIGHT
 1

	)

113 
	#PAD_ZERO
 2

	)

114 
	#PRINT_BUF_LEN
 12

	)

116 
	$¥öts
(**
out
, c⁄° *
°rög
, 
width
, 
∑d
)

118 
pc
 = 0, 
∑dch¨
 = ' ';

120 i‡(
width
 > 0)

122 
Àn
 = 0;

123 c⁄° *
±r
;

125 
±r
 = 
°rög
; *±r; ++±rË++
Àn
;

127 i‡(
Àn
 >
width
) width = 0;

128 
width
 -
Àn
;

130 i‡(
∑d
 & 
PAD_ZERO
Ë
∑dch¨
 = '0';

133 i‡(!(
∑d
 & 
PAD_RIGHT
))

135  ; 
width
 > 0; --width)

137 **
out
 = 
∑dch¨
;

138 ++(*
out
);

139 ++
pc
;

143  ; *
°rög
 ; ++string)

145 **
out
 = *
°rög
;

146 ++(*
out
);

147 ++
pc
;

150  ; 
width
 > 0; --width)

152 **
out
 = 
∑dch¨
;

153 ++(*
out
);

154 ++
pc
;

157  
pc
;

158 
	}
}

161 
	$¥öti
(**
out
, 
i
, 
b
, 
sg
, 
width
, 
∑d
, 
Àtba£
)

163 
¥öt_buf
[12];

164 *
s
;

165 
t
, 
√g
 = 0, 
pc
 = 0;

166 
u
 = ()
i
;

168 i‡(
i
 == 0)

170 
¥öt_buf
[0] = '0';

171 
¥öt_buf
[1] = '\0';

172  
	`¥öts
 (
out
, 
¥öt_buf
, 
width
, 
∑d
);

175 i‡(
sg
 && 
b
 =10 && 
i
 < 0)

177 
√g
 = 1;

178 
u
 = ()-
i
;

181 
s
 = 
¥öt_buf
 + 
PRINT_BUF_LEN
-1;

182 *
s
 = '\0';

184 
u
)

186 
t
 = ()
u
 % 
b
;

188 if–
t
 >= 10 )

189 
t
 +
Àtba£
 - '0' - 10;

191 *--
s
 = ()(
t
 + '0');

192 
u
 /
b
;

195 i‡(
√g
)

197 if–
width
 && (
∑d
 & 
PAD_ZERO
) )

199 **
out
 = '-';

200 ++(*
out
);

201 ++
pc
;

202 --
width
;

206 *--
s
 = '-';

210  
pc
 + 
	`¥öts
(
out
, 
s
, 
width
, 
∑d
);

211 
	}
}

213 
	$v•rötf
(*
out
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
 )

215 
width
, 
∑d
;

216 
pc
 = 0;

217 
s¸
[2];

219 ; *
f‹m©
 != 0; ++format)

221 i‡(*
f‹m©
 == '%')

223 ++
f‹m©
;

224 
width
 = 
∑d
 = 0;

226 i‡(*
f‹m©
 == '\0') ;

228 i‡(*
f‹m©
 ='%'Ë
out_f
;

230 i‡(*
f‹m©
 == '-')

232 ++
f‹m©
;

233 
∑d
 = 
PAD_RIGHT
;

236 *
f‹m©
 == '0')

238 ++
f‹m©
;

239 
∑d
 |
PAD_ZERO
;

242  ; *
f‹m©
 >= '0' && *format <= '9'; ++format)

244 
width
 *= 10;

245 
width
 +*
f‹m©
 - '0';

248 if–*
f‹m©
 == 's' )

250 *
s
 = (*)
	`va_¨g
–
¨gs
, );

251 
pc
 +
	`¥öts
 (&
out
, 
s
?s:"“uŒ)", 
width
, 
∑d
);

255 if–*
f‹m©
 == 'd' )

257 
pc
 +
	`¥öti
 (&
out
, 
	`va_¨g
–
¨gs
, ), 10, 1, 
width
, 
∑d
, 'a');

262 if–*
f‹m©
 == 'x' )

264 
pc
 +
	`¥öti
 (&
out
, 
	`va_¨g
–
¨gs
, ), 16, 0, 
width
, 
∑d
, 'a');

268 if–*
f‹m©
 == 'X' )

270 
pc
 +
	`¥öti
 (&
out
, 
	`va_¨g
–
¨gs
, ), 16, 0, 
width
, 
∑d
, 'A');

274 if–*
f‹m©
 == 'u' )

276 
pc
 +
	`¥öti
 (&
out
, 
	`va_¨g
–
¨gs
, ), 10, 0, 
width
, 
∑d
, 'a');

280 if–*
f‹m©
 == 'c' )

283 
s¸
[0] = ()
	`va_¨g
–
¨gs
, );

284 
s¸
[1] = '\0';

285 
pc
 +
	`¥öts
 (&
out
, 
s¸
, 
width
, 
∑d
);

291 
out_f
:

292 *
out
 = *
f‹m©
;

293 ++(
out
);

294 ++
pc
;

298 i‡(
out
) *out = '\0';

300 
	`va_íd
–
¨gs
 );

301  
pc
;

302 
	}
}

305 
size_t
 
	$°æí
 (c⁄° *
°r
)

307 c⁄° *
ch¨_±r
;

308 c⁄° 
uöt32_t
 *
l⁄gw‹d_±r
;

309 
uöt32_t
 
l⁄gw‹d
, 
himagic
, 
lomagic
;

313 
ch¨_±r
 = 
°r
; ((
uöt32_t
)char_ptr & ((uint32_t)3)) != 0; ++char_ptr)

315 i‡(*
ch¨_±r
 == '\0')

316  
ch¨_±r
 - 
°r
;

322 
l⁄gw‹d_±r
 = (
uöt32_t
 *Ë
ch¨_±r
;

334 
himagic
 = 0x80808080L;

335 
lomagic
 = 0x01010101L;

372 
l⁄gw‹d
 = *
l⁄gw‹d_±r
++;

374 i‡(((
l⁄gw‹d
 - 
lomagic
Ë& 
himagic
) != 0)

379 c⁄° *
˝
 = (c⁄° *Ë(
l⁄gw‹d_±r
 - 1);

381 i‡(
˝
[0] == 0)

382  
˝
 - 
°r
;

384 i‡(
˝
[1] == 0)

385  
˝
 - 
°r
 + 1;

387 i‡(
˝
[2] == 0)

388  
˝
 - 
°r
 + 2;

390 i‡(
˝
[3] == 0)

391  
˝
 - 
°r
 + 3;

393 i‡( (
l⁄gw‹d
) > 4)

395 i‡(
˝
[4] == 0)

396  
˝
 - 
°r
 + 4;

398 i‡(
˝
[5] == 0)

399  
˝
 - 
°r
 + 5;

401 i‡(
˝
[6] == 0)

402  
˝
 - 
°r
 + 6;

404 i‡(
˝
[7] == 0)

405  
˝
 - 
°r
 + 7;

409 
	}
}

411 
	$¢¥öt
(*
out
, c⁄° *
f‹m©
, ...)

413 
va_li°
 
¨gs
;

414 
	`va_°¨t
(
¨gs
, 
f‹m©
);

415  
	`v•rötf
(
out
, 
f‹m©
, 
¨gs
);

416 
	}
}

418 
ldiv_t
 
	$ldiv
(
numî
, 
díom
)

420  (
ldiv_t
){.
quŸ
 = 
numî
/
díom
, .
ªm
 =Çumer%denom};

421 
	}
}

423 
	#UNALIGNED
(
X
, 
Y
Ë((()X & ( (Ë- 1)Ë| (()Y & ( (Ë- 1)))

	)

424 
	#TOO_SMALL
(
LEN
Ë((LENË<  ())

	)

425 
	#DETECTNULL
(
X
Ë(((XË- 0x01010101Ë& ~(XË& 0x80808080)

	)

426 *
	$°∫˝y
(*
d°0
, c⁄° *
§c0
, 
size_t
 
cou¡
)

428 #i‡
	`deföed
(
PREFER_SIZE_OVER_SPEED
Ë|| deföed(
__OPTIMIZE_SIZE__
)

429 *
dsˇn
;

430 c⁄° *
ssˇn
;

431 
dsˇn
 = 
d°0
;

432 
ssˇn
 = 
§c0
;

433 
cou¡
 > 0)

435 --
cou¡
;

436 i‡((*
dsˇn
++ = *
ssˇn
++) == '\0')

439 
cou¡
-- > 0)

440 *
dsˇn
++ = '\0';

441  
d°0
;

443 *
d°
 = 
d°0
;

444 c⁄° *
§c
 = 
§c0
;

445 *
Æig√d_d°
;

446 c⁄° *
Æig√d_§c
;

448 i‡(!
	`UNALIGNED
 (
§c
, 
d°
Ë&& !
	`TOO_SMALL
 (
cou¡
))

450 
Æig√d_d°
 = (*)
d°
;

451 
Æig√d_§c
 = (*)
§c
;

454 
cou¡
 > (Ë&& !
	`DETECTNULL
(*
Æig√d_§c
))

456 
cou¡
 -=  ();

457 *
Æig√d_d°
++ = *
Æig√d_§c
++;

459 
d°
 = (*)
Æig√d_d°
;

460 
§c
 = (*)
Æig√d_§c
;

462 
cou¡
 > 0)

464 --
cou¡
;

465 i‡((*
d°
++ = *
§c
++) == '\0')

468 
cou¡
-- > 0)

469 *
d°
++ = '\0';

470  
d°0
;

472 
	}
}

474 *
	$°r˝y
(*
d°0
, c⁄° *
§c0
)

476 #i‡
	`deföed
(
PREFER_SIZE_OVER_SPEED
Ë|| deföed(
__OPTIMIZE_SIZE__
)

477 *
s
 = 
d°0
;

479 *
d°0
++ = *
§c0
++);

481  
s
;

483 *
d°
 = 
d°0
;

484 c⁄° *
§c
 = 
§c0
;

485 *
Æig√d_d°
;

486 c⁄° *
Æig√d_§c
;

489 i‡(!
	`UNALIGNED
 (
§c
, 
d°
))

491 
Æig√d_d°
 = (*)
d°
;

492 
Æig√d_§c
 = (*)
§c
;

496 !
	`DETECTNULL
(*
Æig√d_§c
))

498 *
Æig√d_d°
++ = *
Æig√d_§c
++;

501 
d°
 = (*)
Æig√d_d°
;

502 
§c
 = (*)
Æig√d_§c
;

505 (*
d°
++ = *
§c
++))

507  
d°0
;

509 
	}
}

511 
	$°rcmp
(c⁄° *
s1
, c⁄° *
s2
)

513 #i‡
	`deföed
(
PREFER_SIZE_OVER_SPEED
Ë|| deföed(
__OPTIMIZE_SIZE__
)

514 *
s1
 !'\0' && *s1 =*
s2
)

516 
s1
++;

517 
s2
++;

520  (*(*Ë
s1
Ë- (*(*Ë
s2
);

522 *
a1
;

523 *
a2
;

526 i‡(!
	`UNALIGNED
 (
s1
, 
s2
))

529 
a1
 = (*)
s1
;

530 
a2
 = (*)
s2
;

531 *
a1
 =*
a2
)

535 i‡(
	`DETECTNULL
 (*
a1
))

538 
a1
++;

539 
a2
++;

543 
s1
 = (*)
a1
;

544 
s2
 = (*)
a2
;

547 *
s1
 !'\0' && *s1 =*
s2
)

549 
s1
++;

550 
s2
++;

552  (*(*Ë
s1
Ë- (*(*Ë
s2
);

554 
	}
}

	@D:\EmBitz\GIT\dev\dac.h

	@D:\EmBitz\GIT\dev\dev_cpu.h

1 #i‚de‡
__DEV_CPU_H_INCLUDED__


2 
	#__DEV_CPU_H_INCLUDED__


	)

4 
˝uInô
();

6 
˝uDñay_ms
(
uöt32_t
 
m_£c
);

7 
˝uDñay_us
(
uöt32_t
 
u_£c
);

9 
˝uDißbÀ_úq
();

10 
˝uE«bÀ_úq
();

	@D:\EmBitz\GIT\dev\dev_cpu_stm32l1xx\dev_cpu_stm32l1xx.c

1 
	~"°m32l1xx.h
"

2 
	~"dev_˝u.h
"

4 
	$˝uInô
()

7 
RCC
->
CR
 |
RCC_CR_HSION
;

8 !(
RCC
->
CR
&
RCC_CR_HSIRDY
));

17 
RCC
->
CFGR
 |
RCC_CFGR_PLLSRC_HSI
;

20 
RCC
->
CFGR
 |
RCC_CFGR_PLLMUL4
;

21 
RCC
->
CFGR
 |
RCC_CFGR_PLLDIV2
;

24 
RCC
->
CR
 |
RCC_CR_PLLON
;

25 !(
RCC
->
CR
&
RCC_CR_PLLRDY
));

28 
FLASH
->
ACR
 |
FLASH_ACR_ACC64
;

29 
FLASH
->
ACR
 |
FLASH_ACR_LATENCY
;

30 
FLASH
->
ACR
 |
FLASH_ACR_PRFTEN
;

33 
RCC
->
CFGR
 |
RCC_CFGR_SW_PLL
;

36 
RCC
->
CR
 &~
RCC_CR_MSION
;

37 
	}
}

43 
__INLINE
 
	$˝uTimîInô_ms
()

46 *((
uöt32_t
 *)(0x42000000 + 32*0x23824 + 4)) = 0x01;

48 
TIM3
->
PSC
 = 0x7CFF;

49 
TIM3
->
EGR
 |
TIM_EGR_UG
;

50 
TIM3
->
CR1
 |
TIM_CR1_CEN
;

51 
	}
}

53 
__INLINE
 
	$˝uTimîInô_us
()

56 *((
uöt32_t
 *)(0x42000000 + 32*0x23824 + 4)) = 0x01;

58 
TIM3
->
PSC
 = 0x001F;

59 
TIM3
->
EGR
 |
TIM_EGR_UG
;

60 
TIM3
->
CR1
 |
TIM_CR1_CEN
;

61 
	}
}

63 
__INLINE
 
	$˝uSt›Timî
()

65 
TIM3
->
CR1
 &~
TIM_CR1_CEN
;

67 *((
uöt32_t
 *)(0x42000000 + 32*0x23824 + 4)) = 0x00;

68 
	}
}

70 
	$˝uDñay_ms
(
uöt32_t
 
m_£c
)

72 
	`˝uTimîInô_ms
();

74 vﬁ©ûê
uöt32_t
 
°¨t
 = 
TIM3
->
CNT
;

75 (
TIM3
->
CNT
-
°¨t
Ë<
m_£c
);

77 
	`˝uSt›Timî
();

78 
	}
}

80 
	$˝uDñay_us
(
uöt32_t
 
u_£c
)

82 
	`˝uTimîInô_us
();

84 vﬁ©ûê
uöt32_t
 
°¨t
 = 
TIM3
->
CNT
;

85 (
TIM3
->
CNT
-
°¨t
Ë<
u_£c
);

87 
	`˝uSt›Timî
();

88 
	}
}

90 
__INLINE
 
	$˝uDißbÀ_úq
()

92 
__ASM
 volatile ("cpsid i");

93 
	}
}

95 
__INLINE
 
	$˝uE«bÀ_úq
()

97 
__ASM
 volatile ("cpsie i");

98 
	}
}

	@D:\EmBitz\GIT\dev\dev_dac_stm32l1xx\dev_dac_stm32l1xx.c

1 
	~"°m32l1xx.h
"

2 
	~"dac.h
"

	@D:\EmBitz\GIT\dev\dev_gpio_stm32l1xx\dev_gpio_stm32l1xx.c

1 
	~"°m32l1xx.h
"

2 
	~"gpio.h
"

4 
	#NULL
 ((*)0)

	)

6 
uöt16_t
 
	ggpio_p‹ts
[8];

7 
GpioIrqH™dÀr
 *
	gGpioIrq
[16];

9 
	$GpioInô
(
Gpio_t
 *
obj
, 
PöModes
 
mode
, 
PöC⁄figs
 
c⁄fig
, 
PöTy≥s
 
ty≥
, 
uöt8_t
 
vÆue
)

11 
uöt32_t
 
gpio_ªg
;

16 *((
uöt32_t
 *)(0x42470380 + ((uöt32_t)((
obj
->
p‹tIndex
) << 2)))) = 0x01;

20 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (((uöt32_t)(obj->
pöIndex
))*2*4);

21 *((
uöt32_t
 *)(
gpio_ªg
)Ë
mode
 & 0x01;

22 *((
uöt32_t
 *)(
gpio_ªg
 + 4)Ë(
mode
 >> 1) & 0x01;

25 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (32*0x04Ë+ (((uöt32_t)(obj->
pöIndex
))*4);

26 *((
uöt32_t
 *)(
gpio_ªg
)Ë
c⁄fig
 & 0x01;

29 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (32*0x08Ë+ (((uöt32_t)(obj->
pöIndex
))*2*4);

30 *((
uöt32_t
 *)(
gpio_ªg
)) = 0x01;

31 *((
uöt32_t
 *)(
gpio_ªg
 + 4)) = 0x01;

34 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (32*0x0CË+ (((uöt32_t)(obj->
pöIndex
))*2*4);

35 *((
uöt32_t
 *)(
gpio_ªg
)Ë
ty≥
 & 0x01;

36 *((
uöt32_t
 *)(
gpio_ªg
 + 4)Ë(
ty≥
 >> 1) & 0x01;

39 
gpio_p‹ts
[
obj
->
p‹tIndex
] |(
uöt16_t
)(1 << (obj->
pöIndex
));

42 if(
mode
 =
PIN_OUTPUT
) {

43 
	`GpioWrôe
(
obj
, 
vÆue
);

45 
	}
}

47 
	$GpioDeInô
(
Gpio_t
 *
obj
)

49 
uöt32_t
 
gpio_ªg
;

51 
	`GpioRemoveI¡îru±
(
obj
);

54 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (((uöt32_t)(obj->
pöIndex
))*2*4);

55 *((
uöt32_t
 *)(
gpio_ªg
)) = 0x00;

56 *((
uöt32_t
 *)(
gpio_ªg
 + 4)) = 0x00;

59 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (32*0x04Ë+ (((uöt32_t)(obj->
pöIndex
))*4);

60 *((
uöt32_t
 *)(
gpio_ªg
)) = 0x00;

63 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (32*0x08Ë+ (((uöt32_t)(obj->
pöIndex
))*2*4);

64 *((
uöt32_t
 *)(
gpio_ªg
)) = 0x00;

65 *((
uöt32_t
 *)(
gpio_ªg
 + 4)) = 0x00;

68 
gpio_ªg
 = 0x42400000 + (32*(0x400*((
uöt32_t
)
obj
->
p‹tIndex
))Ë+ (32*0x0CË+ (((uöt32_t)(obj->
pöIndex
))*2*4);

69 *((
uöt32_t
 *)(
gpio_ªg
)) = 0x00;

70 *((
uöt32_t
 *)(
gpio_ªg
 + 4)) = 0x00;

72 
gpio_ªg
 = (
AHBPERIPH_BASE
 + 0x400*(
obj
->
p‹tIndex
));

73 ((
GPIO_Ty≥Def
 *)
gpio_ªg
)->
BSRRH
 = 1 << (
obj
->
pöIndex
);

76 
gpio_p‹ts
[
obj
->
p‹tIndex
] &~((
uöt16_t
)(1 << (obj->
pöIndex
)));

79 i‡(
gpio_p‹ts
[
obj
->
p‹tIndex
] == 0)

82 *((
uöt32_t
 *)(0x42470380 + ((uöt32_t)((
obj
->
p‹tIndex
) << 2)))) = 0x00;

84 
	}
}

86 
	$GpioSëI¡îru±
(
Gpio_t
 *
obj
, 
IrqModes
 
úqMode
, 
IrqPri‹ôõs
 
úqPri‹ôy
, 
GpioIrqH™dÀr
 *
úqH™dÀr
)

90 if(
úqH™dÀr
 =
NULL
) {

94 
GpioIrq
[
obj
->
pöIndex
 & 0x0F] = 
úqH™dÀr
;

99 *((
uöt32_t
 *)(0x42470400)) = 0x01;

111 
SYSCFG
->
EXTICR
[(
obj
->
pöIndex
 >> 2)] |(obj->
p‹tIndex
) << 4*( obj->pinIndex - (obj->pinIndex >> 2)*4 );

116 *((
uöt32_t
 *)(0x42208000 + 4*(
obj
->
pöIndex
))) = 0x01;

118 if(
úqMode
 =
NO_IRQ
) {

126 *((
uöt32_t
 *)(0x42208100 + 4*(
obj
->
pöIndex
))Ë
úqMode
 & 0x01;

128 *((
uöt32_t
 *)(0x42208100 + (32*0x04Ë+ 4*(
obj
->
pöIndex
))Ë(
úqMode
 >> 1) & 0x01;

130 if(
obj
->
pöIndex
 < 5) {

131 
	`NVIC_E«bÀIRQ
(
EXTI0_IRQn
 + 
obj
->
pöIndex
);

132 
	`NVIC_SëPri‹ôy
(
EXTI0_IRQn
 + 
obj
->
pöIndex
, 
úqPri‹ôy
);

133 } if(
obj
->
pöIndex
 < 10) {

134 
	`NVIC_E«bÀIRQ
(
EXTI9_5_IRQn
);

135 
	`NVIC_SëPri‹ôy
(
EXTI9_5_IRQn
, 
úqPri‹ôy
);

137 
	`NVIC_E«bÀIRQ
(
EXTI15_10_IRQn
);

138 
	`NVIC_SëPri‹ôy
(
EXTI15_10_IRQn
, 
úqPri‹ôy
);

140 
	}
}

142 
	$GpioRemoveI¡îru±
(
Gpio_t
 *
obj
)

144 
uöt8_t
 
i
;

146 
GpioIrq
[
obj
->
pöIndex
 & 0x0F] = 
NULL
;

151 *((
uöt32_t
 *)(0x42208000 + 4*(
obj
->
pöIndex
))) = 0x00;

153 
SYSCFG
->
EXTICR
[(
obj
->
pöIndex
 >> 2)] &= ~( (0x07) << 4*( obj->pinIndex - (obj->pinIndex >> 2)*4 ) );

158 *((
uöt32_t
 *)(0x42208100 + 4*(
obj
->
pöIndex
))) = 0x00;

160 *((
uöt32_t
 *)(0x42208100 + (32*0x04Ë+ 4*(
obj
->
pöIndex
))) = 0x00;

162 if(
obj
->
pöIndex
 < 5) {

163 
	`NVIC_DißbÀIRQ
(
EXTI0_IRQn
 + 
obj
->
pöIndex
);

164 } if(
obj
->
pöIndex
 < 10) {

165 if(!
GpioIrq
[5] && !GpioIrq[6] && !GpioIrq[7] && !GpioIrq[8] && !GpioIrq[9]) {

166 
	`NVIC_DißbÀIRQ
(
EXTI9_5_IRQn
);

169 if(!
GpioIrq
[10] && !GpioIrq[11] && !GpioIrq[12] && !GpioIrq[13] && !GpioIrq[14] && !GpioIrq[15]) {

170 
	`NVIC_DißbÀIRQ
(
EXTI15_10_IRQn
);

174 
i
=0; i<15; i++) {

175 if(
GpioIrq
[
i
]) {

183 *((
uöt32_t
 *)(0x42470400)) = 0x00;

184 
	}
}

186 
__INLINE
 
	$GpioWrôe
(
Gpio_t
 *
obj
, 
uöt8_t
 
vÆue
)

188 
uöt32_t
 
gpio_ªg
;

190 
gpio_ªg
 = (
AHBPERIPH_BASE
 + 0x400*(
obj
->
p‹tIndex
));

192 if–
vÆue
 == 0 ) {

193 ((
GPIO_Ty≥Def
 *)
gpio_ªg
)->
BSRRH
 = 1 << (
obj
->
pöIndex
);

195 ((
GPIO_Ty≥Def
 *)
gpio_ªg
)->
BSRRL
 = 1 << (
obj
->
pöIndex
);

197 
	}
}

199 
__INLINE
 
uöt8_t
 
	$GpioRód
(
Gpio_t
 *
obj
)

201 
uöt32_t
 
gpio_ªg
;

203 
gpio_ªg
 = (
AHBPERIPH_BASE
 + 0x400*(
obj
->
p‹tIndex
));

205  !!–(((
GPIO_Ty≥Def
 *)
gpio_ªg
)->
IDR
Ë& (1 << 
obj
->
pöIndex
) );

206 
	}
}

209 
	$EXTI0_IRQH™dÀr
()

211 if(
EXTI
->
PR
 & (1<<0)) {

212 if(
GpioIrq
[0] !
NULL
) {

213 
GpioIrq
[0]( );

216 *((
uöt32_t
 *)(0x42208280 + 4*0)) = 0x01;

218 
	}
}

220 
	$EXTI1_IRQH™dÀr
()

222 if(
EXTI
->
PR
 & (1<<1)) {

223 if(
GpioIrq
[1] !
NULL
) {

224 
GpioIrq
[1]( );

227 *((
uöt32_t
 *)(0x42208280 + 4*1)) = 0x01;

229 
	}
}

231 
	$EXTI2_IRQH™dÀr
()

233 if(
EXTI
->
PR
 & (1<<2)) {

234 if(
GpioIrq
[2] !
NULL
) {

235 
GpioIrq
[2]( );

238 *((
uöt32_t
 *)(0x42208280 + 4*2)) = 0x01;

240 
	}
}

242 
	$EXTI3_IRQH™dÀr
()

244 if(
EXTI
->
PR
 & (1<<3)) {

245 if(
GpioIrq
[3] !
NULL
) {

246 
GpioIrq
[3]( );

249 *((
uöt32_t
 *)(0x42208280 + 4*3)) = 0x01;

251 
	}
}

253 
	$EXTI4_IRQH™dÀr
()

255 if(
EXTI
->
PR
 & (1<<4)) {

256 if(
GpioIrq
[4] !
NULL
) {

257 
GpioIrq
[4]( );

260 *((
uöt32_t
 *)(0x42208280 + 4*4)) = 0x01;

262 
	}
}

265 
	$EXTI9_5_IRQH™dÀr
( )

267 
uöt8_t
 
i
;

269 
i
=5; i < 10; i++) {

270 if(
EXTI
->
PR
 & (1<<
i
)) {

271 if(
GpioIrq
[
i
] !
NULL
) {

272 
GpioIrq
[
i
]( );

275 *((
uöt32_t
 *)(0x42208280 + 4*
i
)) = 0x01;

278 
	}
}

280 
	$EXTI15_10_IRQH™dÀr
( )

282 
uöt8_t
 
i
;

284 
i
=10; i < 16; i++) {

285 if(
EXTI
->
PR
 & (1<<
i
)) {

286 if(
GpioIrq
[
i
] !
NULL
) {

287 
GpioIrq
[
i
]( );

290 *((
uöt32_t
 *)(0x42208280 + 4*
i
)) = 0x01;

293 
	}
}

	@D:\EmBitz\GIT\dev\dev_hw_timer.h

1 #i‚de‡
__DEV_HW_TIMER_H__


2 
	#__DEV_HW_TIMER_H__


	)

5 #i‚de‡
TimîTime_t


6 
uöt32_t
 
	tTimîTime_t
;

14 
TimîHwInô
();

17 
TimîHwDeInô
();

23 
uöt32_t
 
TimîHwGëMöimumTimeout
();

29 
TimîHwSèπ
(
uöt32_t
 
vÆ
);

32 
TimîHwSt›
();

35 
TimîTime_t
 
TimîHwGëTimîVÆue
();

38 
TimîTime_t
 
TimîHwGëTime
();

41 
TimîTime_t
 
TimîHwGëEœp£dTime
();

43 
TimîIrqH™dÀr
();

	@D:\EmBitz\GIT\dev\dev_hw_timer_stm32l1xx\dev_hw_timer_stm32l1xx.c

1 
	~<°m32l1xx.h
>

2 
	~"dev_hw_timî.h
"

5 
	#HW_TIMER_TIME_BASE
 100

6 

	)

8 vﬁ©ûê
TimîTime_t
 
	gTimîTickCou¡î
 = 1;

11 
TimîTime_t
 
	gTimîTickCou¡îC⁄ãxt
 = 0;

14 vﬁ©ûê
TimîTime_t
 
	gTimeoutC¡VÆue
 = 0;

16 
	$TimîHwInô
()

20 *((
uöt32_t
 *)(0x42000000 + 32*0x23824)) = 0x01;

24 
	`NVIC_SëPri‹ôy
(
TIM2_IRQn
, 1);

25 
	`NVIC_E«bÀIRQ
(
TIM2_IRQn
);

27 
TimeoutC¡VÆue
 = 0;

30 
TIM2
->
PSC
 = 0;

31 
TIM2
->
ARR
 = 3199;

32 
TIM2
->
DIER
 |
TIM_DIER_UIE
;

33 
TIM2
->
EGR
 |
TIM_EGR_UG
;

34 
TIM2
->
SR
 &~
TIM_SR_UIF
;

37 
TIM2
->
CR1
 |
TIM_CR1_CEN
;

38 
	}
}

40 
	$TimîHwDeInô
()

42 
	`NVIC_DißbÀIRQ
(
TIM2_IRQn
);

43 
TIM2
->
CR1
 &~
TIM_CR1_CEN
;

46 *((
uöt32_t
 *)(0x42000000 + 32*0x23824)) = 0x00;

47 
	}
}

49 
uöt32_t
 
	$TimîHwGëMöimumTimeout
()

51  (2 * 
HW_TIMER_TIME_BASE
);

52 
	}
}

54 
	$TimîHwSèπ
(
uöt32_t
 
vÆ
)

56 
TIM2
->
SR
 &~
TIM_SR_UIF
;

57 
TIM2
->
CR1
 |
TIM_CR1_CEN
;

59 
TimîTickCou¡îC⁄ãxt
 = 
	`TimîHwGëTimîVÆue
();

61 if(
vÆ
 <
HW_TIMER_TIME_BASE
 + 1) {

62 
TimeoutC¡VÆue
 = 
TimîTickCou¡îC⁄ãxt
 + 1;

64 
TimeoutC¡VÆue
 = 
TimîTickCou¡îC⁄ãxt
 + ((
vÆ
 - 1Ë/ 
HW_TIMER_TIME_BASE
);

66 
	}
}

68 
	$TimîHwSt›
()

71 
TIM2
->
CR1
 &~
TIM_CR1_CEN
;

72 
TIM2
->
SR
 &~
TIM_SR_UIF
;

73 
	}
}

75 
TimîTime_t
 
	$TimîHwGëEœp£dTime
()

77  (((
	`TimîHwGëTimîVÆue
(Ë- 
TimîTickCou¡îC⁄ãxt
Ë+ 1Ë* 
HW_TIMER_TIME_BASE
);

78 
	}
}

80 
TimîTime_t
 
	$TimîHwGëTimîVÆue
()

82 
TimîTime_t
 
vÆ
 = 0;

84 
	`__dißbÀ_úq
();

85 
vÆ
 = 
TimîTickCou¡î
;

86 
	`__íabÀ_úq
();

88  
vÆ
;

89 
	}
}

91 
TimîTime_t
 
	$TimîHwGëTime
()

93  (
	`TimîHwGëTimîVÆue
(Ë* 
HW_TIMER_TIME_BASE
);

94 
	}
}

97 
__INLINE
 
	$TimîIn¸emítTickCou¡î
()

99 
	`__dißbÀ_úq
();

100 
TimîTickCou¡î
++;

101 
	`__íabÀ_úq
();

102 
	}
}

105 
	$TIM2_IRQH™dÀr
()

107 if(
TIM2
->
SR
 & 
TIM_SR_UIF
) {

108 
	`TimîIn¸emítTickCou¡î
();

109 
TIM2
->
SR
 &~
TIM_SR_UIF
;

111 if(
TimîTickCou¡î
 =
TimeoutC¡VÆue
) {

112 
	`TimîIrqH™dÀr
();

115 
	}
}

	@D:\EmBitz\GIT\dev\gpio.h

19 #i‚de‡
__GPIO_H__


20 
	#__GPIO_H__


	)

27 
	mPIN_INPUT
 = 0,

28 
	mPIN_OUTPUT
,

29 
	mPIN_ALTERNATE_FCT
,

30 
	mPIN_ANALOGIC


31 }
	tPöModes
;

38 
	mPIN_NO_PULL
 = 0,

39 
	mPIN_PULL_UP
,

40 
	mPIN_PULL_DOWN


41 }
	tPöTy≥s
;

48 
	mPIN_PUSH_PULL
 = 0,

49 
	mPIN_OPEN_DRAIN


50 }
	tPöC⁄figs
;

57 
	mNO_IRQ
 = 0,

58 
	mIRQ_RISING_EDGE
,

59 
	mIRQ_FALLING_EDGE
,

60 
	mIRQ_RISING_FALLING_EDGE


61 }
	tIrqModes
;

68 
	mIRQ_VERY_LOW_PRIORITY
 = 15,

69 
	mIRQ_LOW_PRIORITY
 = 12,

70 
	mIRQ_MEDIUM_PRIORITY
 = 8,

71 
	mIRQ_HIGH_PRIORITY
 = 4,

72 
	mIRQ_VERY_HIGH_PRIORITY
 = 0

73 }
	tIrqPri‹ôõs
;

80 
uöt8_t
 
	mpöIndex
;

81 
uöt8_t
 
	mp‹tIndex
;

82 }
	tGpio_t
;

87 (
	tGpioIrqH™dÀr
)();

99 
	`GpioInô
(
Gpio_t
 *
obj
, 
PöModes
 
mode
, 
PöC⁄figs
 
c⁄fig
, 
PöTy≥s
 
ty≥
, 
uöt8_t
 
vÆue
);

106 
	`GpioDeInô
(
Gpio_t
 *
obj
);

119 
	`GpioSëI¡îru±
(
Gpio_t
 *
obj
, 
IrqModes
 
úqMode
, 
IrqPri‹ôõs
 
úqPri‹ôy
, 
GpioIrqH™dÀr
 *
úqH™dÀr
);

126 
	`GpioRemoveI¡îru±
(
Gpio_t
 *
obj
);

134 
	`GpioWrôe
(
Gpio_t
 *
obj
, 
uöt8_t
 
vÆue
);

142 
uöt8_t
 
	`GpioRód
(
Gpio_t
 *
obj
);

	@D:\EmBitz\GIT\projects\stm32l1xx_dac\inc\conf_board.h

1 #i‚de‡
__CONF_BOARD_H_INCLUDED__


2 
	#__CONF_BOARD_H_INCLUDED__


	)

4 
	~<°dlib.h
>

5 
	~"°m32l1xx.h
"

6 
	~"dev_˝u.h
"

7 
	~"gpio.h
"

8 
	~"dac.h
"

14 
	#BOARD_LED_BLUE_p‹t
 1

15 
	#BOARD_LED_BLUE_pö
 6

	)

16 
	#BOARD_LED_GREEN_p‹t
 1

17 
	#BOARD_LED_GREEN_pö
 7

	)

20 
	#BOARD_BUTTON_p‹t
 0

21 
	#BOARD_BUTTON_pö
 0

	)

	@D:\EmBitz\GIT\projects\stm32l1xx_dac\inc\stm32l1xx.h

54 #i‚de‡
__STM32L1XX_H


55 
	#__STM32L1XX_H


	)

57 #ifde‡
__˝lu•lus


69 #i‡!
deföed
 (
STM32L1XX_MD
Ë&& !deföed (
STM32L1XX_MDP
Ë&& !deföed (
STM32L1XX_HD
)

72 
	#STM32L1XX_HD


	)

85 #i‡!
deföed
 (
STM32L1XX_MD
Ë&& !deföed (
STM32L1XX_MDP
Ë&& !deföed (
STM32L1XX_HD
)

89 #i‡!
deföed
 
USE_STDPERIPH_DRIVER


105 #i‡!
deföed
 (
HSE_VALUE
)

106 
	#HSE_VALUE
 ((
uöt32_t
)8000000Ë

	)

113 #i‡!
deföed
 (
HSE_STARTUP_TIMEOUT
)

114 
	#HSE_STARTUP_TIMEOUT
 ((
uöt16_t
)0x0500Ë

	)

121 #i‡!
deföed
 (
HSI_STARTUP_TIMEOUT
)

122 
	#HSI_STARTUP_TIMEOUT
 ((
uöt16_t
)0x0500Ë

	)

125 #i‡!
deföed
 (
HSI_VALUE
)

126 
	#HSI_VALUE
 ((
uöt32_t
)16000000Ë

	)

131 #i‡!
deföed
 (
LSI_VALUE
)

132 
	#LSI_VALUE
 ((
uöt32_t
)37000Ë

	)

137 #i‡!
deföed
 (
LSE_VALUE
)

138 
	#LSE_VALUE
 ((
uöt32_t
)32768Ë

	)

144 
	#__STM32L1XX_STDPERIPH_VERSION_MAIN
 (0x01Ë

	)

145 
	#__STM32L1XX_STDPERIPH_VERSION_SUB1
 (0x01Ë

	)

146 
	#__STM32L1XX_STDPERIPH_VERSION_SUB2
 (0x01Ë

	)

147 
	#__STM32L1XX_STDPERIPH_VERSION_RC
 (0x00Ë

	)

148 
	#__STM32L1XX_STDPERIPH_VERSION
 ( (
__STM32L1XX_STDPERIPH_VERSION_MAIN
 << 24)\

149 |(
__STM32L1XX_STDPERIPH_VERSION_SUB1
 << 16)\

150 |(
__STM32L1XX_STDPERIPH_VERSION_SUB2
 << 8)\

151 |(
__STM32L1XX_STDPERIPH_VERSION_RC
))

	)

165 
	#__CM3_REV
 0x200

	)

166 
	#__MPU_PRESENT
 1

	)

167 
	#__NVIC_PRIO_BITS
 4

	)

168 
	#__Víd‹_SysTickC⁄fig
 0

	)

171 
	eIRQn


174 
N⁄MaskabÀI¡_IRQn
 = -14,

175 
Mem‹yM™agemít_IRQn
 = -12,

176 
BusFau…_IRQn
 = -11,

177 
UßgeFau…_IRQn
 = -10,

178 
SVC_IRQn
 = -5,

179 
DebugM⁄ô‹_IRQn
 = -4,

180 
PídSV_IRQn
 = -2,

181 
SysTick_IRQn
 = -1,

184 
WWDG_IRQn
 = 0,

185 
PVD_IRQn
 = 1,

186 
TAMPER_STAMP_IRQn
 = 2,

187 
RTC_WKUP_IRQn
 = 3,

188 
FLASH_IRQn
 = 4,

189 
RCC_IRQn
 = 5,

190 
EXTI0_IRQn
 = 6,

191 
EXTI1_IRQn
 = 7,

192 
EXTI2_IRQn
 = 8,

193 
EXTI3_IRQn
 = 9,

194 
EXTI4_IRQn
 = 10,

195 
DMA1_Ch™√l1_IRQn
 = 11,

196 
DMA1_Ch™√l2_IRQn
 = 12,

197 
DMA1_Ch™√l3_IRQn
 = 13,

198 
DMA1_Ch™√l4_IRQn
 = 14,

199 
DMA1_Ch™√l5_IRQn
 = 15,

200 
DMA1_Ch™√l6_IRQn
 = 16,

201 
DMA1_Ch™√l7_IRQn
 = 17,

202 
ADC1_IRQn
 = 18,

203 
USB_HP_IRQn
 = 19,

204 
USB_LP_IRQn
 = 20,

205 
DAC_IRQn
 = 21,

206 
COMP_IRQn
 = 22,

207 
EXTI9_5_IRQn
 = 23,

208 
LCD_IRQn
 = 24,

209 
TIM9_IRQn
 = 25,

210 
TIM10_IRQn
 = 26,

211 
TIM11_IRQn
 = 27,

212 
TIM2_IRQn
 = 28,

213 
TIM3_IRQn
 = 29,

214 
TIM4_IRQn
 = 30,

215 
I2C1_EV_IRQn
 = 31,

216 
I2C1_ER_IRQn
 = 32,

217 
I2C2_EV_IRQn
 = 33,

218 
I2C2_ER_IRQn
 = 34,

219 
SPI1_IRQn
 = 35,

220 
SPI2_IRQn
 = 36,

221 
USART1_IRQn
 = 37,

222 
USART2_IRQn
 = 38,

223 
USART3_IRQn
 = 39,

224 
EXTI15_10_IRQn
 = 40,

225 
RTC_Aœrm_IRQn
 = 41,

226 
USB_FS_WKUP_IRQn
 = 42,

227 
TIM6_IRQn
 = 43,

228 #ifde‡
STM32L1XX_MD


229 
TIM7_IRQn
 = 44

232 #ifde‡
STM32L1XX_MDP


233 
TIM7_IRQn
 = 44,

234 
TIM5_IRQn
 = 46,

235 
SPI3_IRQn
 = 47,

236 
DMA2_Ch™√l1_IRQn
 = 50,

237 
DMA2_Ch™√l2_IRQn
 = 51,

238 
DMA2_Ch™√l3_IRQn
 = 52,

239 
DMA2_Ch™√l4_IRQn
 = 53,

240 
DMA2_Ch™√l5_IRQn
 = 54,

241 
AES_IRQn
 = 55,

242 
COMP_ACQ_IRQn
 = 56

245 #ifde‡
STM32L1XX_HD


246 
TIM7_IRQn
 = 44,

247 
SDIO_IRQn
 = 45,

248 
TIM5_IRQn
 = 46,

249 
SPI3_IRQn
 = 47,

250 
UART4_IRQn
 = 48,

251 
UART5_IRQn
 = 49,

252 
DMA2_Ch™√l1_IRQn
 = 50,

253 
DMA2_Ch™√l2_IRQn
 = 51,

254 
DMA2_Ch™√l3_IRQn
 = 52,

255 
DMA2_Ch™√l4_IRQn
 = 53,

256 
DMA2_Ch™√l5_IRQn
 = 54,

257 
AES_IRQn
 = 55,

258 
COMP_ACQ_IRQn
 = 56

260 } 
	tIRQn_Ty≥
;

266 
	~"c‹e_cm3.h
"

267 
	~"sy°em_°m32l1xx.h
"

268 
	~<°döt.h
>

274 íum {
RESET
 = 0, 
SET
 = !RESET} 
	tFœgSètus
, 
	tITSètus
;

276 íum {
DISABLE
 = 0, 
ENABLE
 = !DISABLE} 
	tFun˘i⁄ÆSèã
;

277 
	#IS_FUNCTIONAL_STATE
(
STATE
Ë(((STATEË=
DISABLE
Ë|| ((STATEË=
ENABLE
))

	)

279 íum {
ERROR
 = 0, 
SUCCESS
 = !ERROR} 
	tEº‹Sètus
;

284 #i‡
deföed
 ( 
__CC_ARM
 )

294 
	#__RAM_FUNC
 
FLASH_Sètus


	)

296 #ñi‡
deföed
 ( 
__ICCARM__
 )

301 
	#__RAM_FUNC
 
__ømfunc
 
FLASH_Sètus


	)

303 #ñi‡
deföed
 ( 
__GNUC__
 )

309 
	#__RAM_FUNC
 
FLASH_Sètus
 
	`__©åibuã__
((
	`£˘i⁄
(".d©a")))

	)

311 #ñi‡
deföed
 ( 
__TASKING__
 )

317 
	#__RAM_FUNC
 
FLASH_Sètus


	)

335 
__IO
 
uöt32_t
 
SR
;

336 
__IO
 
uöt32_t
 
CR1
;

337 
__IO
 
uöt32_t
 
CR2
;

338 
__IO
 
uöt32_t
 
SMPR1
;

339 
__IO
 
uöt32_t
 
SMPR2
;

340 
__IO
 
uöt32_t
 
SMPR3
;

341 
__IO
 
uöt32_t
 
JOFR1
;

342 
__IO
 
uöt32_t
 
JOFR2
;

343 
__IO
 
uöt32_t
 
JOFR3
;

344 
__IO
 
uöt32_t
 
JOFR4
;

345 
__IO
 
uöt32_t
 
HTR
;

346 
__IO
 
uöt32_t
 
LTR
;

347 
__IO
 
uöt32_t
 
SQR1
;

348 
__IO
 
uöt32_t
 
SQR2
;

349 
__IO
 
uöt32_t
 
SQR3
;

350 
__IO
 
uöt32_t
 
SQR4
;

351 
__IO
 
uöt32_t
 
SQR5
;

352 
__IO
 
uöt32_t
 
JSQR
;

353 
__IO
 
uöt32_t
 
JDR1
;

354 
__IO
 
uöt32_t
 
JDR2
;

355 
__IO
 
uöt32_t
 
JDR3
;

356 
__IO
 
uöt32_t
 
JDR4
;

357 
__IO
 
uöt32_t
 
DR
;

358 
__IO
 
uöt32_t
 
SMPR0
;

359 } 
	tADC_Ty≥Def
;

363 
__IO
 
uöt32_t
 
CSR
;

364 
__IO
 
uöt32_t
 
CCR
;

365 } 
	tADC_Comm⁄_Ty≥Def
;

374 
__IO
 
uöt32_t
 
CR
;

375 
__IO
 
uöt32_t
 
SR
;

376 
__IO
 
uöt32_t
 
DINR
;

377 
__IO
 
uöt32_t
 
DOUTR
;

378 
__IO
 
uöt32_t
 
KEYR0
;

379 
__IO
 
uöt32_t
 
KEYR1
;

380 
__IO
 
uöt32_t
 
KEYR2
;

381 
__IO
 
uöt32_t
 
KEYR3
;

382 
__IO
 
uöt32_t
 
IVR0
;

383 
__IO
 
uöt32_t
 
IVR1
;

384 
__IO
 
uöt32_t
 
IVR2
;

385 
__IO
 
uöt32_t
 
IVR3
;

386 } 
	tAES_Ty≥Def
;

394 
__IO
 
uöt32_t
 
CSR
;

395 } 
	tCOMP_Ty≥Def
;

403 
__IO
 
uöt32_t
 
DR
;

404 
__IO
 
uöt8_t
 
IDR
;

405 
uöt8_t
 
RESERVED0
;

406 
uöt16_t
 
RESERVED1
;

407 
__IO
 
uöt32_t
 
CR
;

408 } 
	tCRC_Ty≥Def
;

416 
__IO
 
uöt32_t
 
CR
;

417 
__IO
 
uöt32_t
 
SWTRIGR
;

418 
__IO
 
uöt32_t
 
DHR12R1
;

419 
__IO
 
uöt32_t
 
DHR12L1
;

420 
__IO
 
uöt32_t
 
DHR8R1
;

421 
__IO
 
uöt32_t
 
DHR12R2
;

422 
__IO
 
uöt32_t
 
DHR12L2
;

423 
__IO
 
uöt32_t
 
DHR8R2
;

424 
__IO
 
uöt32_t
 
DHR12RD
;

425 
__IO
 
uöt32_t
 
DHR12LD
;

426 
__IO
 
uöt32_t
 
DHR8RD
;

427 
__IO
 
uöt32_t
 
DOR1
;

428 
__IO
 
uöt32_t
 
DOR2
;

429 
__IO
 
uöt32_t
 
SR
;

430 } 
	tDAC_Ty≥Def
;

438 
__IO
 
uöt32_t
 
IDCODE
;

439 
__IO
 
uöt32_t
 
CR
;

440 
__IO
 
uöt32_t
 
APB1FZ
;

441 
__IO
 
uöt32_t
 
APB2FZ
;

442 }
	tDBGMCU_Ty≥Def
;

450 
__IO
 
uöt32_t
 
CCR
;

451 
__IO
 
uöt32_t
 
CNDTR
;

452 
__IO
 
uöt32_t
 
CPAR
;

453 
__IO
 
uöt32_t
 
CMAR
;

454 } 
	tDMA_Ch™√l_Ty≥Def
;

458 
__IO
 
uöt32_t
 
ISR
;

459 
__IO
 
uöt32_t
 
IFCR
;

460 } 
	tDMA_Ty≥Def
;

468 
__IO
 
uöt32_t
 
IMR
;

469 
__IO
 
uöt32_t
 
EMR
;

470 
__IO
 
uöt32_t
 
RTSR
;

471 
__IO
 
uöt32_t
 
FTSR
;

472 
__IO
 
uöt32_t
 
SWIER
;

473 
__IO
 
uöt32_t
 
PR
;

474 } 
	tEXTI_Ty≥Def
;

482 
__IO
 
uöt32_t
 
ACR
;

483 
__IO
 
uöt32_t
 
PECR
;

484 
__IO
 
uöt32_t
 
PDKEYR
;

485 
__IO
 
uöt32_t
 
PEKEYR
;

486 
__IO
 
uöt32_t
 
PRGKEYR
;

487 
__IO
 
uöt32_t
 
OPTKEYR
;

488 
__IO
 
uöt32_t
 
SR
;

489 
__IO
 
uöt32_t
 
OBR
;

490 
__IO
 
uöt32_t
 
WRPR
;

491 
uöt32_t
 
RESERVED
[23];

492 
__IO
 
uöt32_t
 
WRPR1
;

493 
__IO
 
uöt32_t
 
WRPR2
;

494 } 
	tFLASH_Ty≥Def
;

502 
__IO
 
uöt32_t
 
RDP
;

503 
__IO
 
uöt32_t
 
USER
;

504 
__IO
 
uöt32_t
 
WRP01
;

505 
__IO
 
uöt32_t
 
WRP23
;

506 
__IO
 
uöt32_t
 
WRP45
;

507 
__IO
 
uöt32_t
 
WRP67
;

508 
__IO
 
uöt32_t
 
WRP89
;

509 
__IO
 
uöt32_t
 
WRP1011
;

510 } 
	tOB_Ty≥Def
;

518 
__IO
 
uöt32_t
 
CSR
;

519 
__IO
 
uöt32_t
 
OTR
;

520 
__IO
 
uöt32_t
 
LPOTR
;

521 } 
	tOPAMP_Ty≥Def
;

529 
__IO
 
uöt32_t
 
BTCR
[8];

530 } 
	tFSMC_B™k1_Ty≥Def
;

538 
__IO
 
uöt32_t
 
BWTR
[7];

539 } 
	tFSMC_B™k1E_Ty≥Def
;

547 
__IO
 
uöt32_t
 
MODER
;

548 
__IO
 
uöt16_t
 
OTYPER
;

549 
uöt16_t
 
RESERVED0
;

550 
__IO
 
uöt32_t
 
OSPEEDR
;

551 
__IO
 
uöt32_t
 
PUPDR
;

552 
__IO
 
uöt16_t
 
IDR
;

553 
uöt16_t
 
RESERVED1
;

554 
__IO
 
uöt16_t
 
ODR
;

555 
uöt16_t
 
RESERVED2
;

556 
__IO
 
uöt16_t
 
BSRRL
;

557 
__IO
 
uöt16_t
 
BSRRH
;

558 
__IO
 
uöt32_t
 
LCKR
;

559 
__IO
 
uöt32_t
 
AFR
[2];

560 
__IO
 
uöt16_t
 
BRR
;

561 
uöt16_t
 
RESERVED3
;

562 } 
	tGPIO_Ty≥Def
;

570 
__IO
 
uöt32_t
 
MEMRMP
;

571 
__IO
 
uöt32_t
 
PMC
;

572 
__IO
 
uöt32_t
 
EXTICR
[4];

573 } 
	tSYSCFG_Ty≥Def
;

581 
__IO
 
uöt16_t
 
CR1
;

582 
uöt16_t
 
RESERVED0
;

583 
__IO
 
uöt16_t
 
CR2
;

584 
uöt16_t
 
RESERVED1
;

585 
__IO
 
uöt16_t
 
OAR1
;

586 
uöt16_t
 
RESERVED2
;

587 
__IO
 
uöt16_t
 
OAR2
;

588 
uöt16_t
 
RESERVED3
;

589 
__IO
 
uöt16_t
 
DR
;

590 
uöt16_t
 
RESERVED4
;

591 
__IO
 
uöt16_t
 
SR1
;

592 
uöt16_t
 
RESERVED5
;

593 
__IO
 
uöt16_t
 
SR2
;

594 
uöt16_t
 
RESERVED6
;

595 
__IO
 
uöt16_t
 
CCR
;

596 
uöt16_t
 
RESERVED7
;

597 
__IO
 
uöt16_t
 
TRISE
;

598 
uöt16_t
 
RESERVED8
;

599 } 
	tI2C_Ty≥Def
;

607 
__IO
 
uöt32_t
 
KR
;

608 
__IO
 
uöt32_t
 
PR
;

609 
__IO
 
uöt32_t
 
RLR
;

610 
__IO
 
uöt32_t
 
SR
;

611 } 
	tIWDG_Ty≥Def
;

620 
__IO
 
uöt32_t
 
CR
;

621 
__IO
 
uöt32_t
 
FCR
;

622 
__IO
 
uöt32_t
 
SR
;

623 
__IO
 
uöt32_t
 
CLR
;

624 
uöt32_t
 
RESERVED
;

625 
__IO
 
uöt32_t
 
RAM
[16];

626 } 
	tLCD_Ty≥Def
;

634 
__IO
 
uöt32_t
 
CR
;

635 
__IO
 
uöt32_t
 
CSR
;

636 } 
	tPWR_Ty≥Def
;

644 
__IO
 
uöt32_t
 
CR
;

645 
__IO
 
uöt32_t
 
ICSCR
;

646 
__IO
 
uöt32_t
 
CFGR
;

647 
__IO
 
uöt32_t
 
CIR
;

648 
__IO
 
uöt32_t
 
AHBRSTR
;

649 
__IO
 
uöt32_t
 
APB2RSTR
;

650 
__IO
 
uöt32_t
 
APB1RSTR
;

651 
__IO
 
uöt32_t
 
AHBENR
;

652 
__IO
 
uöt32_t
 
APB2ENR
;

653 
__IO
 
uöt32_t
 
APB1ENR
;

654 
__IO
 
uöt32_t
 
AHBLPENR
;

655 
__IO
 
uöt32_t
 
APB2LPENR
;

656 
__IO
 
uöt32_t
 
APB1LPENR
;

657 
__IO
 
uöt32_t
 
CSR
;

658 } 
	tRCC_Ty≥Def
;

666 
__IO
 
uöt32_t
 
ICR
;

667 
__IO
 
uöt32_t
 
ASCR1
;

668 
__IO
 
uöt32_t
 
ASCR2
;

669 
__IO
 
uöt32_t
 
HYSCR1
;

670 
__IO
 
uöt32_t
 
HYSCR2
;

671 
__IO
 
uöt32_t
 
HYSCR3
;

672 
__IO
 
uöt32_t
 
HYSCR4
;

673 } 
	tRI_Ty≥Def
;

681 
__IO
 
uöt32_t
 
TR
;

682 
__IO
 
uöt32_t
 
DR
;

683 
__IO
 
uöt32_t
 
CR
;

684 
__IO
 
uöt32_t
 
ISR
;

685 
__IO
 
uöt32_t
 
PRER
;

686 
__IO
 
uöt32_t
 
WUTR
;

687 
__IO
 
uöt32_t
 
CALIBR
;

688 
__IO
 
uöt32_t
 
ALRMAR
;

689 
__IO
 
uöt32_t
 
ALRMBR
;

690 
__IO
 
uöt32_t
 
WPR
;

691 
__IO
 
uöt32_t
 
SSR
;

692 
__IO
 
uöt32_t
 
SHIFTR
;

693 
__IO
 
uöt32_t
 
TSTR
;

694 
__IO
 
uöt32_t
 
TSDR
;

695 
__IO
 
uöt32_t
 
TSSSR
;

696 
__IO
 
uöt32_t
 
CALR
;

697 
__IO
 
uöt32_t
 
TAFCR
;

698 
__IO
 
uöt32_t
 
ALRMASSR
;

699 
__IO
 
uöt32_t
 
ALRMBSSR
;

700 
uöt32_t
 
RESERVED7
;

701 
__IO
 
uöt32_t
 
BKP0R
;

702 
__IO
 
uöt32_t
 
BKP1R
;

703 
__IO
 
uöt32_t
 
BKP2R
;

704 
__IO
 
uöt32_t
 
BKP3R
;

705 
__IO
 
uöt32_t
 
BKP4R
;

706 
__IO
 
uöt32_t
 
BKP5R
;

707 
__IO
 
uöt32_t
 
BKP6R
;

708 
__IO
 
uöt32_t
 
BKP7R
;

709 
__IO
 
uöt32_t
 
BKP8R
;

710 
__IO
 
uöt32_t
 
BKP9R
;

711 
__IO
 
uöt32_t
 
BKP10R
;

712 
__IO
 
uöt32_t
 
BKP11R
;

713 
__IO
 
uöt32_t
 
BKP12R
;

714 
__IO
 
uöt32_t
 
BKP13R
;

715 
__IO
 
uöt32_t
 
BKP14R
;

716 
__IO
 
uöt32_t
 
BKP15R
;

717 
__IO
 
uöt32_t
 
BKP16R
;

718 
__IO
 
uöt32_t
 
BKP17R
;

719 
__IO
 
uöt32_t
 
BKP18R
;

720 
__IO
 
uöt32_t
 
BKP19R
;

721 
__IO
 
uöt32_t
 
BKP20R
;

722 
__IO
 
uöt32_t
 
BKP21R
;

723 
__IO
 
uöt32_t
 
BKP22R
;

724 
__IO
 
uöt32_t
 
BKP23R
;

725 
__IO
 
uöt32_t
 
BKP24R
;

726 
__IO
 
uöt32_t
 
BKP25R
;

727 
__IO
 
uöt32_t
 
BKP26R
;

728 
__IO
 
uöt32_t
 
BKP27R
;

729 
__IO
 
uöt32_t
 
BKP28R
;

730 
__IO
 
uöt32_t
 
BKP29R
;

731 
__IO
 
uöt32_t
 
BKP30R
;

732 
__IO
 
uöt32_t
 
BKP31R
;

733 } 
	tRTC_Ty≥Def
;

741 
__IO
 
uöt32_t
 
POWER
;

742 
__IO
 
uöt32_t
 
CLKCR
;

743 
__IO
 
uöt32_t
 
ARG
;

744 
__IO
 
uöt32_t
 
CMD
;

745 
__I
 
uöt32_t
 
RESPCMD
;

746 
__I
 
uöt32_t
 
RESP1
;

747 
__I
 
uöt32_t
 
RESP2
;

748 
__I
 
uöt32_t
 
RESP3
;

749 
__I
 
uöt32_t
 
RESP4
;

750 
__IO
 
uöt32_t
 
DTIMER
;

751 
__IO
 
uöt32_t
 
DLEN
;

752 
__IO
 
uöt32_t
 
DCTRL
;

753 
__I
 
uöt32_t
 
DCOUNT
;

754 
__I
 
uöt32_t
 
STA
;

755 
__IO
 
uöt32_t
 
ICR
;

756 
__IO
 
uöt32_t
 
MASK
;

757 
uöt32_t
 
RESERVED0
[2];

758 
__I
 
uöt32_t
 
FIFOCNT
;

759 
uöt32_t
 
RESERVED1
[13];

760 
__IO
 
uöt32_t
 
FIFO
;

761 } 
	tSDIO_Ty≥Def
;

769 
__IO
 
uöt16_t
 
CR1
;

770 
uöt16_t
 
RESERVED0
;

771 
__IO
 
uöt16_t
 
CR2
;

772 
uöt16_t
 
RESERVED1
;

773 
__IO
 
uöt16_t
 
SR
;

774 
uöt16_t
 
RESERVED2
;

775 
__IO
 
uöt16_t
 
DR
;

776 
uöt16_t
 
RESERVED3
;

777 
__IO
 
uöt16_t
 
CRCPR
;

778 
uöt16_t
 
RESERVED4
;

779 
__IO
 
uöt16_t
 
RXCRCR
;

780 
uöt16_t
 
RESERVED5
;

781 
__IO
 
uöt16_t
 
TXCRCR
;

782 
uöt16_t
 
RESERVED6
;

783 
__IO
 
uöt16_t
 
I2SCFGR
;

784 
uöt16_t
 
RESERVED7
;

785 
__IO
 
uöt16_t
 
I2SPR
;

786 
uöt16_t
 
RESERVED8
;

787 } 
	tSPI_Ty≥Def
;

795 
__IO
 
uöt16_t
 
CR1
;

796 
uöt16_t
 
RESERVED0
;

797 
__IO
 
uöt16_t
 
CR2
;

798 
uöt16_t
 
RESERVED1
;

799 
__IO
 
uöt16_t
 
SMCR
;

800 
uöt16_t
 
RESERVED2
;

801 
__IO
 
uöt16_t
 
DIER
;

802 
uöt16_t
 
RESERVED3
;

803 
__IO
 
uöt16_t
 
SR
;

804 
uöt16_t
 
RESERVED4
;

805 
__IO
 
uöt16_t
 
EGR
;

806 
uöt16_t
 
RESERVED5
;

807 
__IO
 
uöt16_t
 
CCMR1
;

808 
uöt16_t
 
RESERVED6
;

809 
__IO
 
uöt16_t
 
CCMR2
;

810 
uöt16_t
 
RESERVED7
;

811 
__IO
 
uöt16_t
 
CCER
;

812 
uöt16_t
 
RESERVED8
;

813 
__IO
 
uöt32_t
 
CNT
;

814 
__IO
 
uöt16_t
 
PSC
;

815 
uöt16_t
 
RESERVED10
;

816 
__IO
 
uöt32_t
 
ARR
;

817 
uöt32_t
 
RESERVED12
;

818 
__IO
 
uöt32_t
 
CCR1
;

819 
__IO
 
uöt32_t
 
CCR2
;

820 
__IO
 
uöt32_t
 
CCR3
;

821 
__IO
 
uöt32_t
 
CCR4
;

822 
uöt32_t
 
RESERVED17
;

823 
__IO
 
uöt16_t
 
DCR
;

824 
uöt16_t
 
RESERVED18
;

825 
__IO
 
uöt16_t
 
DMAR
;

826 
uöt16_t
 
RESERVED19
;

827 
__IO
 
uöt16_t
 
OR
;

828 
uöt16_t
 
RESERVED20
;

829 } 
	tTIM_Ty≥Def
;

837 
__IO
 
uöt16_t
 
SR
;

838 
uöt16_t
 
RESERVED0
;

839 
__IO
 
uöt16_t
 
DR
;

840 
uöt16_t
 
RESERVED1
;

841 
__IO
 
uöt16_t
 
BRR
;

842 
uöt16_t
 
RESERVED2
;

843 
__IO
 
uöt16_t
 
CR1
;

844 
uöt16_t
 
RESERVED3
;

845 
__IO
 
uöt16_t
 
CR2
;

846 
uöt16_t
 
RESERVED4
;

847 
__IO
 
uöt16_t
 
CR3
;

848 
uöt16_t
 
RESERVED5
;

849 
__IO
 
uöt16_t
 
GTPR
;

850 
uöt16_t
 
RESERVED6
;

851 } 
	tUSART_Ty≥Def
;

859 
__IO
 
uöt32_t
 
CR
;

860 
__IO
 
uöt32_t
 
CFR
;

861 
__IO
 
uöt32_t
 
SR
;

862 } 
	tWWDG_Ty≥Def
;

872 
	#FLASH_BASE
 ((
uöt32_t
)0x08000000Ë

	)

873 
	#SRAM_BASE
 ((
uöt32_t
)0x20000000Ë

	)

874 
	#PERIPH_BASE
 ((
uöt32_t
)0x40000000Ë

	)

876 
	#SRAM_BB_BASE
 ((
uöt32_t
)0x22000000Ë

	)

877 
	#PERIPH_BB_BASE
 ((
uöt32_t
)0x42000000Ë

	)

879 
	#FSMC_R_BASE
 ((
uöt32_t
)0xA0000000Ë

	)

882 
	#APB1PERIPH_BASE
 
PERIPH_BASE


	)

883 
	#APB2PERIPH_BASE
 (
PERIPH_BASE
 + 0x10000)

	)

884 
	#AHBPERIPH_BASE
 (
PERIPH_BASE
 + 0x20000)

	)

886 
	#TIM2_BASE
 (
APB1PERIPH_BASE
 + 0x0000)

	)

887 
	#TIM3_BASE
 (
APB1PERIPH_BASE
 + 0x0400)

	)

888 
	#TIM4_BASE
 (
APB1PERIPH_BASE
 + 0x0800)

	)

889 
	#TIM5_BASE
 (
APB1PERIPH_BASE
 + 0x0C00)

	)

890 
	#TIM6_BASE
 (
APB1PERIPH_BASE
 + 0x1000)

	)

891 
	#TIM7_BASE
 (
APB1PERIPH_BASE
 + 0x1400)

	)

892 
	#LCD_BASE
 (
APB1PERIPH_BASE
 + 0x2400)

	)

893 
	#RTC_BASE
 (
APB1PERIPH_BASE
 + 0x2800)

	)

894 
	#WWDG_BASE
 (
APB1PERIPH_BASE
 + 0x2C00)

	)

895 
	#IWDG_BASE
 (
APB1PERIPH_BASE
 + 0x3000)

	)

896 
	#SPI2_BASE
 (
APB1PERIPH_BASE
 + 0x3800)

	)

897 
	#SPI3_BASE
 (
APB1PERIPH_BASE
 + 0x3C00)

	)

898 
	#USART2_BASE
 (
APB1PERIPH_BASE
 + 0x4400)

	)

899 
	#USART3_BASE
 (
APB1PERIPH_BASE
 + 0x4800)

	)

900 
	#UART4_BASE
 (
APB1PERIPH_BASE
 + 0x4C00)

	)

901 
	#UART5_BASE
 (
APB1PERIPH_BASE
 + 0x5000)

	)

902 
	#I2C1_BASE
 (
APB1PERIPH_BASE
 + 0x5400)

	)

903 
	#I2C2_BASE
 (
APB1PERIPH_BASE
 + 0x5800)

	)

904 
	#PWR_BASE
 (
APB1PERIPH_BASE
 + 0x7000)

	)

905 
	#DAC_BASE
 (
APB1PERIPH_BASE
 + 0x7400)

	)

906 
	#COMP_BASE
 (
APB1PERIPH_BASE
 + 0x7C00)

	)

907 
	#RI_BASE
 (
APB1PERIPH_BASE
 + 0x7C04)

	)

908 
	#OPAMP_BASE
 (
APB1PERIPH_BASE
 + 0x7C5C)

	)

910 
	#SYSCFG_BASE
 (
APB2PERIPH_BASE
 + 0x0000)

	)

911 
	#EXTI_BASE
 (
APB2PERIPH_BASE
 + 0x0400)

	)

912 
	#TIM9_BASE
 (
APB2PERIPH_BASE
 + 0x0800)

	)

913 
	#TIM10_BASE
 (
APB2PERIPH_BASE
 + 0x0C00)

	)

914 
	#TIM11_BASE
 (
APB2PERIPH_BASE
 + 0x1000)

	)

915 
	#ADC1_BASE
 (
APB2PERIPH_BASE
 + 0x2400)

	)

916 
	#ADC_BASE
 (
APB2PERIPH_BASE
 + 0x2700)

	)

917 
	#SDIO_BASE
 (
APB2PERIPH_BASE
 + 0x2C00)

	)

918 
	#SPI1_BASE
 (
APB2PERIPH_BASE
 + 0x3000)

	)

919 
	#USART1_BASE
 (
APB2PERIPH_BASE
 + 0x3800)

	)

921 
	#GPIOA_BASE
 (
AHBPERIPH_BASE
 + 0x0000)

	)

922 
	#GPIOB_BASE
 (
AHBPERIPH_BASE
 + 0x0400)

	)

923 
	#GPIOC_BASE
 (
AHBPERIPH_BASE
 + 0x0800)

	)

924 
	#GPIOD_BASE
 (
AHBPERIPH_BASE
 + 0x0C00)

	)

925 
	#GPIOE_BASE
 (
AHBPERIPH_BASE
 + 0x1000)

	)

926 
	#GPIOH_BASE
 (
AHBPERIPH_BASE
 + 0x1400)

	)

927 
	#GPIOF_BASE
 (
AHBPERIPH_BASE
 + 0x1800)

	)

928 
	#GPIOG_BASE
 (
AHBPERIPH_BASE
 + 0x1C00)

	)

929 
	#CRC_BASE
 (
AHBPERIPH_BASE
 + 0x3000)

	)

930 
	#RCC_BASE
 (
AHBPERIPH_BASE
 + 0x3800)

	)

933 
	#FLASH_R_BASE
 (
AHBPERIPH_BASE
 + 0x3C00Ë

	)

934 
	#OB_BASE
 ((
uöt32_t
)0x1FF80000Ë

	)

936 
	#DMA1_BASE
 (
AHBPERIPH_BASE
 + 0x6000)

	)

937 
	#DMA1_Ch™√l1_BASE
 (
DMA1_BASE
 + 0x0008)

	)

938 
	#DMA1_Ch™√l2_BASE
 (
DMA1_BASE
 + 0x001C)

	)

939 
	#DMA1_Ch™√l3_BASE
 (
DMA1_BASE
 + 0x0030)

	)

940 
	#DMA1_Ch™√l4_BASE
 (
DMA1_BASE
 + 0x0044)

	)

941 
	#DMA1_Ch™√l5_BASE
 (
DMA1_BASE
 + 0x0058)

	)

942 
	#DMA1_Ch™√l6_BASE
 (
DMA1_BASE
 + 0x006C)

	)

943 
	#DMA1_Ch™√l7_BASE
 (
DMA1_BASE
 + 0x0080)

	)

945 
	#DMA2_BASE
 (
AHBPERIPH_BASE
 + 0x6400)

	)

946 
	#DMA2_Ch™√l1_BASE
 (
DMA2_BASE
 + 0x0008)

	)

947 
	#DMA2_Ch™√l2_BASE
 (
DMA2_BASE
 + 0x001C)

	)

948 
	#DMA2_Ch™√l3_BASE
 (
DMA2_BASE
 + 0x0030)

	)

949 
	#DMA2_Ch™√l4_BASE
 (
DMA2_BASE
 + 0x0044)

	)

950 
	#DMA2_Ch™√l5_BASE
 (
DMA2_BASE
 + 0x0058)

	)

952 
	#AES_BASE
 ((
uöt32_t
)0x50060000)

	)

954 
	#FSMC_B™k1_R_BASE
 (
FSMC_R_BASE
 + 0x0000Ë

	)

955 
	#FSMC_B™k1E_R_BASE
 (
FSMC_R_BASE
 + 0x0104Ë

	)

957 
	#DBGMCU_BASE
 ((
uöt32_t
)0xE0042000Ë

	)

967 
	#TIM2
 ((
TIM_Ty≥Def
 *Ë
TIM2_BASE
)

	)

968 
	#TIM3
 ((
TIM_Ty≥Def
 *Ë
TIM3_BASE
)

	)

969 
	#TIM4
 ((
TIM_Ty≥Def
 *Ë
TIM4_BASE
)

	)

970 
	#TIM5
 ((
TIM_Ty≥Def
 *Ë
TIM5_BASE
)

	)

971 
	#TIM6
 ((
TIM_Ty≥Def
 *Ë
TIM6_BASE
)

	)

972 
	#TIM7
 ((
TIM_Ty≥Def
 *Ë
TIM7_BASE
)

	)

973 
	#LCD
 ((
LCD_Ty≥Def
 *Ë
LCD_BASE
)

	)

974 
	#RTC
 ((
RTC_Ty≥Def
 *Ë
RTC_BASE
)

	)

975 
	#WWDG
 ((
WWDG_Ty≥Def
 *Ë
WWDG_BASE
)

	)

976 
	#IWDG
 ((
IWDG_Ty≥Def
 *Ë
IWDG_BASE
)

	)

977 
	#SPI2
 ((
SPI_Ty≥Def
 *Ë
SPI2_BASE
)

	)

978 
	#SPI3
 ((
SPI_Ty≥Def
 *Ë
SPI3_BASE
)

	)

979 
	#USART2
 ((
USART_Ty≥Def
 *Ë
USART2_BASE
)

	)

980 
	#USART3
 ((
USART_Ty≥Def
 *Ë
USART3_BASE
)

	)

981 
	#UART4
 ((
USART_Ty≥Def
 *Ë
UART4_BASE
)

	)

982 
	#UART5
 ((
USART_Ty≥Def
 *Ë
UART5_BASE
)

	)

983 
	#I2C1
 ((
I2C_Ty≥Def
 *Ë
I2C1_BASE
)

	)

984 
	#I2C2
 ((
I2C_Ty≥Def
 *Ë
I2C2_BASE
)

	)

985 
	#PWR
 ((
PWR_Ty≥Def
 *Ë
PWR_BASE
)

	)

986 
	#DAC
 ((
DAC_Ty≥Def
 *Ë
DAC_BASE
)

	)

987 
	#COMP
 ((
COMP_Ty≥Def
 *Ë
COMP_BASE
)

	)

988 
	#RI
 ((
RI_Ty≥Def
 *Ë
RI_BASE
)

	)

989 
	#OPAMP
 ((
OPAMP_Ty≥Def
 *Ë
OPAMP_BASE
)

	)

990 
	#SYSCFG
 ((
SYSCFG_Ty≥Def
 *Ë
SYSCFG_BASE
)

	)

991 
	#EXTI
 ((
EXTI_Ty≥Def
 *Ë
EXTI_BASE
)

	)

993 
	#ADC1
 ((
ADC_Ty≥Def
 *Ë
ADC1_BASE
)

	)

994 
	#ADC
 ((
ADC_Comm⁄_Ty≥Def
 *Ë
ADC_BASE
)

	)

995 
	#SDIO
 ((
SDIO_Ty≥Def
 *Ë
SDIO_BASE
)

	)

996 
	#TIM9
 ((
TIM_Ty≥Def
 *Ë
TIM9_BASE
)

	)

997 
	#TIM10
 ((
TIM_Ty≥Def
 *Ë
TIM10_BASE
)

	)

998 
	#TIM11
 ((
TIM_Ty≥Def
 *Ë
TIM11_BASE
)

	)

999 
	#SPI1
 ((
SPI_Ty≥Def
 *Ë
SPI1_BASE
)

	)

1000 
	#USART1
 ((
USART_Ty≥Def
 *Ë
USART1_BASE
)

	)

1001 
	#DMA1
 ((
DMA_Ty≥Def
 *Ë
DMA1_BASE
)

	)

1002 
	#DMA1_Ch™√l1
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l1_BASE
)

	)

1003 
	#DMA1_Ch™√l2
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l2_BASE
)

	)

1004 
	#DMA1_Ch™√l3
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l3_BASE
)

	)

1005 
	#DMA1_Ch™√l4
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l4_BASE
)

	)

1006 
	#DMA1_Ch™√l5
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l5_BASE
)

	)

1007 
	#DMA1_Ch™√l6
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l6_BASE
)

	)

1008 
	#DMA1_Ch™√l7
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA1_Ch™√l7_BASE
)

	)

1010 
	#DMA2
 ((
DMA_Ty≥Def
 *Ë
DMA2_BASE
)

	)

1011 
	#DMA2_Ch™√l1
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA2_Ch™√l1_BASE
)

	)

1012 
	#DMA2_Ch™√l2
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA2_Ch™√l2_BASE
)

	)

1013 
	#DMA2_Ch™√l3
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA2_Ch™√l3_BASE
)

	)

1014 
	#DMA2_Ch™√l4
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA2_Ch™√l4_BASE
)

	)

1015 
	#DMA2_Ch™√l5
 ((
DMA_Ch™√l_Ty≥Def
 *Ë
DMA2_Ch™√l5_BASE
)

	)

1017 
	#RCC
 ((
RCC_Ty≥Def
 *Ë
RCC_BASE
)

	)

1018 
	#CRC
 ((
CRC_Ty≥Def
 *Ë
CRC_BASE
)

	)

1020 
	#GPIOA
 ((
GPIO_Ty≥Def
 *Ë
GPIOA_BASE
)

	)

1021 
	#GPIOB
 ((
GPIO_Ty≥Def
 *Ë
GPIOB_BASE
)

	)

1022 
	#GPIOC
 ((
GPIO_Ty≥Def
 *Ë
GPIOC_BASE
)

	)

1023 
	#GPIOD
 ((
GPIO_Ty≥Def
 *Ë
GPIOD_BASE
)

	)

1024 
	#GPIOE
 ((
GPIO_Ty≥Def
 *Ë
GPIOE_BASE
)

	)

1025 
	#GPIOH
 ((
GPIO_Ty≥Def
 *Ë
GPIOH_BASE
)

	)

1026 
	#GPIOF
 ((
GPIO_Ty≥Def
 *Ë
GPIOF_BASE
)

	)

1027 
	#GPIOG
 ((
GPIO_Ty≥Def
 *Ë
GPIOG_BASE
)

	)

1029 
	#FLASH
 ((
FLASH_Ty≥Def
 *Ë
FLASH_R_BASE
)

	)

1030 
	#OB
 ((
OB_Ty≥Def
 *Ë
OB_BASE
)

	)

1032 
	#AES
 ((
AES_Ty≥Def
 *Ë
AES_BASE
)

	)

1034 
	#FSMC_B™k1
 ((
FSMC_B™k1_Ty≥Def
 *Ë
FSMC_B™k1_R_BASE
)

	)

1035 
	#FSMC_B™k1E
 ((
FSMC_B™k1E_Ty≥Def
 *Ë
FSMC_B™k1E_R_BASE
)

	)

1037 
	#DBGMCU
 ((
DBGMCU_Ty≥Def
 *Ë
DBGMCU_BASE
)

	)

1061 
	#ADC_SR_AWD
 ((
uöt32_t
)0x00000001Ë

	)

1062 
	#ADC_SR_EOC
 ((
uöt32_t
)0x00000002Ë

	)

1063 
	#ADC_SR_JEOC
 ((
uöt32_t
)0x00000004Ë

	)

1064 
	#ADC_SR_JSTRT
 ((
uöt32_t
)0x00000008Ë

	)

1065 
	#ADC_SR_STRT
 ((
uöt32_t
)0x00000010Ë

	)

1066 
	#ADC_SR_OVR
 ((
uöt32_t
)0x00000020Ë

	)

1067 
	#ADC_SR_ADONS
 ((
uöt32_t
)0x00000040Ë

	)

1068 
	#ADC_SR_RCNR
 ((
uöt32_t
)0x00000100Ë

	)

1069 
	#ADC_SR_JCNR
 ((
uöt32_t
)0x00000200Ë

	)

1072 
	#ADC_CR1_AWDCH
 ((
uöt32_t
)0x0000001FË

	)

1073 
	#ADC_CR1_AWDCH_0
 ((
uöt32_t
)0x00000001Ë

	)

1074 
	#ADC_CR1_AWDCH_1
 ((
uöt32_t
)0x00000002Ë

	)

1075 
	#ADC_CR1_AWDCH_2
 ((
uöt32_t
)0x00000004Ë

	)

1076 
	#ADC_CR1_AWDCH_3
 ((
uöt32_t
)0x00000008Ë

	)

1077 
	#ADC_CR1_AWDCH_4
 ((
uöt32_t
)0x00000010Ë

	)

1079 
	#ADC_CR1_EOCIE
 ((
uöt32_t
)0x00000020Ë

	)

1080 
	#ADC_CR1_AWDIE
 ((
uöt32_t
)0x00000040Ë

	)

1081 
	#ADC_CR1_JEOCIE
 ((
uöt32_t
)0x00000080Ë

	)

1082 
	#ADC_CR1_SCAN
 ((
uöt32_t
)0x00000100Ë

	)

1083 
	#ADC_CR1_AWDSGL
 ((
uöt32_t
)0x00000200Ë

	)

1084 
	#ADC_CR1_JAUTO
 ((
uöt32_t
)0x00000400Ë

	)

1085 
	#ADC_CR1_DISCEN
 ((
uöt32_t
)0x00000800Ë

	)

1086 
	#ADC_CR1_JDISCEN
 ((
uöt32_t
)0x00001000Ë

	)

1088 
	#ADC_CR1_DISCNUM
 ((
uöt32_t
)0x0000E000Ë

	)

1089 
	#ADC_CR1_DISCNUM_0
 ((
uöt32_t
)0x00002000Ë

	)

1090 
	#ADC_CR1_DISCNUM_1
 ((
uöt32_t
)0x00004000Ë

	)

1091 
	#ADC_CR1_DISCNUM_2
 ((
uöt32_t
)0x00008000Ë

	)

1093 
	#ADC_CR1_PDD
 ((
uöt32_t
)0x00010000Ë

	)

1094 
	#ADC_CR1_PDI
 ((
uöt32_t
)0x00020000Ë

	)

1096 
	#ADC_CR1_JAWDEN
 ((
uöt32_t
)0x00400000Ë

	)

1097 
	#ADC_CR1_AWDEN
 ((
uöt32_t
)0x00800000Ë

	)

1099 
	#ADC_CR1_RES
 ((
uöt32_t
)0x03000000Ë

	)

1100 
	#ADC_CR1_RES_0
 ((
uöt32_t
)0x01000000Ë

	)

1101 
	#ADC_CR1_RES_1
 ((
uöt32_t
)0x02000000Ë

	)

1103 
	#ADC_CR1_OVRIE
 ((
uöt32_t
)0x04000000Ë

	)

1106 
	#ADC_CR2_ADON
 ((
uöt32_t
)0x00000001Ë

	)

1107 
	#ADC_CR2_CONT
 ((
uöt32_t
)0x00000002Ë

	)

1108 
	#ADC_CR2_CFG
 ((
uöt32_t
)0x00000004Ë

	)

1110 
	#ADC_CR2_DELS
 ((
uöt32_t
)0x00000070Ë

	)

1111 
	#ADC_CR2_DELS_0
 ((
uöt32_t
)0x00000010Ë

	)

1112 
	#ADC_CR2_DELS_1
 ((
uöt32_t
)0x00000020Ë

	)

1113 
	#ADC_CR2_DELS_2
 ((
uöt32_t
)0x00000040Ë

	)

1115 
	#ADC_CR2_DMA
 ((
uöt32_t
)0x00000100Ë

	)

1116 
	#ADC_CR2_DDS
 ((
uöt32_t
)0x00000200Ë

	)

1117 
	#ADC_CR2_EOCS
 ((
uöt32_t
)0x00000400Ë

	)

1118 
	#ADC_CR2_ALIGN
 ((
uöt32_t
)0x00000800Ë

	)

1120 
	#ADC_CR2_JEXTSEL
 ((
uöt32_t
)0x000F0000Ë

	)

1121 
	#ADC_CR2_JEXTSEL_0
 ((
uöt32_t
)0x00010000Ë

	)

1122 
	#ADC_CR2_JEXTSEL_1
 ((
uöt32_t
)0x00020000Ë

	)

1123 
	#ADC_CR2_JEXTSEL_2
 ((
uöt32_t
)0x00040000Ë

	)

1124 
	#ADC_CR2_JEXTSEL_3
 ((
uöt32_t
)0x00080000Ë

	)

1126 
	#ADC_CR2_JEXTEN
 ((
uöt32_t
)0x00300000Ë

	)

1127 
	#ADC_CR2_JEXTEN_0
 ((
uöt32_t
)0x00100000Ë

	)

1128 
	#ADC_CR2_JEXTEN_1
 ((
uöt32_t
)0x00200000Ë

	)

1130 
	#ADC_CR2_JSWSTART
 ((
uöt32_t
)0x00400000Ë

	)

1132 
	#ADC_CR2_EXTSEL
 ((
uöt32_t
)0x0F000000Ë

	)

1133 
	#ADC_CR2_EXTSEL_0
 ((
uöt32_t
)0x01000000Ë

	)

1134 
	#ADC_CR2_EXTSEL_1
 ((
uöt32_t
)0x02000000Ë

	)

1135 
	#ADC_CR2_EXTSEL_2
 ((
uöt32_t
)0x04000000Ë

	)

1136 
	#ADC_CR2_EXTSEL_3
 ((
uöt32_t
)0x08000000Ë

	)

1138 
	#ADC_CR2_EXTEN
 ((
uöt32_t
)0x30000000Ë

	)

1139 
	#ADC_CR2_EXTEN_0
 ((
uöt32_t
)0x10000000Ë

	)

1140 
	#ADC_CR2_EXTEN_1
 ((
uöt32_t
)0x20000000Ë

	)

1142 
	#ADC_CR2_SWSTART
 ((
uöt32_t
)0x40000000Ë

	)

1145 
	#ADC_SMPR1_SMP20
 ((
uöt32_t
)0x00000007Ë

	)

1146 
	#ADC_SMPR1_SMP20_0
 ((
uöt32_t
)0x00000001Ë

	)

1147 
	#ADC_SMPR1_SMP20_1
 ((
uöt32_t
)0x00000002Ë

	)

1148 
	#ADC_SMPR1_SMP20_2
 ((
uöt32_t
)0x00000004Ë

	)

1150 
	#ADC_SMPR1_SMP21
 ((
uöt32_t
)0x00000038Ë

	)

1151 
	#ADC_SMPR1_SMP21_0
 ((
uöt32_t
)0x00000008Ë

	)

1152 
	#ADC_SMPR1_SMP21_1
 ((
uöt32_t
)0x00000010Ë

	)

1153 
	#ADC_SMPR1_SMP21_2
 ((
uöt32_t
)0x00000020Ë

	)

1155 
	#ADC_SMPR1_SMP22
 ((
uöt32_t
)0x000001C0Ë

	)

1156 
	#ADC_SMPR1_SMP22_0
 ((
uöt32_t
)0x00000040Ë

	)

1157 
	#ADC_SMPR1_SMP22_1
 ((
uöt32_t
)0x00000080Ë

	)

1158 
	#ADC_SMPR1_SMP22_2
 ((
uöt32_t
)0x00000100Ë

	)

1160 
	#ADC_SMPR1_SMP23
 ((
uöt32_t
)0x00000E00Ë

	)

1161 
	#ADC_SMPR1_SMP23_0
 ((
uöt32_t
)0x00000200Ë

	)

1162 
	#ADC_SMPR1_SMP23_1
 ((
uöt32_t
)0x00000400Ë

	)

1163 
	#ADC_SMPR1_SMP23_2
 ((
uöt32_t
)0x00000800Ë

	)

1165 
	#ADC_SMPR1_SMP24
 ((
uöt32_t
)0x00007000Ë

	)

1166 
	#ADC_SMPR1_SMP24_0
 ((
uöt32_t
)0x00001000Ë

	)

1167 
	#ADC_SMPR1_SMP24_1
 ((
uöt32_t
)0x00002000Ë

	)

1168 
	#ADC_SMPR1_SMP24_2
 ((
uöt32_t
)0x00004000Ë

	)

1170 
	#ADC_SMPR1_SMP25
 ((
uöt32_t
)0x00038000Ë

	)

1171 
	#ADC_SMPR1_SMP25_0
 ((
uöt32_t
)0x00008000Ë

	)

1172 
	#ADC_SMPR1_SMP25_1
 ((
uöt32_t
)0x00010000Ë

	)

1173 
	#ADC_SMPR1_SMP25_2
 ((
uöt32_t
)0x00020000Ë

	)

1175 
	#ADC_SMPR1_SMP26
 ((
uöt32_t
)0x001C0000Ë

	)

1176 
	#ADC_SMPR1_SMP26_0
 ((
uöt32_t
)0x00040000Ë

	)

1177 
	#ADC_SMPR1_SMP26_1
 ((
uöt32_t
)0x00080000Ë

	)

1178 
	#ADC_SMPR1_SMP26_2
 ((
uöt32_t
)0x00100000Ë

	)

1180 
	#ADC_SMPR1_SMP27
 ((
uöt32_t
)0x00E00000Ë

	)

1181 
	#ADC_SMPR1_SMP27_0
 ((
uöt32_t
)0x00200000Ë

	)

1182 
	#ADC_SMPR1_SMP27_1
 ((
uöt32_t
)0x00400000Ë

	)

1183 
	#ADC_SMPR1_SMP27_2
 ((
uöt32_t
)0x00800000Ë

	)

1185 
	#ADC_SMPR1_SMP28
 ((
uöt32_t
)0x07000000Ë

	)

1186 
	#ADC_SMPR1_SMP28_0
 ((
uöt32_t
)0x01000000Ë

	)

1187 
	#ADC_SMPR1_SMP28_1
 ((
uöt32_t
)0x02000000Ë

	)

1188 
	#ADC_SMPR1_SMP28_2
 ((
uöt32_t
)0x04000000Ë

	)

1190 
	#ADC_SMPR1_SMP29
 ((
uöt32_t
)0x38000000Ë

	)

1191 
	#ADC_SMPR1_SMP29_0
 ((
uöt32_t
)0x08000000Ë

	)

1192 
	#ADC_SMPR1_SMP29_1
 ((
uöt32_t
)0x10000000Ë

	)

1193 
	#ADC_SMPR1_SMP29_2
 ((
uöt32_t
)0x20000000Ë

	)

1196 
	#ADC_SMPR2_SMP10
 ((
uöt32_t
)0x00000007Ë

	)

1197 
	#ADC_SMPR2_SMP10_0
 ((
uöt32_t
)0x00000001Ë

	)

1198 
	#ADC_SMPR2_SMP10_1
 ((
uöt32_t
)0x00000002Ë

	)

1199 
	#ADC_SMPR2_SMP10_2
 ((
uöt32_t
)0x00000004Ë

	)

1201 
	#ADC_SMPR2_SMP11
 ((
uöt32_t
)0x00000038Ë

	)

1202 
	#ADC_SMPR2_SMP11_0
 ((
uöt32_t
)0x00000008Ë

	)

1203 
	#ADC_SMPR2_SMP11_1
 ((
uöt32_t
)0x00000010Ë

	)

1204 
	#ADC_SMPR2_SMP11_2
 ((
uöt32_t
)0x00000020Ë

	)

1206 
	#ADC_SMPR2_SMP12
 ((
uöt32_t
)0x000001C0Ë

	)

1207 
	#ADC_SMPR2_SMP12_0
 ((
uöt32_t
)0x00000040Ë

	)

1208 
	#ADC_SMPR2_SMP12_1
 ((
uöt32_t
)0x00000080Ë

	)

1209 
	#ADC_SMPR2_SMP12_2
 ((
uöt32_t
)0x00000100Ë

	)

1211 
	#ADC_SMPR2_SMP13
 ((
uöt32_t
)0x00000E00Ë

	)

1212 
	#ADC_SMPR2_SMP13_0
 ((
uöt32_t
)0x00000200Ë

	)

1213 
	#ADC_SMPR2_SMP13_1
 ((
uöt32_t
)0x00000400Ë

	)

1214 
	#ADC_SMPR2_SMP13_2
 ((
uöt32_t
)0x00000800Ë

	)

1216 
	#ADC_SMPR2_SMP14
 ((
uöt32_t
)0x00007000Ë

	)

1217 
	#ADC_SMPR2_SMP14_0
 ((
uöt32_t
)0x00001000Ë

	)

1218 
	#ADC_SMPR2_SMP14_1
 ((
uöt32_t
)0x00002000Ë

	)

1219 
	#ADC_SMPR2_SMP14_2
 ((
uöt32_t
)0x00004000Ë

	)

1221 
	#ADC_SMPR2_SMP15
 ((
uöt32_t
)0x00038000Ë

	)

1222 
	#ADC_SMPR2_SMP15_0
 ((
uöt32_t
)0x00008000Ë

	)

1223 
	#ADC_SMPR2_SMP15_1
 ((
uöt32_t
)0x00010000Ë

	)

1224 
	#ADC_SMPR2_SMP15_2
 ((
uöt32_t
)0x00020000Ë

	)

1226 
	#ADC_SMPR2_SMP16
 ((
uöt32_t
)0x001C0000Ë

	)

1227 
	#ADC_SMPR2_SMP16_0
 ((
uöt32_t
)0x00040000Ë

	)

1228 
	#ADC_SMPR2_SMP16_1
 ((
uöt32_t
)0x00080000Ë

	)

1229 
	#ADC_SMPR2_SMP16_2
 ((
uöt32_t
)0x00100000Ë

	)

1231 
	#ADC_SMPR2_SMP17
 ((
uöt32_t
)0x00E00000Ë

	)

1232 
	#ADC_SMPR2_SMP17_0
 ((
uöt32_t
)0x00200000Ë

	)

1233 
	#ADC_SMPR2_SMP17_1
 ((
uöt32_t
)0x00400000Ë

	)

1234 
	#ADC_SMPR2_SMP17_2
 ((
uöt32_t
)0x00800000Ë

	)

1236 
	#ADC_SMPR2_SMP18
 ((
uöt32_t
)0x07000000Ë

	)

1237 
	#ADC_SMPR2_SMP18_0
 ((
uöt32_t
)0x01000000Ë

	)

1238 
	#ADC_SMPR2_SMP18_1
 ((
uöt32_t
)0x02000000Ë

	)

1239 
	#ADC_SMPR2_SMP18_2
 ((
uöt32_t
)0x04000000Ë

	)

1241 
	#ADC_SMPR2_SMP19
 ((
uöt32_t
)0x38000000Ë

	)

1242 
	#ADC_SMPR2_SMP19_0
 ((
uöt32_t
)0x08000000Ë

	)

1243 
	#ADC_SMPR2_SMP19_1
 ((
uöt32_t
)0x10000000Ë

	)

1244 
	#ADC_SMPR2_SMP19_2
 ((
uöt32_t
)0x20000000Ë

	)

1247 
	#ADC_SMPR3_SMP0
 ((
uöt32_t
)0x00000007Ë

	)

1248 
	#ADC_SMPR3_SMP0_0
 ((
uöt32_t
)0x00000001Ë

	)

1249 
	#ADC_SMPR3_SMP0_1
 ((
uöt32_t
)0x00000002Ë

	)

1250 
	#ADC_SMPR3_SMP0_2
 ((
uöt32_t
)0x00000004Ë

	)

1252 
	#ADC_SMPR3_SMP1
 ((
uöt32_t
)0x00000038Ë

	)

1253 
	#ADC_SMPR3_SMP1_0
 ((
uöt32_t
)0x00000008Ë

	)

1254 
	#ADC_SMPR3_SMP1_1
 ((
uöt32_t
)0x00000010Ë

	)

1255 
	#ADC_SMPR3_SMP1_2
 ((
uöt32_t
)0x00000020Ë

	)

1257 
	#ADC_SMPR3_SMP2
 ((
uöt32_t
)0x000001C0Ë

	)

1258 
	#ADC_SMPR3_SMP2_0
 ((
uöt32_t
)0x00000040Ë

	)

1259 
	#ADC_SMPR3_SMP2_1
 ((
uöt32_t
)0x00000080Ë

	)

1260 
	#ADC_SMPR3_SMP2_2
 ((
uöt32_t
)0x00000100Ë

	)

1262 
	#ADC_SMPR3_SMP3
 ((
uöt32_t
)0x00000E00Ë

	)

1263 
	#ADC_SMPR3_SMP3_0
 ((
uöt32_t
)0x00000200Ë

	)

1264 
	#ADC_SMPR3_SMP3_1
 ((
uöt32_t
)0x00000400Ë

	)

1265 
	#ADC_SMPR3_SMP3_2
 ((
uöt32_t
)0x00000800Ë

	)

1267 
	#ADC_SMPR3_SMP4
 ((
uöt32_t
)0x00007000Ë

	)

1268 
	#ADC_SMPR3_SMP4_0
 ((
uöt32_t
)0x00001000Ë

	)

1269 
	#ADC_SMPR3_SMP4_1
 ((
uöt32_t
)0x00002000Ë

	)

1270 
	#ADC_SMPR3_SMP4_2
 ((
uöt32_t
)0x00004000Ë

	)

1272 
	#ADC_SMPR3_SMP5
 ((
uöt32_t
)0x00038000Ë

	)

1273 
	#ADC_SMPR3_SMP5_0
 ((
uöt32_t
)0x00008000Ë

	)

1274 
	#ADC_SMPR3_SMP5_1
 ((
uöt32_t
)0x00010000Ë

	)

1275 
	#ADC_SMPR3_SMP5_2
 ((
uöt32_t
)0x00020000Ë

	)

1277 
	#ADC_SMPR3_SMP6
 ((
uöt32_t
)0x001C0000Ë

	)

1278 
	#ADC_SMPR3_SMP6_0
 ((
uöt32_t
)0x00040000Ë

	)

1279 
	#ADC_SMPR3_SMP6_1
 ((
uöt32_t
)0x00080000Ë

	)

1280 
	#ADC_SMPR3_SMP6_2
 ((
uöt32_t
)0x00100000Ë

	)

1282 
	#ADC_SMPR3_SMP7
 ((
uöt32_t
)0x00E00000Ë

	)

1283 
	#ADC_SMPR3_SMP7_0
 ((
uöt32_t
)0x00200000Ë

	)

1284 
	#ADC_SMPR3_SMP7_1
 ((
uöt32_t
)0x00400000Ë

	)

1285 
	#ADC_SMPR3_SMP7_2
 ((
uöt32_t
)0x00800000Ë

	)

1287 
	#ADC_SMPR3_SMP8
 ((
uöt32_t
)0x07000000Ë

	)

1288 
	#ADC_SMPR3_SMP8_0
 ((
uöt32_t
)0x01000000Ë

	)

1289 
	#ADC_SMPR3_SMP8_1
 ((
uöt32_t
)0x02000000Ë

	)

1290 
	#ADC_SMPR3_SMP8_2
 ((
uöt32_t
)0x04000000Ë

	)

1292 
	#ADC_SMPR3_SMP9
 ((
uöt32_t
)0x38000000Ë

	)

1293 
	#ADC_SMPR3_SMP9_0
 ((
uöt32_t
)0x08000000Ë

	)

1294 
	#ADC_SMPR3_SMP9_1
 ((
uöt32_t
)0x10000000Ë

	)

1295 
	#ADC_SMPR3_SMP9_2
 ((
uöt32_t
)0x20000000Ë

	)

1298 
	#ADC_JOFR1_JOFFSET1
 ((
uöt32_t
)0x00000FFFË

	)

1301 
	#ADC_JOFR2_JOFFSET2
 ((
uöt32_t
)0x00000FFFË

	)

1304 
	#ADC_JOFR3_JOFFSET3
 ((
uöt32_t
)0x00000FFFË

	)

1307 
	#ADC_JOFR4_JOFFSET4
 ((
uöt32_t
)0x00000FFFË

	)

1310 
	#ADC_HTR_HT
 ((
uöt32_t
)0x00000FFFË

	)

1313 
	#ADC_LTR_LT
 ((
uöt32_t
)0x00000FFFË

	)

1316 
	#ADC_SQR1_L
 ((
uöt32_t
)0x00F00000Ë

	)

1317 
	#ADC_SQR1_L_0
 ((
uöt32_t
)0x00100000Ë

	)

1318 
	#ADC_SQR1_L_1
 ((
uöt32_t
)0x00200000Ë

	)

1319 
	#ADC_SQR1_L_2
 ((
uöt32_t
)0x00400000Ë

	)

1320 
	#ADC_SQR1_L_3
 ((
uöt32_t
)0x00800000Ë

	)

1322 
	#ADC_SQR1_SQ28
 ((
uöt32_t
)0x000F8000Ë

	)

1323 
	#ADC_SQR1_SQ28_0
 ((
uöt32_t
)0x00008000Ë

	)

1324 
	#ADC_SQR1_SQ28_1
 ((
uöt32_t
)0x00010000Ë

	)

1325 
	#ADC_SQR1_SQ28_2
 ((
uöt32_t
)0x00020000Ë

	)

1326 
	#ADC_SQR1_SQ28_3
 ((
uöt32_t
)0x00040000Ë

	)

1327 
	#ADC_SQR1_SQ28_4
 ((
uöt32_t
)0x00080000Ë

	)

1329 
	#ADC_SQR1_SQ27
 ((
uöt32_t
)0x00007C00Ë

	)

1330 
	#ADC_SQR1_SQ27_0
 ((
uöt32_t
)0x00000400Ë

	)

1331 
	#ADC_SQR1_SQ27_1
 ((
uöt32_t
)0x00000800Ë

	)

1332 
	#ADC_SQR1_SQ27_2
 ((
uöt32_t
)0x00001000Ë

	)

1333 
	#ADC_SQR1_SQ27_3
 ((
uöt32_t
)0x00002000Ë

	)

1334 
	#ADC_SQR1_SQ27_4
 ((
uöt32_t
)0x00004000Ë

	)

1336 
	#ADC_SQR1_SQ26
 ((
uöt32_t
)0x000003E0Ë

	)

1337 
	#ADC_SQR1_SQ26_0
 ((
uöt32_t
)0x00000020Ë

	)

1338 
	#ADC_SQR1_SQ26_1
 ((
uöt32_t
)0x00000040Ë

	)

1339 
	#ADC_SQR1_SQ26_2
 ((
uöt32_t
)0x00000080Ë

	)

1340 
	#ADC_SQR1_SQ26_3
 ((
uöt32_t
)0x00000100Ë

	)

1341 
	#ADC_SQR1_SQ26_4
 ((
uöt32_t
)0x00000200Ë

	)

1343 
	#ADC_SQR1_SQ25
 ((
uöt32_t
)0x0000001FË

	)

1344 
	#ADC_SQR1_SQ25_0
 ((
uöt32_t
)0x00000001Ë

	)

1345 
	#ADC_SQR1_SQ25_1
 ((
uöt32_t
)0x00000002Ë

	)

1346 
	#ADC_SQR1_SQ25_2
 ((
uöt32_t
)0x00000004Ë

	)

1347 
	#ADC_SQR1_SQ25_3
 ((
uöt32_t
)0x00000008Ë

	)

1348 
	#ADC_SQR1_SQ25_4
 ((
uöt32_t
)0x00000010Ë

	)

1351 
	#ADC_SQR2_SQ19
 ((
uöt32_t
)0x0000001FË

	)

1352 
	#ADC_SQR2_SQ19_0
 ((
uöt32_t
)0x00000001Ë

	)

1353 
	#ADC_SQR2_SQ19_1
 ((
uöt32_t
)0x00000002Ë

	)

1354 
	#ADC_SQR2_SQ19_2
 ((
uöt32_t
)0x00000004Ë

	)

1355 
	#ADC_SQR2_SQ19_3
 ((
uöt32_t
)0x00000008Ë

	)

1356 
	#ADC_SQR2_SQ19_4
 ((
uöt32_t
)0x00000010Ë

	)

1358 
	#ADC_SQR2_SQ20
 ((
uöt32_t
)0x000003E0Ë

	)

1359 
	#ADC_SQR2_SQ20_0
 ((
uöt32_t
)0x00000020Ë

	)

1360 
	#ADC_SQR2_SQ20_1
 ((
uöt32_t
)0x00000040Ë

	)

1361 
	#ADC_SQR2_SQ20_2
 ((
uöt32_t
)0x00000080Ë

	)

1362 
	#ADC_SQR2_SQ20_3
 ((
uöt32_t
)0x00000100Ë

	)

1363 
	#ADC_SQR2_SQ20_4
 ((
uöt32_t
)0x00000200Ë

	)

1365 
	#ADC_SQR2_SQ21
 ((
uöt32_t
)0x00007C00Ë

	)

1366 
	#ADC_SQR2_SQ21_0
 ((
uöt32_t
)0x00000400Ë

	)

1367 
	#ADC_SQR2_SQ21_1
 ((
uöt32_t
)0x00000800Ë

	)

1368 
	#ADC_SQR2_SQ21_2
 ((
uöt32_t
)0x00001000Ë

	)

1369 
	#ADC_SQR2_SQ21_3
 ((
uöt32_t
)0x00002000Ë

	)

1370 
	#ADC_SQR2_SQ21_4
 ((
uöt32_t
)0x00004000Ë

	)

1372 
	#ADC_SQR2_SQ22
 ((
uöt32_t
)0x000F8000Ë

	)

1373 
	#ADC_SQR2_SQ22_0
 ((
uöt32_t
)0x00008000Ë

	)

1374 
	#ADC_SQR2_SQ22_1
 ((
uöt32_t
)0x00010000Ë

	)

1375 
	#ADC_SQR2_SQ22_2
 ((
uöt32_t
)0x00020000Ë

	)

1376 
	#ADC_SQR2_SQ22_3
 ((
uöt32_t
)0x00040000Ë

	)

1377 
	#ADC_SQR2_SQ22_4
 ((
uöt32_t
)0x00080000Ë

	)

1379 
	#ADC_SQR2_SQ23
 ((
uöt32_t
)0x01F00000Ë

	)

1380 
	#ADC_SQR2_SQ23_0
 ((
uöt32_t
)0x00100000Ë

	)

1381 
	#ADC_SQR2_SQ23_1
 ((
uöt32_t
)0x00200000Ë

	)

1382 
	#ADC_SQR2_SQ23_2
 ((
uöt32_t
)0x00400000Ë

	)

1383 
	#ADC_SQR2_SQ23_3
 ((
uöt32_t
)0x00800000Ë

	)

1384 
	#ADC_SQR2_SQ23_4
 ((
uöt32_t
)0x01000000Ë

	)

1386 
	#ADC_SQR2_SQ24
 ((
uöt32_t
)0x3E000000Ë

	)

1387 
	#ADC_SQR2_SQ24_0
 ((
uöt32_t
)0x02000000Ë

	)

1388 
	#ADC_SQR2_SQ24_1
 ((
uöt32_t
)0x04000000Ë

	)

1389 
	#ADC_SQR2_SQ24_2
 ((
uöt32_t
)0x08000000Ë

	)

1390 
	#ADC_SQR2_SQ24_3
 ((
uöt32_t
)0x10000000Ë

	)

1391 
	#ADC_SQR2_SQ24_4
 ((
uöt32_t
)0x20000000Ë

	)

1394 
	#ADC_SQR3_SQ13
 ((
uöt32_t
)0x0000001FË

	)

1395 
	#ADC_SQR3_SQ13_0
 ((
uöt32_t
)0x00000001Ë

	)

1396 
	#ADC_SQR3_SQ13_1
 ((
uöt32_t
)0x00000002Ë

	)

1397 
	#ADC_SQR3_SQ13_2
 ((
uöt32_t
)0x00000004Ë

	)

1398 
	#ADC_SQR3_SQ13_3
 ((
uöt32_t
)0x00000008Ë

	)

1399 
	#ADC_SQR3_SQ13_4
 ((
uöt32_t
)0x00000010Ë

	)

1401 
	#ADC_SQR3_SQ14
 ((
uöt32_t
)0x000003E0Ë

	)

1402 
	#ADC_SQR3_SQ14_0
 ((
uöt32_t
)0x00000020Ë

	)

1403 
	#ADC_SQR3_SQ14_1
 ((
uöt32_t
)0x00000040Ë

	)

1404 
	#ADC_SQR3_SQ14_2
 ((
uöt32_t
)0x00000080Ë

	)

1405 
	#ADC_SQR3_SQ14_3
 ((
uöt32_t
)0x00000100Ë

	)

1406 
	#ADC_SQR3_SQ14_4
 ((
uöt32_t
)0x00000200Ë

	)

1408 
	#ADC_SQR3_SQ15
 ((
uöt32_t
)0x00007C00Ë

	)

1409 
	#ADC_SQR3_SQ15_0
 ((
uöt32_t
)0x00000400Ë

	)

1410 
	#ADC_SQR3_SQ15_1
 ((
uöt32_t
)0x00000800Ë

	)

1411 
	#ADC_SQR3_SQ15_2
 ((
uöt32_t
)0x00001000Ë

	)

1412 
	#ADC_SQR3_SQ15_3
 ((
uöt32_t
)0x00002000Ë

	)

1413 
	#ADC_SQR3_SQ15_4
 ((
uöt32_t
)0x00004000Ë

	)

1415 
	#ADC_SQR3_SQ16
 ((
uöt32_t
)0x000F8000Ë

	)

1416 
	#ADC_SQR3_SQ16_0
 ((
uöt32_t
)0x00008000Ë

	)

1417 
	#ADC_SQR3_SQ16_1
 ((
uöt32_t
)0x00010000Ë

	)

1418 
	#ADC_SQR3_SQ16_2
 ((
uöt32_t
)0x00020000Ë

	)

1419 
	#ADC_SQR3_SQ16_3
 ((
uöt32_t
)0x00040000Ë

	)

1420 
	#ADC_SQR3_SQ16_4
 ((
uöt32_t
)0x00080000Ë

	)

1422 
	#ADC_SQR3_SQ17
 ((
uöt32_t
)0x01F00000Ë

	)

1423 
	#ADC_SQR3_SQ17_0
 ((
uöt32_t
)0x00100000Ë

	)

1424 
	#ADC_SQR3_SQ17_1
 ((
uöt32_t
)0x00200000Ë

	)

1425 
	#ADC_SQR3_SQ17_2
 ((
uöt32_t
)0x00400000Ë

	)

1426 
	#ADC_SQR3_SQ17_3
 ((
uöt32_t
)0x00800000Ë

	)

1427 
	#ADC_SQR3_SQ17_4
 ((
uöt32_t
)0x01000000Ë

	)

1429 
	#ADC_SQR3_SQ18
 ((
uöt32_t
)0x3E000000Ë

	)

1430 
	#ADC_SQR3_SQ18_0
 ((
uöt32_t
)0x02000000Ë

	)

1431 
	#ADC_SQR3_SQ18_1
 ((
uöt32_t
)0x04000000Ë

	)

1432 
	#ADC_SQR3_SQ18_2
 ((
uöt32_t
)0x08000000Ë

	)

1433 
	#ADC_SQR3_SQ18_3
 ((
uöt32_t
)0x10000000Ë

	)

1434 
	#ADC_SQR3_SQ18_4
 ((
uöt32_t
)0x20000000Ë

	)

1437 
	#ADC_SQR4_SQ7
 ((
uöt32_t
)0x0000001FË

	)

1438 
	#ADC_SQR4_SQ7_0
 ((
uöt32_t
)0x00000001Ë

	)

1439 
	#ADC_SQR4_SQ7_1
 ((
uöt32_t
)0x00000002Ë

	)

1440 
	#ADC_SQR4_SQ7_2
 ((
uöt32_t
)0x00000004Ë

	)

1441 
	#ADC_SQR4_SQ7_3
 ((
uöt32_t
)0x00000008Ë

	)

1442 
	#ADC_SQR4_SQ7_4
 ((
uöt32_t
)0x00000010Ë

	)

1444 
	#ADC_SQR4_SQ8
 ((
uöt32_t
)0x000003E0Ë

	)

1445 
	#ADC_SQR4_SQ8_0
 ((
uöt32_t
)0x00000020Ë

	)

1446 
	#ADC_SQR4_SQ8_1
 ((
uöt32_t
)0x00000040Ë

	)

1447 
	#ADC_SQR4_SQ8_2
 ((
uöt32_t
)0x00000080Ë

	)

1448 
	#ADC_SQR4_SQ8_3
 ((
uöt32_t
)0x00000100Ë

	)

1449 
	#ADC_SQR4_SQ8_4
 ((
uöt32_t
)0x00000200Ë

	)

1451 
	#ADC_SQR4_SQ9
 ((
uöt32_t
)0x00007C00Ë

	)

1452 
	#ADC_SQR4_SQ9_0
 ((
uöt32_t
)0x00000400Ë

	)

1453 
	#ADC_SQR4_SQ9_1
 ((
uöt32_t
)0x00000800Ë

	)

1454 
	#ADC_SQR4_SQ9_2
 ((
uöt32_t
)0x00001000Ë

	)

1455 
	#ADC_SQR4_SQ9_3
 ((
uöt32_t
)0x00002000Ë

	)

1456 
	#ADC_SQR4_SQ9_4
 ((
uöt32_t
)0x00004000Ë

	)

1458 
	#ADC_SQR4_SQ10
 ((
uöt32_t
)0x000F8000Ë

	)

1459 
	#ADC_SQR4_SQ10_0
 ((
uöt32_t
)0x00008000Ë

	)

1460 
	#ADC_SQR4_SQ10_1
 ((
uöt32_t
)0x00010000Ë

	)

1461 
	#ADC_SQR4_SQ10_2
 ((
uöt32_t
)0x00020000Ë

	)

1462 
	#ADC_SQR4_SQ10_3
 ((
uöt32_t
)0x00040000Ë

	)

1463 
	#ADC_SQR4_SQ10_4
 ((
uöt32_t
)0x00080000Ë

	)

1465 
	#ADC_SQR4_SQ11
 ((
uöt32_t
)0x01F00000Ë

	)

1466 
	#ADC_SQR4_SQ11_0
 ((
uöt32_t
)0x00100000Ë

	)

1467 
	#ADC_SQR4_SQ11_1
 ((
uöt32_t
)0x00200000Ë

	)

1468 
	#ADC_SQR4_SQ11_2
 ((
uöt32_t
)0x00400000Ë

	)

1469 
	#ADC_SQR4_SQ11_3
 ((
uöt32_t
)0x00800000Ë

	)

1470 
	#ADC_SQR4_SQ11_4
 ((
uöt32_t
)0x01000000Ë

	)

1472 
	#ADC_SQR4_SQ12
 ((
uöt32_t
)0x3E000000Ë

	)

1473 
	#ADC_SQR4_SQ12_0
 ((
uöt32_t
)0x02000000Ë

	)

1474 
	#ADC_SQR4_SQ12_1
 ((
uöt32_t
)0x04000000Ë

	)

1475 
	#ADC_SQR4_SQ12_2
 ((
uöt32_t
)0x08000000Ë

	)

1476 
	#ADC_SQR4_SQ12_3
 ((
uöt32_t
)0x10000000Ë

	)

1477 
	#ADC_SQR4_SQ12_4
 ((
uöt32_t
)0x20000000Ë

	)

1480 
	#ADC_SQR5_SQ1
 ((
uöt32_t
)0x0000001FË

	)

1481 
	#ADC_SQR5_SQ1_0
 ((
uöt32_t
)0x00000001Ë

	)

1482 
	#ADC_SQR5_SQ1_1
 ((
uöt32_t
)0x00000002Ë

	)

1483 
	#ADC_SQR5_SQ1_2
 ((
uöt32_t
)0x00000004Ë

	)

1484 
	#ADC_SQR5_SQ1_3
 ((
uöt32_t
)0x00000008Ë

	)

1485 
	#ADC_SQR5_SQ1_4
 ((
uöt32_t
)0x00000010Ë

	)

1487 
	#ADC_SQR5_SQ2
 ((
uöt32_t
)0x000003E0Ë

	)

1488 
	#ADC_SQR5_SQ2_0
 ((
uöt32_t
)0x00000020Ë

	)

1489 
	#ADC_SQR5_SQ2_1
 ((
uöt32_t
)0x00000040Ë

	)

1490 
	#ADC_SQR5_SQ2_2
 ((
uöt32_t
)0x00000080Ë

	)

1491 
	#ADC_SQR5_SQ2_3
 ((
uöt32_t
)0x00000100Ë

	)

1492 
	#ADC_SQR5_SQ2_4
 ((
uöt32_t
)0x00000200Ë

	)

1494 
	#ADC_SQR5_SQ3
 ((
uöt32_t
)0x00007C00Ë

	)

1495 
	#ADC_SQR5_SQ3_0
 ((
uöt32_t
)0x00000400Ë

	)

1496 
	#ADC_SQR5_SQ3_1
 ((
uöt32_t
)0x00000800Ë

	)

1497 
	#ADC_SQR5_SQ3_2
 ((
uöt32_t
)0x00001000Ë

	)

1498 
	#ADC_SQR5_SQ3_3
 ((
uöt32_t
)0x00002000Ë

	)

1499 
	#ADC_SQR5_SQ3_4
 ((
uöt32_t
)0x00004000Ë

	)

1501 
	#ADC_SQR5_SQ4
 ((
uöt32_t
)0x000F8000Ë

	)

1502 
	#ADC_SQR5_SQ4_0
 ((
uöt32_t
)0x00008000Ë

	)

1503 
	#ADC_SQR5_SQ4_1
 ((
uöt32_t
)0x00010000Ë

	)

1504 
	#ADC_SQR5_SQ4_2
 ((
uöt32_t
)0x00020000Ë

	)

1505 
	#ADC_SQR5_SQ4_3
 ((
uöt32_t
)0x00040000Ë

	)

1506 
	#ADC_SQR5_SQ4_4
 ((
uöt32_t
)0x00080000Ë

	)

1508 
	#ADC_SQR5_SQ5
 ((
uöt32_t
)0x01F00000Ë

	)

1509 
	#ADC_SQR5_SQ5_0
 ((
uöt32_t
)0x00100000Ë

	)

1510 
	#ADC_SQR5_SQ5_1
 ((
uöt32_t
)0x00200000Ë

	)

1511 
	#ADC_SQR5_SQ5_2
 ((
uöt32_t
)0x00400000Ë

	)

1512 
	#ADC_SQR5_SQ5_3
 ((
uöt32_t
)0x00800000Ë

	)

1513 
	#ADC_SQR5_SQ5_4
 ((
uöt32_t
)0x01000000Ë

	)

1515 
	#ADC_SQR5_SQ6
 ((
uöt32_t
)0x3E000000Ë

	)

1516 
	#ADC_SQR5_SQ6_0
 ((
uöt32_t
)0x02000000Ë

	)

1517 
	#ADC_SQR5_SQ6_1
 ((
uöt32_t
)0x04000000Ë

	)

1518 
	#ADC_SQR5_SQ6_2
 ((
uöt32_t
)0x08000000Ë

	)

1519 
	#ADC_SQR5_SQ6_3
 ((
uöt32_t
)0x10000000Ë

	)

1520 
	#ADC_SQR5_SQ6_4
 ((
uöt32_t
)0x20000000Ë

	)

1524 
	#ADC_JSQR_JSQ1
 ((
uöt32_t
)0x0000001FË

	)

1525 
	#ADC_JSQR_JSQ1_0
 ((
uöt32_t
)0x00000001Ë

	)

1526 
	#ADC_JSQR_JSQ1_1
 ((
uöt32_t
)0x00000002Ë

	)

1527 
	#ADC_JSQR_JSQ1_2
 ((
uöt32_t
)0x00000004Ë

	)

1528 
	#ADC_JSQR_JSQ1_3
 ((
uöt32_t
)0x00000008Ë

	)

1529 
	#ADC_JSQR_JSQ1_4
 ((
uöt32_t
)0x00000010Ë

	)

1531 
	#ADC_JSQR_JSQ2
 ((
uöt32_t
)0x000003E0Ë

	)

1532 
	#ADC_JSQR_JSQ2_0
 ((
uöt32_t
)0x00000020Ë

	)

1533 
	#ADC_JSQR_JSQ2_1
 ((
uöt32_t
)0x00000040Ë

	)

1534 
	#ADC_JSQR_JSQ2_2
 ((
uöt32_t
)0x00000080Ë

	)

1535 
	#ADC_JSQR_JSQ2_3
 ((
uöt32_t
)0x00000100Ë

	)

1536 
	#ADC_JSQR_JSQ2_4
 ((
uöt32_t
)0x00000200Ë

	)

1538 
	#ADC_JSQR_JSQ3
 ((
uöt32_t
)0x00007C00Ë

	)

1539 
	#ADC_JSQR_JSQ3_0
 ((
uöt32_t
)0x00000400Ë

	)

1540 
	#ADC_JSQR_JSQ3_1
 ((
uöt32_t
)0x00000800Ë

	)

1541 
	#ADC_JSQR_JSQ3_2
 ((
uöt32_t
)0x00001000Ë

	)

1542 
	#ADC_JSQR_JSQ3_3
 ((
uöt32_t
)0x00002000Ë

	)

1543 
	#ADC_JSQR_JSQ3_4
 ((
uöt32_t
)0x00004000Ë

	)

1545 
	#ADC_JSQR_JSQ4
 ((
uöt32_t
)0x000F8000Ë

	)

1546 
	#ADC_JSQR_JSQ4_0
 ((
uöt32_t
)0x00008000Ë

	)

1547 
	#ADC_JSQR_JSQ4_1
 ((
uöt32_t
)0x00010000Ë

	)

1548 
	#ADC_JSQR_JSQ4_2
 ((
uöt32_t
)0x00020000Ë

	)

1549 
	#ADC_JSQR_JSQ4_3
 ((
uöt32_t
)0x00040000Ë

	)

1550 
	#ADC_JSQR_JSQ4_4
 ((
uöt32_t
)0x00080000Ë

	)

1552 
	#ADC_JSQR_JL
 ((
uöt32_t
)0x00300000Ë

	)

1553 
	#ADC_JSQR_JL_0
 ((
uöt32_t
)0x00100000Ë

	)

1554 
	#ADC_JSQR_JL_1
 ((
uöt32_t
)0x00200000Ë

	)

1557 
	#ADC_JDR1_JDATA
 ((
uöt32_t
)0x0000FFFFË

	)

1560 
	#ADC_JDR2_JDATA
 ((
uöt32_t
)0x0000FFFFË

	)

1563 
	#ADC_JDR3_JDATA
 ((
uöt32_t
)0x0000FFFFË

	)

1566 
	#ADC_JDR4_JDATA
 ((
uöt32_t
)0x0000FFFFË

	)

1569 
	#ADC_DR_DATA
 ((
uöt32_t
)0x0000FFFFË

	)

1572 
	#ADC_SMPR3_SMP30
 ((
uöt32_t
)0x00000007Ë

	)

1573 
	#ADC_SMPR3_SMP30_0
 ((
uöt32_t
)0x00000001Ë

	)

1574 
	#ADC_SMPR3_SMP30_1
 ((
uöt32_t
)0x00000002Ë

	)

1575 
	#ADC_SMPR3_SMP30_2
 ((
uöt32_t
)0x00000004Ë

	)

1577 
	#ADC_SMPR3_SMP31
 ((
uöt32_t
)0x00000038Ë

	)

1578 
	#ADC_SMPR3_SMP31_0
 ((
uöt32_t
)0x00000008Ë

	)

1579 
	#ADC_SMPR3_SMP31_1
 ((
uöt32_t
)0x00000010Ë

	)

1580 
	#ADC_SMPR3_SMP31_2
 ((
uöt32_t
)0x00000020Ë

	)

1583 
	#ADC_CSR_AWD1
 ((
uöt32_t
)0x00000001Ë

	)

1584 
	#ADC_CSR_EOC1
 ((
uöt32_t
)0x00000002Ë

	)

1585 
	#ADC_CSR_JEOC1
 ((
uöt32_t
)0x00000004Ë

	)

1586 
	#ADC_CSR_JSTRT1
 ((
uöt32_t
)0x00000008Ë

	)

1587 
	#ADC_CSR_STRT1
 ((
uöt32_t
)0x00000010Ë

	)

1588 
	#ADC_CSR_OVR1
 ((
uöt32_t
)0x00000020Ë

	)

1589 
	#ADC_CSR_ADONS1
 ((
uöt32_t
)0x00000040Ë

	)

1592 
	#ADC_CCR_ADCPRE
 ((
uöt32_t
)0x00030000Ë

	)

1593 
	#ADC_CCR_ADCPRE_0
 ((
uöt32_t
)0x00010000Ë

	)

1594 
	#ADC_CCR_ADCPRE_1
 ((
uöt32_t
)0x00020000Ë

	)

1595 
	#ADC_CCR_TSVREFE
 ((
uöt32_t
)0x00800000Ë

	)

1603 
	#AES_CR_EN
 ((
uöt32_t
)0x00000001Ë

	)

1604 
	#AES_CR_DATATYPE
 ((
uöt32_t
)0x00000006Ë

	)

1605 
	#AES_CR_DATATYPE_0
 ((
uöt32_t
)0x00000002Ë

	)

1606 
	#AES_CR_DATATYPE_1
 ((
uöt32_t
)0x00000004Ë

	)

1608 
	#AES_CR_MODE
 ((
uöt32_t
)0x00000018Ë

	)

1609 
	#AES_CR_MODE_0
 ((
uöt32_t
)0x00000008Ë

	)

1610 
	#AES_CR_MODE_1
 ((
uöt32_t
)0x00000010Ë

	)

1612 
	#AES_CR_CHMOD
 ((
uöt32_t
)0x00000060Ë

	)

1613 
	#AES_CR_CHMOD_0
 ((
uöt32_t
)0x00000020Ë

	)

1614 
	#AES_CR_CHMOD_1
 ((
uöt32_t
)0x00000040Ë

	)

1616 
	#AES_CR_CCFC
 ((
uöt32_t
)0x00000080Ë

	)

1617 
	#AES_CR_ERRC
 ((
uöt32_t
)0x00000100Ë

	)

1618 
	#AES_CR_CCIE
 ((
uöt32_t
)0x00000200Ë

	)

1619 
	#AES_CR_ERRIE
 ((
uöt32_t
)0x00000400Ë

	)

1620 
	#AES_CR_DMAINEN
 ((
uöt32_t
)0x00000800Ë

	)

1621 
	#AES_CR_DMAOUTEN
 ((
uöt32_t
)0x00001000Ë

	)

1624 
	#AES_SR_CCF
 ((
uöt32_t
)0x00000001Ë

	)

1625 
	#AES_SR_RDERR
 ((
uöt32_t
)0x00000002Ë

	)

1626 
	#AES_SR_WRERR
 ((
uöt32_t
)0x00000004Ë

	)

1629 
	#AES_DINR
 ((
uöt32_t
)0x0000FFFFË

	)

1632 
	#AES_DOUTR
 ((
uöt32_t
)0x0000FFFFË

	)

1635 
	#AES_KEYR0
 ((
uöt32_t
)0x0000FFFFË

	)

1638 
	#AES_KEYR1
 ((
uöt32_t
)0x0000FFFFË

	)

1641 
	#AES_KEYR2
 ((
uöt32_t
)0x0000FFFFË

	)

1644 
	#AES_KEYR3
 ((
uöt32_t
)0x0000FFFFË

	)

1647 
	#AES_IVR0
 ((
uöt32_t
)0x0000FFFFË

	)

1650 
	#AES_IVR1
 ((
uöt32_t
)0x0000FFFFË

	)

1653 
	#AES_IVR2
 ((
uöt32_t
)0x0000FFFFË

	)

1656 
	#AES_IVR3
 ((
uöt32_t
)0x0000FFFFË

	)

1665 
	#COMP_CSR_10KPU
 ((
uöt32_t
)0x00000001Ë

	)

1666 
	#COMP_CSR_400KPU
 ((
uöt32_t
)0x00000002Ë

	)

1667 
	#COMP_CSR_10KPD
 ((
uöt32_t
)0x00000004Ë

	)

1668 
	#COMP_CSR_400KPD
 ((
uöt32_t
)0x00000008Ë

	)

1670 
	#COMP_CSR_CMP1EN
 ((
uöt32_t
)0x00000010Ë

	)

1671 
	#COMP_CSR_SW1
 ((
uöt32_t
)0x00000020Ë

	)

1672 
	#COMP_CSR_CMP1OUT
 ((
uöt32_t
)0x00000080Ë

	)

1674 
	#COMP_CSR_SPEED
 ((
uöt32_t
)0x00001000Ë

	)

1675 
	#COMP_CSR_CMP2OUT
 ((
uöt32_t
)0x00002000Ë

	)

1677 
	#COMP_CSR_VREFOUTEN
 ((
uöt32_t
)0x00010000Ë

	)

1678 
	#COMP_CSR_WNDWE
 ((
uöt32_t
)0x00020000Ë

	)

1680 
	#COMP_CSR_INSEL
 ((
uöt32_t
)0x001C0000Ë

	)

1681 
	#COMP_CSR_INSEL_0
 ((
uöt32_t
)0x00040000Ë

	)

1682 
	#COMP_CSR_INSEL_1
 ((
uöt32_t
)0x00080000Ë

	)

1683 
	#COMP_CSR_INSEL_2
 ((
uöt32_t
)0x00100000Ë

	)

1685 
	#COMP_CSR_OUTSEL
 ((
uöt32_t
)0x00E00000Ë

	)

1686 
	#COMP_CSR_OUTSEL_0
 ((
uöt32_t
)0x00200000Ë

	)

1687 
	#COMP_CSR_OUTSEL_1
 ((
uöt32_t
)0x00400000Ë

	)

1688 
	#COMP_CSR_OUTSEL_2
 ((
uöt32_t
)0x00800000Ë

	)

1690 
	#COMP_CSR_FCH3
 ((
uöt32_t
)0x04000000Ë

	)

1691 
	#COMP_CSR_FCH8
 ((
uöt32_t
)0x08000000Ë

	)

1692 
	#COMP_CSR_RCH13
 ((
uöt32_t
)0x10000000Ë

	)

1694 
	#COMP_CSR_CAIE
 ((
uöt32_t
)0x20000000Ë

	)

1695 
	#COMP_CSR_CAIF
 ((
uöt32_t
)0x40000000Ë

	)

1696 
	#COMP_CSR_TSUSP
 ((
uöt32_t
)0x80000000Ë

	)

1704 
	#OPAMP_CSR_OPA1PD
 ((
uöt32_t
)0x00000001Ë

	)

1705 
	#OPAMP_CSR_S3SEL1
 ((
uöt32_t
)0x00000002Ë

	)

1706 
	#OPAMP_CSR_S4SEL1
 ((
uöt32_t
)0x00000004Ë

	)

1707 
	#OPAMP_CSR_S5SEL1
 ((
uöt32_t
)0x00000008Ë

	)

1708 
	#OPAMP_CSR_S6SEL1
 ((
uöt32_t
)0x00000010Ë

	)

1709 
	#OPAMP_CSR_OPA1CAL_L
 ((
uöt32_t
)0x00000020Ë

	)

1710 
	#OPAMP_CSR_OPA1CAL_H
 ((
uöt32_t
)0x00000040Ë

	)

1711 
	#OPAMP_CSR_OPA1LPM
 ((
uöt32_t
)0x00000080Ë

	)

1712 
	#OPAMP_CSR_OPA2PD
 ((
uöt32_t
)0x00000100Ë

	)

1713 
	#OPAMP_CSR_S3SEL2
 ((
uöt32_t
)0x00000200Ë

	)

1714 
	#OPAMP_CSR_S4SEL2
 ((
uöt32_t
)0x00000400Ë

	)

1715 
	#OPAMP_CSR_S5SEL2
 ((
uöt32_t
)0x00000800Ë

	)

1716 
	#OPAMP_CSR_S6SEL2
 ((
uöt32_t
)0x00001000Ë

	)

1717 
	#OPAMP_CSR_OPA2CAL_L
 ((
uöt32_t
)0x00002000Ë

	)

1718 
	#OPAMP_CSR_OPA2CAL_H
 ((
uöt32_t
)0x00004000Ë

	)

1719 
	#OPAMP_CSR_OPA2LPM
 ((
uöt32_t
)0x00008000Ë

	)

1720 
	#OPAMP_CSR_OPA3PD
 ((
uöt32_t
)0x00010000Ë

	)

1721 
	#OPAMP_CSR_S3SEL3
 ((
uöt32_t
)0x00020000Ë

	)

1722 
	#OPAMP_CSR_S4SEL3
 ((
uöt32_t
)0x00040000Ë

	)

1723 
	#OPAMP_CSR_S5SEL3
 ((
uöt32_t
)0x00080000Ë

	)

1724 
	#OPAMP_CSR_S6SEL3
 ((
uöt32_t
)0x00100000Ë

	)

1725 
	#OPAMP_CSR_OPA3CAL_L
 ((
uöt32_t
)0x00200000Ë

	)

1726 
	#OPAMP_CSR_OPA3CAL_H
 ((
uöt32_t
)0x00400000Ë

	)

1727 
	#OPAMP_CSR_OPA3LPM
 ((
uöt32_t
)0x00800000Ë

	)

1728 
	#OPAMP_CSR_ANAWSEL1
 ((
uöt32_t
)0x01000000Ë

	)

1729 
	#OPAMP_CSR_ANAWSEL2
 ((
uöt32_t
)0x02000000Ë

	)

1730 
	#OPAMP_CSR_ANAWSEL3
 ((
uöt32_t
)0x04000000Ë

	)

1731 
	#OPAMP_CSR_S7SEL2
 ((
uöt32_t
)0x08000000Ë

	)

1732 
	#OPAMP_CSR_AOP_RANGE
 ((
uöt32_t
)0x10000000Ë

	)

1733 
	#OPAMP_CSR_OPA1CALOUT
 ((
uöt32_t
)0x20000000Ë

	)

1734 
	#OPAMP_CSR_OPA2CALOUT
 ((
uöt32_t
)0x40000000Ë

	)

1735 
	#OPAMP_CSR_OPA3CALOUT
 ((
uöt32_t
)0x80000000Ë

	)

1738 
	#OPAMP_OTR_AO1_OPT_OFFSET_TRIM
 ((
uöt32_t
)0x000003FFË

	)

1739 
	#OPAMP_OTR_AO2_OPT_OFFSET_TRIM
 ((
uöt32_t
)0x000FFC00Ë

	)

1740 
	#OPAMP_OTR_AO3_OPT_OFFSET_TRIM
 ((
uöt32_t
)0x3FF00000Ë

	)

1741 
	#OPAMP_OTR_OT_USER
 ((
uöt32_t
)0x80000000Ë

	)

1744 
	#OPAMP_LP_OTR_AO1_OPT_OFFSET_TRIM_LP
 ((
uöt32_t
)0x000003FFË

	)

1745 
	#OPAMP_LP_OTR_AO2_OPT_OFFSET_TRIM_LP
 ((
uöt32_t
)0x000FFC00Ë

	)

1746 
	#OPAMP_LP_OTR_AO3_OPT_OFFSET_TRIM_LP
 ((
uöt32_t
)0x3FF00000Ë

	)

1755 
	#CRC_DR_DR
 ((
uöt32_t
)0xFFFFFFFFË

	)

1758 
	#CRC_IDR_IDR
 ((
uöt8_t
)0xFFË

	)

1761 
	#CRC_CR_RESET
 ((
uöt32_t
)0x00000001Ë

	)

1770 
	#DAC_CR_EN1
 ((
uöt32_t
)0x00000001Ë

	)

1771 
	#DAC_CR_BOFF1
 ((
uöt32_t
)0x00000002Ë

	)

1772 
	#DAC_CR_TEN1
 ((
uöt32_t
)0x00000004Ë

	)

1774 
	#DAC_CR_TSEL1
 ((
uöt32_t
)0x00000038Ë

	)

1775 
	#DAC_CR_TSEL1_0
 ((
uöt32_t
)0x00000008Ë

	)

1776 
	#DAC_CR_TSEL1_1
 ((
uöt32_t
)0x00000010Ë

	)

1777 
	#DAC_CR_TSEL1_2
 ((
uöt32_t
)0x00000020Ë

	)

1779 
	#DAC_CR_WAVE1
 ((
uöt32_t
)0x000000C0Ë

	)

1780 
	#DAC_CR_WAVE1_0
 ((
uöt32_t
)0x00000040Ë

	)

1781 
	#DAC_CR_WAVE1_1
 ((
uöt32_t
)0x00000080Ë

	)

1783 
	#DAC_CR_MAMP1
 ((
uöt32_t
)0x00000F00Ë

	)

1784 
	#DAC_CR_MAMP1_0
 ((
uöt32_t
)0x00000100Ë

	)

1785 
	#DAC_CR_MAMP1_1
 ((
uöt32_t
)0x00000200Ë

	)

1786 
	#DAC_CR_MAMP1_2
 ((
uöt32_t
)0x00000400Ë

	)

1787 
	#DAC_CR_MAMP1_3
 ((
uöt32_t
)0x00000800Ë

	)

1789 
	#DAC_CR_DMAEN1
 ((
uöt32_t
)0x00001000Ë

	)

1790 
	#DAC_CR_DMAUDRIE1
 ((
uöt32_t
)0x00002000Ë

	)

1791 
	#DAC_CR_EN2
 ((
uöt32_t
)0x00010000Ë

	)

1792 
	#DAC_CR_BOFF2
 ((
uöt32_t
)0x00020000Ë

	)

1793 
	#DAC_CR_TEN2
 ((
uöt32_t
)0x00040000Ë

	)

1795 
	#DAC_CR_TSEL2
 ((
uöt32_t
)0x00380000Ë

	)

1796 
	#DAC_CR_TSEL2_0
 ((
uöt32_t
)0x00080000Ë

	)

1797 
	#DAC_CR_TSEL2_1
 ((
uöt32_t
)0x00100000Ë

	)

1798 
	#DAC_CR_TSEL2_2
 ((
uöt32_t
)0x00200000Ë

	)

1800 
	#DAC_CR_WAVE2
 ((
uöt32_t
)0x00C00000Ë

	)

1801 
	#DAC_CR_WAVE2_0
 ((
uöt32_t
)0x00400000Ë

	)

1802 
	#DAC_CR_WAVE2_1
 ((
uöt32_t
)0x00800000Ë

	)

1804 
	#DAC_CR_MAMP2
 ((
uöt32_t
)0x0F000000Ë

	)

1805 
	#DAC_CR_MAMP2_0
 ((
uöt32_t
)0x01000000Ë

	)

1806 
	#DAC_CR_MAMP2_1
 ((
uöt32_t
)0x02000000Ë

	)

1807 
	#DAC_CR_MAMP2_2
 ((
uöt32_t
)0x04000000Ë

	)

1808 
	#DAC_CR_MAMP2_3
 ((
uöt32_t
)0x08000000Ë

	)

1810 
	#DAC_CR_DMAEN2
 ((
uöt32_t
)0x10000000Ë

	)

1811 
	#DAC_CR_DMAUDRIE2
 ((
uöt32_t
)0x20000000Ë

	)

1813 
	#DAC_SWTRIGR_SWTRIG1
 ((
uöt8_t
)0x01Ë

	)

1814 
	#DAC_SWTRIGR_SWTRIG2
 ((
uöt8_t
)0x02Ë

	)

1817 
	#DAC_DHR12R1_DACC1DHR
 ((
uöt16_t
)0x0FFFË

	)

1820 
	#DAC_DHR12L1_DACC1DHR
 ((
uöt16_t
)0xFFF0Ë

	)

1823 
	#DAC_DHR8R1_DACC1DHR
 ((
uöt8_t
)0xFFË

	)

1826 
	#DAC_DHR12R2_DACC2DHR
 ((
uöt16_t
)0x0FFFË

	)

1829 
	#DAC_DHR12L2_DACC2DHR
 ((
uöt16_t
)0xFFF0Ë

	)

1832 
	#DAC_DHR8R2_DACC2DHR
 ((
uöt8_t
)0xFFË

	)

1835 
	#DAC_DHR12RD_DACC1DHR
 ((
uöt32_t
)0x00000FFFË

	)

1836 
	#DAC_DHR12RD_DACC2DHR
 ((
uöt32_t
)0x0FFF0000Ë

	)

1839 
	#DAC_DHR12LD_DACC1DHR
 ((
uöt32_t
)0x0000FFF0Ë

	)

1840 
	#DAC_DHR12LD_DACC2DHR
 ((
uöt32_t
)0xFFF00000Ë

	)

1843 
	#DAC_DHR8RD_DACC1DHR
 ((
uöt16_t
)0x00FFË

	)

1844 
	#DAC_DHR8RD_DACC2DHR
 ((
uöt16_t
)0xFF00Ë

	)

1847 
	#DAC_DOR1_DACC1DOR
 ((
uöt16_t
)0x0FFFË

	)

1850 
	#DAC_DOR2_DACC2DOR
 ((
uöt16_t
)0x0FFFË

	)

1853 
	#DAC_SR_DMAUDR1
 ((
uöt32_t
)0x00002000Ë

	)

1854 
	#DAC_SR_DMAUDR2
 ((
uöt32_t
)0x20000000Ë

	)

1863 
	#DBGMCU_IDCODE_DEV_ID
 ((
uöt32_t
)0x00000FFFË

	)

1865 
	#DBGMCU_IDCODE_REV_ID
 ((
uöt32_t
)0xFFFF0000Ë

	)

1866 
	#DBGMCU_IDCODE_REV_ID_0
 ((
uöt32_t
)0x00010000Ë

	)

1867 
	#DBGMCU_IDCODE_REV_ID_1
 ((
uöt32_t
)0x00020000Ë

	)

1868 
	#DBGMCU_IDCODE_REV_ID_2
 ((
uöt32_t
)0x00040000Ë

	)

1869 
	#DBGMCU_IDCODE_REV_ID_3
 ((
uöt32_t
)0x00080000Ë

	)

1870 
	#DBGMCU_IDCODE_REV_ID_4
 ((
uöt32_t
)0x00100000Ë

	)

1871 
	#DBGMCU_IDCODE_REV_ID_5
 ((
uöt32_t
)0x00200000Ë

	)

1872 
	#DBGMCU_IDCODE_REV_ID_6
 ((
uöt32_t
)0x00400000Ë

	)

1873 
	#DBGMCU_IDCODE_REV_ID_7
 ((
uöt32_t
)0x00800000Ë

	)

1874 
	#DBGMCU_IDCODE_REV_ID_8
 ((
uöt32_t
)0x01000000Ë

	)

1875 
	#DBGMCU_IDCODE_REV_ID_9
 ((
uöt32_t
)0x02000000Ë

	)

1876 
	#DBGMCU_IDCODE_REV_ID_10
 ((
uöt32_t
)0x04000000Ë

	)

1877 
	#DBGMCU_IDCODE_REV_ID_11
 ((
uöt32_t
)0x08000000Ë

	)

1878 
	#DBGMCU_IDCODE_REV_ID_12
 ((
uöt32_t
)0x10000000Ë

	)

1879 
	#DBGMCU_IDCODE_REV_ID_13
 ((
uöt32_t
)0x20000000Ë

	)

1880 
	#DBGMCU_IDCODE_REV_ID_14
 ((
uöt32_t
)0x40000000Ë

	)

1881 
	#DBGMCU_IDCODE_REV_ID_15
 ((
uöt32_t
)0x80000000Ë

	)

1884 
	#DBGMCU_CR_DBG_SLEEP
 ((
uöt32_t
)0x00000001Ë

	)

1885 
	#DBGMCU_CR_DBG_STOP
 ((
uöt32_t
)0x00000002Ë

	)

1886 
	#DBGMCU_CR_DBG_STANDBY
 ((
uöt32_t
)0x00000004Ë

	)

1887 
	#DBGMCU_CR_TRACE_IOEN
 ((
uöt32_t
)0x00000020Ë

	)

1889 
	#DBGMCU_CR_TRACE_MODE
 ((
uöt32_t
)0x000000C0Ë

	)

1890 
	#DBGMCU_CR_TRACE_MODE_0
 ((
uöt32_t
)0x00000040Ë

	)

1891 
	#DBGMCU_CR_TRACE_MODE_1
 ((
uöt32_t
)0x00000080Ë

	)

1895 
	#DBGMCU_APB1_FZ_DBG_TIM2_STOP
 ((
uöt32_t
)0x00000001Ë

	)

1896 
	#DBGMCU_APB1_FZ_DBG_TIM3_STOP
 ((
uöt32_t
)0x00000002Ë

	)

1897 
	#DBGMCU_APB1_FZ_DBG_TIM4_STOP
 ((
uöt32_t
)0x00000004Ë

	)

1898 
	#DBGMCU_APB1_FZ_DBG_TIM5_STOP
 ((
uöt32_t
)0x00000008Ë

	)

1899 
	#DBGMCU_APB1_FZ_DBG_TIM6_STOP
 ((
uöt32_t
)0x00000010Ë

	)

1900 
	#DBGMCU_APB1_FZ_DBG_TIM7_STOP
 ((
uöt32_t
)0x00000020Ë

	)

1901 
	#DBGMCU_APB1_FZ_DBG_RTC_STOP
 ((
uöt32_t
)0x00000400Ë

	)

1902 
	#DBGMCU_APB1_FZ_DBG_WWDG_STOP
 ((
uöt32_t
)0x00000800Ë

	)

1903 
	#DBGMCU_APB1_FZ_DBG_IWDG_STOP
 ((
uöt32_t
)0x00001000Ë

	)

1904 
	#DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT
 ((
uöt32_t
)0x00200000Ë

	)

1905 
	#DBGMCU_APB1_FZ_DBG_I2C2_SMBUS_TIMEOUT
 ((
uöt32_t
)0x00400000Ë

	)

1909 
	#DBGMCU_APB2_FZ_DBG_TIM9_STOP
 ((
uöt32_t
)0x00000004Ë

	)

1910 
	#DBGMCU_APB2_FZ_DBG_TIM10_STOP
 ((
uöt32_t
)0x00000008Ë

	)

1911 
	#DBGMCU_APB2_FZ_DBG_TIM11_STOP
 ((
uöt32_t
)0x00000010Ë

	)

1920 
	#DMA_ISR_GIF1
 ((
uöt32_t
)0x00000001Ë

	)

1921 
	#DMA_ISR_TCIF1
 ((
uöt32_t
)0x00000002Ë

	)

1922 
	#DMA_ISR_HTIF1
 ((
uöt32_t
)0x00000004Ë

	)

1923 
	#DMA_ISR_TEIF1
 ((
uöt32_t
)0x00000008Ë

	)

1924 
	#DMA_ISR_GIF2
 ((
uöt32_t
)0x00000010Ë

	)

1925 
	#DMA_ISR_TCIF2
 ((
uöt32_t
)0x00000020Ë

	)

1926 
	#DMA_ISR_HTIF2
 ((
uöt32_t
)0x00000040Ë

	)

1927 
	#DMA_ISR_TEIF2
 ((
uöt32_t
)0x00000080Ë

	)

1928 
	#DMA_ISR_GIF3
 ((
uöt32_t
)0x00000100Ë

	)

1929 
	#DMA_ISR_TCIF3
 ((
uöt32_t
)0x00000200Ë

	)

1930 
	#DMA_ISR_HTIF3
 ((
uöt32_t
)0x00000400Ë

	)

1931 
	#DMA_ISR_TEIF3
 ((
uöt32_t
)0x00000800Ë

	)

1932 
	#DMA_ISR_GIF4
 ((
uöt32_t
)0x00001000Ë

	)

1933 
	#DMA_ISR_TCIF4
 ((
uöt32_t
)0x00002000Ë

	)

1934 
	#DMA_ISR_HTIF4
 ((
uöt32_t
)0x00004000Ë

	)

1935 
	#DMA_ISR_TEIF4
 ((
uöt32_t
)0x00008000Ë

	)

1936 
	#DMA_ISR_GIF5
 ((
uöt32_t
)0x00010000Ë

	)

1937 
	#DMA_ISR_TCIF5
 ((
uöt32_t
)0x00020000Ë

	)

1938 
	#DMA_ISR_HTIF5
 ((
uöt32_t
)0x00040000Ë

	)

1939 
	#DMA_ISR_TEIF5
 ((
uöt32_t
)0x00080000Ë

	)

1940 
	#DMA_ISR_GIF6
 ((
uöt32_t
)0x00100000Ë

	)

1941 
	#DMA_ISR_TCIF6
 ((
uöt32_t
)0x00200000Ë

	)

1942 
	#DMA_ISR_HTIF6
 ((
uöt32_t
)0x00400000Ë

	)

1943 
	#DMA_ISR_TEIF6
 ((
uöt32_t
)0x00800000Ë

	)

1944 
	#DMA_ISR_GIF7
 ((
uöt32_t
)0x01000000Ë

	)

1945 
	#DMA_ISR_TCIF7
 ((
uöt32_t
)0x02000000Ë

	)

1946 
	#DMA_ISR_HTIF7
 ((
uöt32_t
)0x04000000Ë

	)

1947 
	#DMA_ISR_TEIF7
 ((
uöt32_t
)0x08000000Ë

	)

1950 
	#DMA_IFCR_CGIF1
 ((
uöt32_t
)0x00000001Ë

	)

1951 
	#DMA_IFCR_CTCIF1
 ((
uöt32_t
)0x00000002Ë

	)

1952 
	#DMA_IFCR_CHTIF1
 ((
uöt32_t
)0x00000004Ë

	)

1953 
	#DMA_IFCR_CTEIF1
 ((
uöt32_t
)0x00000008Ë

	)

1954 
	#DMA_IFCR_CGIF2
 ((
uöt32_t
)0x00000010Ë

	)

1955 
	#DMA_IFCR_CTCIF2
 ((
uöt32_t
)0x00000020Ë

	)

1956 
	#DMA_IFCR_CHTIF2
 ((
uöt32_t
)0x00000040Ë

	)

1957 
	#DMA_IFCR_CTEIF2
 ((
uöt32_t
)0x00000080Ë

	)

1958 
	#DMA_IFCR_CGIF3
 ((
uöt32_t
)0x00000100Ë

	)

1959 
	#DMA_IFCR_CTCIF3
 ((
uöt32_t
)0x00000200Ë

	)

1960 
	#DMA_IFCR_CHTIF3
 ((
uöt32_t
)0x00000400Ë

	)

1961 
	#DMA_IFCR_CTEIF3
 ((
uöt32_t
)0x00000800Ë

	)

1962 
	#DMA_IFCR_CGIF4
 ((
uöt32_t
)0x00001000Ë

	)

1963 
	#DMA_IFCR_CTCIF4
 ((
uöt32_t
)0x00002000Ë

	)

1964 
	#DMA_IFCR_CHTIF4
 ((
uöt32_t
)0x00004000Ë

	)

1965 
	#DMA_IFCR_CTEIF4
 ((
uöt32_t
)0x00008000Ë

	)

1966 
	#DMA_IFCR_CGIF5
 ((
uöt32_t
)0x00010000Ë

	)

1967 
	#DMA_IFCR_CTCIF5
 ((
uöt32_t
)0x00020000Ë

	)

1968 
	#DMA_IFCR_CHTIF5
 ((
uöt32_t
)0x00040000Ë

	)

1969 
	#DMA_IFCR_CTEIF5
 ((
uöt32_t
)0x00080000Ë

	)

1970 
	#DMA_IFCR_CGIF6
 ((
uöt32_t
)0x00100000Ë

	)

1971 
	#DMA_IFCR_CTCIF6
 ((
uöt32_t
)0x00200000Ë

	)

1972 
	#DMA_IFCR_CHTIF6
 ((
uöt32_t
)0x00400000Ë

	)

1973 
	#DMA_IFCR_CTEIF6
 ((
uöt32_t
)0x00800000Ë

	)

1974 
	#DMA_IFCR_CGIF7
 ((
uöt32_t
)0x01000000Ë

	)

1975 
	#DMA_IFCR_CTCIF7
 ((
uöt32_t
)0x02000000Ë

	)

1976 
	#DMA_IFCR_CHTIF7
 ((
uöt32_t
)0x04000000Ë

	)

1977 
	#DMA_IFCR_CTEIF7
 ((
uöt32_t
)0x08000000Ë

	)

1980 
	#DMA_CCR1_EN
 ((
uöt16_t
)0x0001Ë

	)

1981 
	#DMA_CCR1_TCIE
 ((
uöt16_t
)0x0002Ë

	)

1982 
	#DMA_CCR1_HTIE
 ((
uöt16_t
)0x0004Ë

	)

1983 
	#DMA_CCR1_TEIE
 ((
uöt16_t
)0x0008Ë

	)

1984 
	#DMA_CCR1_DIR
 ((
uöt16_t
)0x0010Ë

	)

1985 
	#DMA_CCR1_CIRC
 ((
uöt16_t
)0x0020Ë

	)

1986 
	#DMA_CCR1_PINC
 ((
uöt16_t
)0x0040Ë

	)

1987 
	#DMA_CCR1_MINC
 ((
uöt16_t
)0x0080Ë

	)

1989 
	#DMA_CCR1_PSIZE
 ((
uöt16_t
)0x0300Ë

	)

1990 
	#DMA_CCR1_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

1991 
	#DMA_CCR1_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

1993 
	#DMA_CCR1_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

1994 
	#DMA_CCR1_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

1995 
	#DMA_CCR1_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

1997 
	#DMA_CCR1_PL
 ((
uöt16_t
)0x3000Ë

	)

1998 
	#DMA_CCR1_PL_0
 ((
uöt16_t
)0x1000Ë

	)

1999 
	#DMA_CCR1_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2001 
	#DMA_CCR1_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2004 
	#DMA_CCR2_EN
 ((
uöt16_t
)0x0001Ë

	)

2005 
	#DMA_CCR2_TCIE
 ((
uöt16_t
)0x0002Ë

	)

2006 
	#DMA_CCR2_HTIE
 ((
uöt16_t
)0x0004Ë

	)

2007 
	#DMA_CCR2_TEIE
 ((
uöt16_t
)0x0008Ë

	)

2008 
	#DMA_CCR2_DIR
 ((
uöt16_t
)0x0010Ë

	)

2009 
	#DMA_CCR2_CIRC
 ((
uöt16_t
)0x0020Ë

	)

2010 
	#DMA_CCR2_PINC
 ((
uöt16_t
)0x0040Ë

	)

2011 
	#DMA_CCR2_MINC
 ((
uöt16_t
)0x0080Ë

	)

2013 
	#DMA_CCR2_PSIZE
 ((
uöt16_t
)0x0300Ë

	)

2014 
	#DMA_CCR2_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

2015 
	#DMA_CCR2_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

2017 
	#DMA_CCR2_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

2018 
	#DMA_CCR2_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

2019 
	#DMA_CCR2_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

2021 
	#DMA_CCR2_PL
 ((
uöt16_t
)0x3000Ë

	)

2022 
	#DMA_CCR2_PL_0
 ((
uöt16_t
)0x1000Ë

	)

2023 
	#DMA_CCR2_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2025 
	#DMA_CCR2_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2028 
	#DMA_CCR3_EN
 ((
uöt16_t
)0x0001Ë

	)

2029 
	#DMA_CCR3_TCIE
 ((
uöt16_t
)0x0002Ë

	)

2030 
	#DMA_CCR3_HTIE
 ((
uöt16_t
)0x0004Ë

	)

2031 
	#DMA_CCR3_TEIE
 ((
uöt16_t
)0x0008Ë

	)

2032 
	#DMA_CCR3_DIR
 ((
uöt16_t
)0x0010Ë

	)

2033 
	#DMA_CCR3_CIRC
 ((
uöt16_t
)0x0020Ë

	)

2034 
	#DMA_CCR3_PINC
 ((
uöt16_t
)0x0040Ë

	)

2035 
	#DMA_CCR3_MINC
 ((
uöt16_t
)0x0080Ë

	)

2037 
	#DMA_CCR3_PSIZE
 ((
uöt16_t
)0x0300Ë

	)

2038 
	#DMA_CCR3_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

2039 
	#DMA_CCR3_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

2041 
	#DMA_CCR3_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

2042 
	#DMA_CCR3_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

2043 
	#DMA_CCR3_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

2045 
	#DMA_CCR3_PL
 ((
uöt16_t
)0x3000Ë

	)

2046 
	#DMA_CCR3_PL_0
 ((
uöt16_t
)0x1000Ë

	)

2047 
	#DMA_CCR3_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2049 
	#DMA_CCR3_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2052 
	#DMA_CCR4_EN
 ((
uöt16_t
)0x0001Ë

	)

2053 
	#DMA_CCR4_TCIE
 ((
uöt16_t
)0x0002Ë

	)

2054 
	#DMA_CCR4_HTIE
 ((
uöt16_t
)0x0004Ë

	)

2055 
	#DMA_CCR4_TEIE
 ((
uöt16_t
)0x0008Ë

	)

2056 
	#DMA_CCR4_DIR
 ((
uöt16_t
)0x0010Ë

	)

2057 
	#DMA_CCR4_CIRC
 ((
uöt16_t
)0x0020Ë

	)

2058 
	#DMA_CCR4_PINC
 ((
uöt16_t
)0x0040Ë

	)

2059 
	#DMA_CCR4_MINC
 ((
uöt16_t
)0x0080Ë

	)

2061 
	#DMA_CCR4_PSIZE
 ((
uöt16_t
)0x0300Ë

	)

2062 
	#DMA_CCR4_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

2063 
	#DMA_CCR4_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

2065 
	#DMA_CCR4_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

2066 
	#DMA_CCR4_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

2067 
	#DMA_CCR4_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

2069 
	#DMA_CCR4_PL
 ((
uöt16_t
)0x3000Ë

	)

2070 
	#DMA_CCR4_PL_0
 ((
uöt16_t
)0x1000Ë

	)

2071 
	#DMA_CCR4_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2073 
	#DMA_CCR4_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2076 
	#DMA_CCR5_EN
 ((
uöt16_t
)0x0001Ë

	)

2077 
	#DMA_CCR5_TCIE
 ((
uöt16_t
)0x0002Ë

	)

2078 
	#DMA_CCR5_HTIE
 ((
uöt16_t
)0x0004Ë

	)

2079 
	#DMA_CCR5_TEIE
 ((
uöt16_t
)0x0008Ë

	)

2080 
	#DMA_CCR5_DIR
 ((
uöt16_t
)0x0010Ë

	)

2081 
	#DMA_CCR5_CIRC
 ((
uöt16_t
)0x0020Ë

	)

2082 
	#DMA_CCR5_PINC
 ((
uöt16_t
)0x0040Ë

	)

2083 
	#DMA_CCR5_MINC
 ((
uöt16_t
)0x0080Ë

	)

2085 
	#DMA_CCR5_PSIZE
 ((
uöt16_t
)0x0300Ë

	)

2086 
	#DMA_CCR5_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

2087 
	#DMA_CCR5_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

2089 
	#DMA_CCR5_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

2090 
	#DMA_CCR5_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

2091 
	#DMA_CCR5_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

2093 
	#DMA_CCR5_PL
 ((
uöt16_t
)0x3000Ë

	)

2094 
	#DMA_CCR5_PL_0
 ((
uöt16_t
)0x1000Ë

	)

2095 
	#DMA_CCR5_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2097 
	#DMA_CCR5_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2100 
	#DMA_CCR6_EN
 ((
uöt16_t
)0x0001Ë

	)

2101 
	#DMA_CCR6_TCIE
 ((
uöt16_t
)0x0002Ë

	)

2102 
	#DMA_CCR6_HTIE
 ((
uöt16_t
)0x0004Ë

	)

2103 
	#DMA_CCR6_TEIE
 ((
uöt16_t
)0x0008Ë

	)

2104 
	#DMA_CCR6_DIR
 ((
uöt16_t
)0x0010Ë

	)

2105 
	#DMA_CCR6_CIRC
 ((
uöt16_t
)0x0020Ë

	)

2106 
	#DMA_CCR6_PINC
 ((
uöt16_t
)0x0040Ë

	)

2107 
	#DMA_CCR6_MINC
 ((
uöt16_t
)0x0080Ë

	)

2109 
	#DMA_CCR6_PSIZE
 ((
uöt16_t
)0x0300Ë

	)

2110 
	#DMA_CCR6_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

2111 
	#DMA_CCR6_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

2113 
	#DMA_CCR6_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

2114 
	#DMA_CCR6_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

2115 
	#DMA_CCR6_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

2117 
	#DMA_CCR6_PL
 ((
uöt16_t
)0x3000Ë

	)

2118 
	#DMA_CCR6_PL_0
 ((
uöt16_t
)0x1000Ë

	)

2119 
	#DMA_CCR6_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2121 
	#DMA_CCR6_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2124 
	#DMA_CCR7_EN
 ((
uöt16_t
)0x0001Ë

	)

2125 
	#DMA_CCR7_TCIE
 ((
uöt16_t
)0x0002Ë

	)

2126 
	#DMA_CCR7_HTIE
 ((
uöt16_t
)0x0004Ë

	)

2127 
	#DMA_CCR7_TEIE
 ((
uöt16_t
)0x0008Ë

	)

2128 
	#DMA_CCR7_DIR
 ((
uöt16_t
)0x0010Ë

	)

2129 
	#DMA_CCR7_CIRC
 ((
uöt16_t
)0x0020Ë

	)

2130 
	#DMA_CCR7_PINC
 ((
uöt16_t
)0x0040Ë

	)

2131 
	#DMA_CCR7_MINC
 ((
uöt16_t
)0x0080Ë

	)

2133 
	#DMA_CCR7_PSIZE
 , ((
uöt16_t
)0x0300Ë

	)

2134 
	#DMA_CCR7_PSIZE_0
 ((
uöt16_t
)0x0100Ë

	)

2135 
	#DMA_CCR7_PSIZE_1
 ((
uöt16_t
)0x0200Ë

	)

2137 
	#DMA_CCR7_MSIZE
 ((
uöt16_t
)0x0C00Ë

	)

2138 
	#DMA_CCR7_MSIZE_0
 ((
uöt16_t
)0x0400Ë

	)

2139 
	#DMA_CCR7_MSIZE_1
 ((
uöt16_t
)0x0800Ë

	)

2141 
	#DMA_CCR7_PL
 ((
uöt16_t
)0x3000Ë

	)

2142 
	#DMA_CCR7_PL_0
 ((
uöt16_t
)0x1000Ë

	)

2143 
	#DMA_CCR7_PL_1
 ((
uöt16_t
)0x2000Ë

	)

2145 
	#DMA_CCR7_MEM2MEM
 ((
uöt16_t
)0x4000Ë

	)

2148 
	#DMA_CNDTR1_NDT
 ((
uöt16_t
)0xFFFFË

	)

2151 
	#DMA_CNDTR2_NDT
 ((
uöt16_t
)0xFFFFË

	)

2154 
	#DMA_CNDTR3_NDT
 ((
uöt16_t
)0xFFFFË

	)

2157 
	#DMA_CNDTR4_NDT
 ((
uöt16_t
)0xFFFFË

	)

2160 
	#DMA_CNDTR5_NDT
 ((
uöt16_t
)0xFFFFË

	)

2163 
	#DMA_CNDTR6_NDT
 ((
uöt16_t
)0xFFFFË

	)

2166 
	#DMA_CNDTR7_NDT
 ((
uöt16_t
)0xFFFFË

	)

2169 
	#DMA_CPAR1_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2172 
	#DMA_CPAR2_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2175 
	#DMA_CPAR3_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2179 
	#DMA_CPAR4_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2182 
	#DMA_CPAR5_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2185 
	#DMA_CPAR6_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2189 
	#DMA_CPAR7_PA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2192 
	#DMA_CMAR1_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2195 
	#DMA_CMAR2_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2198 
	#DMA_CMAR3_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2202 
	#DMA_CMAR4_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2205 
	#DMA_CMAR5_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2208 
	#DMA_CMAR6_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2211 
	#DMA_CMAR7_MA
 ((
uöt32_t
)0xFFFFFFFFË

	)

2220 
	#EXTI_IMR_MR0
 ((
uöt32_t
)0x00000001Ë

	)

2221 
	#EXTI_IMR_MR1
 ((
uöt32_t
)0x00000002Ë

	)

2222 
	#EXTI_IMR_MR2
 ((
uöt32_t
)0x00000004Ë

	)

2223 
	#EXTI_IMR_MR3
 ((
uöt32_t
)0x00000008Ë

	)

2224 
	#EXTI_IMR_MR4
 ((
uöt32_t
)0x00000010Ë

	)

2225 
	#EXTI_IMR_MR5
 ((
uöt32_t
)0x00000020Ë

	)

2226 
	#EXTI_IMR_MR6
 ((
uöt32_t
)0x00000040Ë

	)

2227 
	#EXTI_IMR_MR7
 ((
uöt32_t
)0x00000080Ë

	)

2228 
	#EXTI_IMR_MR8
 ((
uöt32_t
)0x00000100Ë

	)

2229 
	#EXTI_IMR_MR9
 ((
uöt32_t
)0x00000200Ë

	)

2230 
	#EXTI_IMR_MR10
 ((
uöt32_t
)0x00000400Ë

	)

2231 
	#EXTI_IMR_MR11
 ((
uöt32_t
)0x00000800Ë

	)

2232 
	#EXTI_IMR_MR12
 ((
uöt32_t
)0x00001000Ë

	)

2233 
	#EXTI_IMR_MR13
 ((
uöt32_t
)0x00002000Ë

	)

2234 
	#EXTI_IMR_MR14
 ((
uöt32_t
)0x00004000Ë

	)

2235 
	#EXTI_IMR_MR15
 ((
uöt32_t
)0x00008000Ë

	)

2236 
	#EXTI_IMR_MR16
 ((
uöt32_t
)0x00010000Ë

	)

2237 
	#EXTI_IMR_MR17
 ((
uöt32_t
)0x00020000Ë

	)

2238 
	#EXTI_IMR_MR18
 ((
uöt32_t
)0x00040000Ë

	)

2239 
	#EXTI_IMR_MR19
 ((
uöt32_t
)0x00080000Ë

	)

2240 
	#EXTI_IMR_MR20
 ((
uöt32_t
)0x00100000Ë

	)

2241 
	#EXTI_IMR_MR21
 ((
uöt32_t
)0x00200000Ë

	)

2242 
	#EXTI_IMR_MR22
 ((
uöt32_t
)0x00400000Ë

	)

2243 
	#EXTI_IMR_MR23
 ((
uöt32_t
)0x00800000Ë

	)

2246 
	#EXTI_EMR_MR0
 ((
uöt32_t
)0x00000001Ë

	)

2247 
	#EXTI_EMR_MR1
 ((
uöt32_t
)0x00000002Ë

	)

2248 
	#EXTI_EMR_MR2
 ((
uöt32_t
)0x00000004Ë

	)

2249 
	#EXTI_EMR_MR3
 ((
uöt32_t
)0x00000008Ë

	)

2250 
	#EXTI_EMR_MR4
 ((
uöt32_t
)0x00000010Ë

	)

2251 
	#EXTI_EMR_MR5
 ((
uöt32_t
)0x00000020Ë

	)

2252 
	#EXTI_EMR_MR6
 ((
uöt32_t
)0x00000040Ë

	)

2253 
	#EXTI_EMR_MR7
 ((
uöt32_t
)0x00000080Ë

	)

2254 
	#EXTI_EMR_MR8
 ((
uöt32_t
)0x00000100Ë

	)

2255 
	#EXTI_EMR_MR9
 ((
uöt32_t
)0x00000200Ë

	)

2256 
	#EXTI_EMR_MR10
 ((
uöt32_t
)0x00000400Ë

	)

2257 
	#EXTI_EMR_MR11
 ((
uöt32_t
)0x00000800Ë

	)

2258 
	#EXTI_EMR_MR12
 ((
uöt32_t
)0x00001000Ë

	)

2259 
	#EXTI_EMR_MR13
 ((
uöt32_t
)0x00002000Ë

	)

2260 
	#EXTI_EMR_MR14
 ((
uöt32_t
)0x00004000Ë

	)

2261 
	#EXTI_EMR_MR15
 ((
uöt32_t
)0x00008000Ë

	)

2262 
	#EXTI_EMR_MR16
 ((
uöt32_t
)0x00010000Ë

	)

2263 
	#EXTI_EMR_MR17
 ((
uöt32_t
)0x00020000Ë

	)

2264 
	#EXTI_EMR_MR18
 ((
uöt32_t
)0x00040000Ë

	)

2265 
	#EXTI_EMR_MR19
 ((
uöt32_t
)0x00080000Ë

	)

2266 
	#EXTI_EMR_MR20
 ((
uöt32_t
)0x00100000Ë

	)

2267 
	#EXTI_EMR_MR21
 ((
uöt32_t
)0x00200000Ë

	)

2268 
	#EXTI_EMR_MR22
 ((
uöt32_t
)0x00400000Ë

	)

2269 
	#EXTI_EMR_MR23
 ((
uöt32_t
)0x00800000Ë

	)

2272 
	#EXTI_RTSR_TR0
 ((
uöt32_t
)0x00000001Ë

	)

2273 
	#EXTI_RTSR_TR1
 ((
uöt32_t
)0x00000002Ë

	)

2274 
	#EXTI_RTSR_TR2
 ((
uöt32_t
)0x00000004Ë

	)

2275 
	#EXTI_RTSR_TR3
 ((
uöt32_t
)0x00000008Ë

	)

2276 
	#EXTI_RTSR_TR4
 ((
uöt32_t
)0x00000010Ë

	)

2277 
	#EXTI_RTSR_TR5
 ((
uöt32_t
)0x00000020Ë

	)

2278 
	#EXTI_RTSR_TR6
 ((
uöt32_t
)0x00000040Ë

	)

2279 
	#EXTI_RTSR_TR7
 ((
uöt32_t
)0x00000080Ë

	)

2280 
	#EXTI_RTSR_TR8
 ((
uöt32_t
)0x00000100Ë

	)

2281 
	#EXTI_RTSR_TR9
 ((
uöt32_t
)0x00000200Ë

	)

2282 
	#EXTI_RTSR_TR10
 ((
uöt32_t
)0x00000400Ë

	)

2283 
	#EXTI_RTSR_TR11
 ((
uöt32_t
)0x00000800Ë

	)

2284 
	#EXTI_RTSR_TR12
 ((
uöt32_t
)0x00001000Ë

	)

2285 
	#EXTI_RTSR_TR13
 ((
uöt32_t
)0x00002000Ë

	)

2286 
	#EXTI_RTSR_TR14
 ((
uöt32_t
)0x00004000Ë

	)

2287 
	#EXTI_RTSR_TR15
 ((
uöt32_t
)0x00008000Ë

	)

2288 
	#EXTI_RTSR_TR16
 ((
uöt32_t
)0x00010000Ë

	)

2289 
	#EXTI_RTSR_TR17
 ((
uöt32_t
)0x00020000Ë

	)

2290 
	#EXTI_RTSR_TR18
 ((
uöt32_t
)0x00040000Ë

	)

2291 
	#EXTI_RTSR_TR19
 ((
uöt32_t
)0x00080000Ë

	)

2292 
	#EXTI_RTSR_TR20
 ((
uöt32_t
)0x00100000Ë

	)

2293 
	#EXTI_RTSR_TR21
 ((
uöt32_t
)0x00200000Ë

	)

2294 
	#EXTI_RTSR_TR22
 ((
uöt32_t
)0x00400000Ë

	)

2295 
	#EXTI_RTSR_TR23
 ((
uöt32_t
)0x00800000Ë

	)

2298 
	#EXTI_FTSR_TR0
 ((
uöt32_t
)0x00000001Ë

	)

2299 
	#EXTI_FTSR_TR1
 ((
uöt32_t
)0x00000002Ë

	)

2300 
	#EXTI_FTSR_TR2
 ((
uöt32_t
)0x00000004Ë

	)

2301 
	#EXTI_FTSR_TR3
 ((
uöt32_t
)0x00000008Ë

	)

2302 
	#EXTI_FTSR_TR4
 ((
uöt32_t
)0x00000010Ë

	)

2303 
	#EXTI_FTSR_TR5
 ((
uöt32_t
)0x00000020Ë

	)

2304 
	#EXTI_FTSR_TR6
 ((
uöt32_t
)0x00000040Ë

	)

2305 
	#EXTI_FTSR_TR7
 ((
uöt32_t
)0x00000080Ë

	)

2306 
	#EXTI_FTSR_TR8
 ((
uöt32_t
)0x00000100Ë

	)

2307 
	#EXTI_FTSR_TR9
 ((
uöt32_t
)0x00000200Ë

	)

2308 
	#EXTI_FTSR_TR10
 ((
uöt32_t
)0x00000400Ë

	)

2309 
	#EXTI_FTSR_TR11
 ((
uöt32_t
)0x00000800Ë

	)

2310 
	#EXTI_FTSR_TR12
 ((
uöt32_t
)0x00001000Ë

	)

2311 
	#EXTI_FTSR_TR13
 ((
uöt32_t
)0x00002000Ë

	)

2312 
	#EXTI_FTSR_TR14
 ((
uöt32_t
)0x00004000Ë

	)

2313 
	#EXTI_FTSR_TR15
 ((
uöt32_t
)0x00008000Ë

	)

2314 
	#EXTI_FTSR_TR16
 ((
uöt32_t
)0x00010000Ë

	)

2315 
	#EXTI_FTSR_TR17
 ((
uöt32_t
)0x00020000Ë

	)

2316 
	#EXTI_FTSR_TR18
 ((
uöt32_t
)0x00040000Ë

	)

2317 
	#EXTI_FTSR_TR19
 ((
uöt32_t
)0x00080000Ë

	)

2318 
	#EXTI_FTSR_TR20
 ((
uöt32_t
)0x00100000Ë

	)

2319 
	#EXTI_FTSR_TR21
 ((
uöt32_t
)0x00200000Ë

	)

2320 
	#EXTI_FTSR_TR22
 ((
uöt32_t
)0x00400000Ë

	)

2321 
	#EXTI_FTSR_TR23
 ((
uöt32_t
)0x00800000Ë

	)

2324 
	#EXTI_SWIER_SWIER0
 ((
uöt32_t
)0x00000001Ë

	)

2325 
	#EXTI_SWIER_SWIER1
 ((
uöt32_t
)0x00000002Ë

	)

2326 
	#EXTI_SWIER_SWIER2
 ((
uöt32_t
)0x00000004Ë

	)

2327 
	#EXTI_SWIER_SWIER3
 ((
uöt32_t
)0x00000008Ë

	)

2328 
	#EXTI_SWIER_SWIER4
 ((
uöt32_t
)0x00000010Ë

	)

2329 
	#EXTI_SWIER_SWIER5
 ((
uöt32_t
)0x00000020Ë

	)

2330 
	#EXTI_SWIER_SWIER6
 ((
uöt32_t
)0x00000040Ë

	)

2331 
	#EXTI_SWIER_SWIER7
 ((
uöt32_t
)0x00000080Ë

	)

2332 
	#EXTI_SWIER_SWIER8
 ((
uöt32_t
)0x00000100Ë

	)

2333 
	#EXTI_SWIER_SWIER9
 ((
uöt32_t
)0x00000200Ë

	)

2334 
	#EXTI_SWIER_SWIER10
 ((
uöt32_t
)0x00000400Ë

	)

2335 
	#EXTI_SWIER_SWIER11
 ((
uöt32_t
)0x00000800Ë

	)

2336 
	#EXTI_SWIER_SWIER12
 ((
uöt32_t
)0x00001000Ë

	)

2337 
	#EXTI_SWIER_SWIER13
 ((
uöt32_t
)0x00002000Ë

	)

2338 
	#EXTI_SWIER_SWIER14
 ((
uöt32_t
)0x00004000Ë

	)

2339 
	#EXTI_SWIER_SWIER15
 ((
uöt32_t
)0x00008000Ë

	)

2340 
	#EXTI_SWIER_SWIER16
 ((
uöt32_t
)0x00010000Ë

	)

2341 
	#EXTI_SWIER_SWIER17
 ((
uöt32_t
)0x00020000Ë

	)

2342 
	#EXTI_SWIER_SWIER18
 ((
uöt32_t
)0x00040000Ë

	)

2343 
	#EXTI_SWIER_SWIER19
 ((
uöt32_t
)0x00080000Ë

	)

2344 
	#EXTI_SWIER_SWIER20
 ((
uöt32_t
)0x00100000Ë

	)

2345 
	#EXTI_SWIER_SWIER21
 ((
uöt32_t
)0x00200000Ë

	)

2346 
	#EXTI_SWIER_SWIER22
 ((
uöt32_t
)0x00400000Ë

	)

2347 
	#EXTI_SWIER_SWIER23
 ((
uöt32_t
)0x00800000Ë

	)

2350 
	#EXTI_PR_PR0
 ((
uöt32_t
)0x00000001Ë

	)

2351 
	#EXTI_PR_PR1
 ((
uöt32_t
)0x00000002Ë

	)

2352 
	#EXTI_PR_PR2
 ((
uöt32_t
)0x00000004Ë

	)

2353 
	#EXTI_PR_PR3
 ((
uöt32_t
)0x00000008Ë

	)

2354 
	#EXTI_PR_PR4
 ((
uöt32_t
)0x00000010Ë

	)

2355 
	#EXTI_PR_PR5
 ((
uöt32_t
)0x00000020Ë

	)

2356 
	#EXTI_PR_PR6
 ((
uöt32_t
)0x00000040Ë

	)

2357 
	#EXTI_PR_PR7
 ((
uöt32_t
)0x00000080Ë

	)

2358 
	#EXTI_PR_PR8
 ((
uöt32_t
)0x00000100Ë

	)

2359 
	#EXTI_PR_PR9
 ((
uöt32_t
)0x00000200Ë

	)

2360 
	#EXTI_PR_PR10
 ((
uöt32_t
)0x00000400Ë

	)

2361 
	#EXTI_PR_PR11
 ((
uöt32_t
)0x00000800Ë

	)

2362 
	#EXTI_PR_PR12
 ((
uöt32_t
)0x00001000Ë

	)

2363 
	#EXTI_PR_PR13
 ((
uöt32_t
)0x00002000Ë

	)

2364 
	#EXTI_PR_PR14
 ((
uöt32_t
)0x00004000Ë

	)

2365 
	#EXTI_PR_PR15
 ((
uöt32_t
)0x00008000Ë

	)

2366 
	#EXTI_PR_PR16
 ((
uöt32_t
)0x00010000Ë

	)

2367 
	#EXTI_PR_PR17
 ((
uöt32_t
)0x00020000Ë

	)

2368 
	#EXTI_PR_PR18
 ((
uöt32_t
)0x00040000Ë

	)

2369 
	#EXTI_PR_PR19
 ((
uöt32_t
)0x00080000Ë

	)

2370 
	#EXTI_PR_PR20
 ((
uöt32_t
)0x00100000Ë

	)

2371 
	#EXTI_PR_PR21
 ((
uöt32_t
)0x00200000Ë

	)

2372 
	#EXTI_PR_PR22
 ((
uöt32_t
)0x00400000Ë

	)

2373 
	#EXTI_PR_PR23
 ((
uöt32_t
)0x00800000Ë

	)

2383 
	#FLASH_ACR_LATENCY
 ((
uöt32_t
)0x00000001Ë

	)

2384 
	#FLASH_ACR_PRFTEN
 ((
uöt32_t
)0x00000002Ë

	)

2385 
	#FLASH_ACR_ACC64
 ((
uöt32_t
)0x00000004Ë

	)

2386 
	#FLASH_ACR_SLEEP_PD
 ((
uöt32_t
)0x00000008Ë

	)

2387 
	#FLASH_ACR_RUN_PD
 ((
uöt32_t
)0x00000010Ë

	)

2390 
	#FLASH_PECR_PELOCK
 ((
uöt32_t
)0x00000001Ë

	)

2391 
	#FLASH_PECR_PRGLOCK
 ((
uöt32_t
)0x00000002Ë

	)

2392 
	#FLASH_PECR_OPTLOCK
 ((
uöt32_t
)0x00000004Ë

	)

2393 
	#FLASH_PECR_PROG
 ((
uöt32_t
)0x00000008Ë

	)

2394 
	#FLASH_PECR_DATA
 ((
uöt32_t
)0x00000010Ë

	)

2395 
	#FLASH_PECR_FTDW
 ((
uöt32_t
)0x00000100Ë

	)

2396 
	#FLASH_PECR_ERASE
 ((
uöt32_t
)0x00000200Ë

	)

2397 
	#FLASH_PECR_FPRG
 ((
uöt32_t
)0x00000400Ë

	)

2398 
	#FLASH_PECR_PARALLBANK
 ((
uöt32_t
)0x00008000Ë

	)

2399 
	#FLASH_PECR_EOPIE
 ((
uöt32_t
)0x00010000Ë

	)

2400 
	#FLASH_PECR_ERRIE
 ((
uöt32_t
)0x00020000Ë

	)

2401 
	#FLASH_PECR_OBL_LAUNCH
 ((
uöt32_t
)0x00040000Ë

	)

2404 
	#FLASH_PDKEYR_PDKEYR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2407 
	#FLASH_PEKEYR_PEKEYR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2410 
	#FLASH_PRGKEYR_PRGKEYR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2413 
	#FLASH_OPTKEYR_OPTKEYR
 ((
uöt32_t
)0xFFFFFFFFË

	)

2416 
	#FLASH_SR_BSY
 ((
uöt32_t
)0x00000001Ë

	)

2417 
	#FLASH_SR_EOP
 ((
uöt32_t
)0x00000002Ë

	)

2418 
	#FLASH_SR_ENHV
 ((
uöt32_t
)0x00000004Ë

	)

2419 
	#FLASH_SR_READY
 ((
uöt32_t
)0x00000008Ë

	)

2421 
	#FLASH_SR_WRPERR
 ((
uöt32_t
)0x00000100Ë

	)

2422 
	#FLASH_SR_PGAERR
 ((
uöt32_t
)0x00000200Ë

	)

2423 
	#FLASH_SR_SIZERR
 ((
uöt32_t
)0x00000400Ë

	)

2424 
	#FLASH_SR_OPTVERR
 ((
uöt32_t
)0x00000800Ë

	)

2425 
	#FLASH_SR_OPTVERRUSR
 ((
uöt32_t
)0x00001000Ë

	)

2428 
	#FLASH_OBR_RDPRT
 ((
uöt16_t
)0x000000AAË

	)

2429 
	#FLASH_OBR_BOR_LEV
 ((
uöt16_t
)0x000F0000Ë

	)

2430 
	#FLASH_OBR_USER
 ((
uöt32_t
)0x00700000Ë

	)

2431 
	#FLASH_OBR_IWDG_SW
 ((
uöt32_t
)0x00100000Ë

	)

2432 
	#FLASH_OBR_nRST_STOP
 ((
uöt32_t
)0x00200000Ë

	)

2433 
	#FLASH_OBR_nRST_STDBY
 ((
uöt32_t
)0x00400000Ë

	)

2434 
	#FLASH_OBR_nRST_BFB2
 ((
uöt32_t
)0x00800000Ë

	)

2437 
	#FLASH_WRPR_WRP
 ((
uöt32_t
)0xFFFFFFFFË

	)

2440 
	#FLASH_WRPR1_WRP
 ((
uöt32_t
)0xFFFFFFFFË

	)

2443 
	#FLASH_WRPR2_WRP
 ((
uöt32_t
)0xFFFFFFFFË

	)

2450 
	#FSMC_BCR1_MBKEN
 ((
uöt32_t
)0x00000001Ë

	)

2451 
	#FSMC_BCR1_MUXEN
 ((
uöt32_t
)0x00000002Ë

	)

2453 
	#FSMC_BCR1_MTYP
 ((
uöt32_t
)0x0000000CË

	)

2454 
	#FSMC_BCR1_MTYP_0
 ((
uöt32_t
)0x00000004Ë

	)

2455 
	#FSMC_BCR1_MTYP_1
 ((
uöt32_t
)0x00000008Ë

	)

2457 
	#FSMC_BCR1_MWID
 ((
uöt32_t
)0x00000030Ë

	)

2458 
	#FSMC_BCR1_MWID_0
 ((
uöt32_t
)0x00000010Ë

	)

2459 
	#FSMC_BCR1_MWID_1
 ((
uöt32_t
)0x00000020Ë

	)

2461 
	#FSMC_BCR1_FACCEN
 ((
uöt32_t
)0x00000040Ë

	)

2462 
	#FSMC_BCR1_BURSTEN
 ((
uöt32_t
)0x00000100Ë

	)

2463 
	#FSMC_BCR1_WAITPOL
 ((
uöt32_t
)0x00000200Ë

	)

2464 
	#FSMC_BCR1_WRAPMOD
 ((
uöt32_t
)0x00000400Ë

	)

2465 
	#FSMC_BCR1_WAITCFG
 ((
uöt32_t
)0x00000800Ë

	)

2466 
	#FSMC_BCR1_WREN
 ((
uöt32_t
)0x00001000Ë

	)

2467 
	#FSMC_BCR1_WAITEN
 ((
uöt32_t
)0x00002000Ë

	)

2468 
	#FSMC_BCR1_EXTMOD
 ((
uöt32_t
)0x00004000Ë

	)

2469 
	#FSMC_BCR1_ASYNCWAIT
 ((
uöt32_t
)0x00008000Ë

	)

2470 
	#FSMC_BCR1_CBURSTRW
 ((
uöt32_t
)0x00080000Ë

	)

2473 
	#FSMC_BCR2_MBKEN
 ((
uöt32_t
)0x00000001Ë

	)

2474 
	#FSMC_BCR2_MUXEN
 ((
uöt32_t
)0x00000002Ë

	)

2476 
	#FSMC_BCR2_MTYP
 ((
uöt32_t
)0x0000000CË

	)

2477 
	#FSMC_BCR2_MTYP_0
 ((
uöt32_t
)0x00000004Ë

	)

2478 
	#FSMC_BCR2_MTYP_1
 ((
uöt32_t
)0x00000008Ë

	)

2480 
	#FSMC_BCR2_MWID
 ((
uöt32_t
)0x00000030Ë

	)

2481 
	#FSMC_BCR2_MWID_0
 ((
uöt32_t
)0x00000010Ë

	)

2482 
	#FSMC_BCR2_MWID_1
 ((
uöt32_t
)0x00000020Ë

	)

2484 
	#FSMC_BCR2_FACCEN
 ((
uöt32_t
)0x00000040Ë

	)

2485 
	#FSMC_BCR2_BURSTEN
 ((
uöt32_t
)0x00000100Ë

	)

2486 
	#FSMC_BCR2_WAITPOL
 ((
uöt32_t
)0x00000200Ë

	)

2487 
	#FSMC_BCR2_WRAPMOD
 ((
uöt32_t
)0x00000400Ë

	)

2488 
	#FSMC_BCR2_WAITCFG
 ((
uöt32_t
)0x00000800Ë

	)

2489 
	#FSMC_BCR2_WREN
 ((
uöt32_t
)0x00001000Ë

	)

2490 
	#FSMC_BCR2_WAITEN
 ((
uöt32_t
)0x00002000Ë

	)

2491 
	#FSMC_BCR2_EXTMOD
 ((
uöt32_t
)0x00004000Ë

	)

2492 
	#FSMC_BCR2_ASYNCWAIT
 ((
uöt32_t
)0x00008000Ë

	)

2493 
	#FSMC_BCR2_CBURSTRW
 ((
uöt32_t
)0x00080000Ë

	)

2496 
	#FSMC_BCR3_MBKEN
 ((
uöt32_t
)0x00000001Ë

	)

2497 
	#FSMC_BCR3_MUXEN
 ((
uöt32_t
)0x00000002Ë

	)

2499 
	#FSMC_BCR3_MTYP
 ((
uöt32_t
)0x0000000CË

	)

2500 
	#FSMC_BCR3_MTYP_0
 ((
uöt32_t
)0x00000004Ë

	)

2501 
	#FSMC_BCR3_MTYP_1
 ((
uöt32_t
)0x00000008Ë

	)

2503 
	#FSMC_BCR3_MWID
 ((
uöt32_t
)0x00000030Ë

	)

2504 
	#FSMC_BCR3_MWID_0
 ((
uöt32_t
)0x00000010Ë

	)

2505 
	#FSMC_BCR3_MWID_1
 ((
uöt32_t
)0x00000020Ë

	)

2507 
	#FSMC_BCR3_FACCEN
 ((
uöt32_t
)0x00000040Ë

	)

2508 
	#FSMC_BCR3_BURSTEN
 ((
uöt32_t
)0x00000100Ë

	)

2509 
	#FSMC_BCR3_WAITPOL
 ((
uöt32_t
)0x00000200Ë

	)

2510 
	#FSMC_BCR3_WRAPMOD
 ((
uöt32_t
)0x00000400Ë

	)

2511 
	#FSMC_BCR3_WAITCFG
 ((
uöt32_t
)0x00000800Ë

	)

2512 
	#FSMC_BCR3_WREN
 ((
uöt32_t
)0x00001000Ë

	)

2513 
	#FSMC_BCR3_WAITEN
 ((
uöt32_t
)0x00002000Ë

	)

2514 
	#FSMC_BCR3_EXTMOD
 ((
uöt32_t
)0x00004000Ë

	)

2515 
	#FSMC_BCR3_ASYNCWAIT
 ((
uöt32_t
)0x00008000Ë

	)

2516 
	#FSMC_BCR3_CBURSTRW
 ((
uöt32_t
)0x00080000Ë

	)

2519 
	#FSMC_BCR4_MBKEN
 ((
uöt32_t
)0x00000001Ë

	)

2520 
	#FSMC_BCR4_MUXEN
 ((
uöt32_t
)0x00000002Ë

	)

2522 
	#FSMC_BCR4_MTYP
 ((
uöt32_t
)0x0000000CË

	)

2523 
	#FSMC_BCR4_MTYP_0
 ((
uöt32_t
)0x00000004Ë

	)

2524 
	#FSMC_BCR4_MTYP_1
 ((
uöt32_t
)0x00000008Ë

	)

2526 
	#FSMC_BCR4_MWID
 ((
uöt32_t
)0x00000030Ë

	)

2527 
	#FSMC_BCR4_MWID_0
 ((
uöt32_t
)0x00000010Ë

	)

2528 
	#FSMC_BCR4_MWID_1
 ((
uöt32_t
)0x00000020Ë

	)

2530 
	#FSMC_BCR4_FACCEN
 ((
uöt32_t
)0x00000040Ë

	)

2531 
	#FSMC_BCR4_BURSTEN
 ((
uöt32_t
)0x00000100Ë

	)

2532 
	#FSMC_BCR4_WAITPOL
 ((
uöt32_t
)0x00000200Ë

	)

2533 
	#FSMC_BCR4_WRAPMOD
 ((
uöt32_t
)0x00000400Ë

	)

2534 
	#FSMC_BCR4_WAITCFG
 ((
uöt32_t
)0x00000800Ë

	)

2535 
	#FSMC_BCR4_WREN
 ((
uöt32_t
)0x00001000Ë

	)

2536 
	#FSMC_BCR4_WAITEN
 ((
uöt32_t
)0x00002000Ë

	)

2537 
	#FSMC_BCR4_EXTMOD
 ((
uöt32_t
)0x00004000Ë

	)

2538 
	#FSMC_BCR4_ASYNCWAIT
 ((
uöt32_t
)0x00008000Ë

	)

2539 
	#FSMC_BCR4_CBURSTRW
 ((
uöt32_t
)0x00080000Ë

	)

2542 
	#FSMC_BTR1_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2543 
	#FSMC_BTR1_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2544 
	#FSMC_BTR1_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2545 
	#FSMC_BTR1_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2546 
	#FSMC_BTR1_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2548 
	#FSMC_BTR1_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2549 
	#FSMC_BTR1_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2550 
	#FSMC_BTR1_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2551 
	#FSMC_BTR1_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2552 
	#FSMC_BTR1_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2554 
	#FSMC_BTR1_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2555 
	#FSMC_BTR1_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2556 
	#FSMC_BTR1_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2557 
	#FSMC_BTR1_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2558 
	#FSMC_BTR1_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2560 
	#FSMC_BTR1_BUSTURN
 ((
uöt32_t
)0x000F0000Ë

	)

2561 
	#FSMC_BTR1_BUSTURN_0
 ((
uöt32_t
)0x00010000Ë

	)

2562 
	#FSMC_BTR1_BUSTURN_1
 ((
uöt32_t
)0x00020000Ë

	)

2563 
	#FSMC_BTR1_BUSTURN_2
 ((
uöt32_t
)0x00040000Ë

	)

2564 
	#FSMC_BTR1_BUSTURN_3
 ((
uöt32_t
)0x00080000Ë

	)

2566 
	#FSMC_BTR1_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2567 
	#FSMC_BTR1_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2568 
	#FSMC_BTR1_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2569 
	#FSMC_BTR1_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2570 
	#FSMC_BTR1_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2572 
	#FSMC_BTR1_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2573 
	#FSMC_BTR1_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2574 
	#FSMC_BTR1_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2575 
	#FSMC_BTR1_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2576 
	#FSMC_BTR1_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2578 
	#FSMC_BTR1_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2579 
	#FSMC_BTR1_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2580 
	#FSMC_BTR1_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2583 
	#FSMC_BTR2_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2584 
	#FSMC_BTR2_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2585 
	#FSMC_BTR2_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2586 
	#FSMC_BTR2_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2587 
	#FSMC_BTR2_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2589 
	#FSMC_BTR2_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2590 
	#FSMC_BTR2_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2591 
	#FSMC_BTR2_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2592 
	#FSMC_BTR2_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2593 
	#FSMC_BTR2_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2595 
	#FSMC_BTR2_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2596 
	#FSMC_BTR2_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2597 
	#FSMC_BTR2_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2598 
	#FSMC_BTR2_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2599 
	#FSMC_BTR2_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2601 
	#FSMC_BTR2_BUSTURN
 ((
uöt32_t
)0x000F0000Ë

	)

2602 
	#FSMC_BTR2_BUSTURN_0
 ((
uöt32_t
)0x00010000Ë

	)

2603 
	#FSMC_BTR2_BUSTURN_1
 ((
uöt32_t
)0x00020000Ë

	)

2604 
	#FSMC_BTR2_BUSTURN_2
 ((
uöt32_t
)0x00040000Ë

	)

2605 
	#FSMC_BTR2_BUSTURN_3
 ((
uöt32_t
)0x00080000Ë

	)

2607 
	#FSMC_BTR2_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2608 
	#FSMC_BTR2_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2609 
	#FSMC_BTR2_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2610 
	#FSMC_BTR2_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2611 
	#FSMC_BTR2_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2613 
	#FSMC_BTR2_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2614 
	#FSMC_BTR2_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2615 
	#FSMC_BTR2_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2616 
	#FSMC_BTR2_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2617 
	#FSMC_BTR2_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2619 
	#FSMC_BTR2_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2620 
	#FSMC_BTR2_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2621 
	#FSMC_BTR2_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2624 
	#FSMC_BTR3_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2625 
	#FSMC_BTR3_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2626 
	#FSMC_BTR3_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2627 
	#FSMC_BTR3_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2628 
	#FSMC_BTR3_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2630 
	#FSMC_BTR3_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2631 
	#FSMC_BTR3_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2632 
	#FSMC_BTR3_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2633 
	#FSMC_BTR3_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2634 
	#FSMC_BTR3_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2636 
	#FSMC_BTR3_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2637 
	#FSMC_BTR3_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2638 
	#FSMC_BTR3_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2639 
	#FSMC_BTR3_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2640 
	#FSMC_BTR3_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2642 
	#FSMC_BTR3_BUSTURN
 ((
uöt32_t
)0x000F0000Ë

	)

2643 
	#FSMC_BTR3_BUSTURN_0
 ((
uöt32_t
)0x00010000Ë

	)

2644 
	#FSMC_BTR3_BUSTURN_1
 ((
uöt32_t
)0x00020000Ë

	)

2645 
	#FSMC_BTR3_BUSTURN_2
 ((
uöt32_t
)0x00040000Ë

	)

2646 
	#FSMC_BTR3_BUSTURN_3
 ((
uöt32_t
)0x00080000Ë

	)

2648 
	#FSMC_BTR3_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2649 
	#FSMC_BTR3_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2650 
	#FSMC_BTR3_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2651 
	#FSMC_BTR3_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2652 
	#FSMC_BTR3_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2654 
	#FSMC_BTR3_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2655 
	#FSMC_BTR3_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2656 
	#FSMC_BTR3_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2657 
	#FSMC_BTR3_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2658 
	#FSMC_BTR3_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2660 
	#FSMC_BTR3_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2661 
	#FSMC_BTR3_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2662 
	#FSMC_BTR3_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2665 
	#FSMC_BTR4_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2666 
	#FSMC_BTR4_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2667 
	#FSMC_BTR4_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2668 
	#FSMC_BTR4_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2669 
	#FSMC_BTR4_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2671 
	#FSMC_BTR4_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2672 
	#FSMC_BTR4_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2673 
	#FSMC_BTR4_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2674 
	#FSMC_BTR4_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2675 
	#FSMC_BTR4_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2677 
	#FSMC_BTR4_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2678 
	#FSMC_BTR4_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2679 
	#FSMC_BTR4_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2680 
	#FSMC_BTR4_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2681 
	#FSMC_BTR4_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2683 
	#FSMC_BTR4_BUSTURN
 ((
uöt32_t
)0x000F0000Ë

	)

2684 
	#FSMC_BTR4_BUSTURN_0
 ((
uöt32_t
)0x00010000Ë

	)

2685 
	#FSMC_BTR4_BUSTURN_1
 ((
uöt32_t
)0x00020000Ë

	)

2686 
	#FSMC_BTR4_BUSTURN_2
 ((
uöt32_t
)0x00040000Ë

	)

2687 
	#FSMC_BTR4_BUSTURN_3
 ((
uöt32_t
)0x00080000Ë

	)

2689 
	#FSMC_BTR4_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2690 
	#FSMC_BTR4_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2691 
	#FSMC_BTR4_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2692 
	#FSMC_BTR4_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2693 
	#FSMC_BTR4_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2695 
	#FSMC_BTR4_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2696 
	#FSMC_BTR4_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2697 
	#FSMC_BTR4_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2698 
	#FSMC_BTR4_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2699 
	#FSMC_BTR4_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2701 
	#FSMC_BTR4_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2702 
	#FSMC_BTR4_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2703 
	#FSMC_BTR4_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2706 
	#FSMC_BWTR1_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2707 
	#FSMC_BWTR1_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2708 
	#FSMC_BWTR1_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2709 
	#FSMC_BWTR1_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2710 
	#FSMC_BWTR1_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2712 
	#FSMC_BWTR1_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2713 
	#FSMC_BWTR1_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2714 
	#FSMC_BWTR1_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2715 
	#FSMC_BWTR1_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2716 
	#FSMC_BWTR1_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2718 
	#FSMC_BWTR1_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2719 
	#FSMC_BWTR1_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2720 
	#FSMC_BWTR1_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2721 
	#FSMC_BWTR1_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2722 
	#FSMC_BWTR1_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2724 
	#FSMC_BWTR1_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2725 
	#FSMC_BWTR1_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2726 
	#FSMC_BWTR1_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2727 
	#FSMC_BWTR1_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2728 
	#FSMC_BWTR1_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2730 
	#FSMC_BWTR1_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2731 
	#FSMC_BWTR1_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2732 
	#FSMC_BWTR1_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2733 
	#FSMC_BWTR1_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2734 
	#FSMC_BWTR1_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2736 
	#FSMC_BWTR1_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2737 
	#FSMC_BWTR1_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2738 
	#FSMC_BWTR1_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2741 
	#FSMC_BWTR2_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2742 
	#FSMC_BWTR2_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2743 
	#FSMC_BWTR2_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2744 
	#FSMC_BWTR2_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2745 
	#FSMC_BWTR2_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2747 
	#FSMC_BWTR2_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2748 
	#FSMC_BWTR2_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2749 
	#FSMC_BWTR2_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2750 
	#FSMC_BWTR2_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2751 
	#FSMC_BWTR2_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2753 
	#FSMC_BWTR2_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2754 
	#FSMC_BWTR2_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2755 
	#FSMC_BWTR2_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2756 
	#FSMC_BWTR2_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2757 
	#FSMC_BWTR2_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2759 
	#FSMC_BWTR2_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2760 
	#FSMC_BWTR2_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2761 
	#FSMC_BWTR2_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2762 
	#FSMC_BWTR2_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2763 
	#FSMC_BWTR2_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2765 
	#FSMC_BWTR2_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2766 
	#FSMC_BWTR2_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2767 
	#FSMC_BWTR2_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2768 
	#FSMC_BWTR2_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2769 
	#FSMC_BWTR2_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2771 
	#FSMC_BWTR2_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2772 
	#FSMC_BWTR2_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2773 
	#FSMC_BWTR2_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2776 
	#FSMC_BWTR3_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2777 
	#FSMC_BWTR3_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2778 
	#FSMC_BWTR3_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2779 
	#FSMC_BWTR3_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2780 
	#FSMC_BWTR3_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2782 
	#FSMC_BWTR3_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2783 
	#FSMC_BWTR3_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2784 
	#FSMC_BWTR3_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2785 
	#FSMC_BWTR3_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2786 
	#FSMC_BWTR3_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2788 
	#FSMC_BWTR3_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2789 
	#FSMC_BWTR3_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2790 
	#FSMC_BWTR3_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2791 
	#FSMC_BWTR3_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2792 
	#FSMC_BWTR3_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2794 
	#FSMC_BWTR3_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2795 
	#FSMC_BWTR3_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2796 
	#FSMC_BWTR3_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2797 
	#FSMC_BWTR3_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2798 
	#FSMC_BWTR3_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2800 
	#FSMC_BWTR3_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2801 
	#FSMC_BWTR3_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2802 
	#FSMC_BWTR3_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2803 
	#FSMC_BWTR3_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2804 
	#FSMC_BWTR3_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2806 
	#FSMC_BWTR3_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2807 
	#FSMC_BWTR3_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2808 
	#FSMC_BWTR3_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2811 
	#FSMC_BWTR4_ADDSET
 ((
uöt32_t
)0x0000000FË

	)

2812 
	#FSMC_BWTR4_ADDSET_0
 ((
uöt32_t
)0x00000001Ë

	)

2813 
	#FSMC_BWTR4_ADDSET_1
 ((
uöt32_t
)0x00000002Ë

	)

2814 
	#FSMC_BWTR4_ADDSET_2
 ((
uöt32_t
)0x00000004Ë

	)

2815 
	#FSMC_BWTR4_ADDSET_3
 ((
uöt32_t
)0x00000008Ë

	)

2817 
	#FSMC_BWTR4_ADDHLD
 ((
uöt32_t
)0x000000F0Ë

	)

2818 
	#FSMC_BWTR4_ADDHLD_0
 ((
uöt32_t
)0x00000010Ë

	)

2819 
	#FSMC_BWTR4_ADDHLD_1
 ((
uöt32_t
)0x00000020Ë

	)

2820 
	#FSMC_BWTR4_ADDHLD_2
 ((
uöt32_t
)0x00000040Ë

	)

2821 
	#FSMC_BWTR4_ADDHLD_3
 ((
uöt32_t
)0x00000080Ë

	)

2823 
	#FSMC_BWTR4_DATAST
 ((
uöt32_t
)0x0000FF00Ë

	)

2824 
	#FSMC_BWTR4_DATAST_0
 ((
uöt32_t
)0x00000100Ë

	)

2825 
	#FSMC_BWTR4_DATAST_1
 ((
uöt32_t
)0x00000200Ë

	)

2826 
	#FSMC_BWTR4_DATAST_2
 ((
uöt32_t
)0x00000400Ë

	)

2827 
	#FSMC_BWTR4_DATAST_3
 ((
uöt32_t
)0x00000800Ë

	)

2829 
	#FSMC_BWTR4_CLKDIV
 ((
uöt32_t
)0x00F00000Ë

	)

2830 
	#FSMC_BWTR4_CLKDIV_0
 ((
uöt32_t
)0x00100000Ë

	)

2831 
	#FSMC_BWTR4_CLKDIV_1
 ((
uöt32_t
)0x00200000Ë

	)

2832 
	#FSMC_BWTR4_CLKDIV_2
 ((
uöt32_t
)0x00400000Ë

	)

2833 
	#FSMC_BWTR4_CLKDIV_3
 ((
uöt32_t
)0x00800000Ë

	)

2835 
	#FSMC_BWTR4_DATLAT
 ((
uöt32_t
)0x0F000000Ë

	)

2836 
	#FSMC_BWTR4_DATLAT_0
 ((
uöt32_t
)0x01000000Ë

	)

2837 
	#FSMC_BWTR4_DATLAT_1
 ((
uöt32_t
)0x02000000Ë

	)

2838 
	#FSMC_BWTR4_DATLAT_2
 ((
uöt32_t
)0x04000000Ë

	)

2839 
	#FSMC_BWTR4_DATLAT_3
 ((
uöt32_t
)0x08000000Ë

	)

2841 
	#FSMC_BWTR4_ACCMOD
 ((
uöt32_t
)0x30000000Ë

	)

2842 
	#FSMC_BWTR4_ACCMOD_0
 ((
uöt32_t
)0x10000000Ë

	)

2843 
	#FSMC_BWTR4_ACCMOD_1
 ((
uöt32_t
)0x20000000Ë

	)

2851 
	#GPIO_MODER_MODER0
 ((
uöt32_t
)0x00000003)

	)

2852 
	#GPIO_MODER_MODER0_0
 ((
uöt32_t
)0x00000001)

	)

2853 
	#GPIO_MODER_MODER0_1
 ((
uöt32_t
)0x00000002)

	)

2854 
	#GPIO_MODER_MODER1
 ((
uöt32_t
)0x0000000C)

	)

2855 
	#GPIO_MODER_MODER1_0
 ((
uöt32_t
)0x00000004)

	)

2856 
	#GPIO_MODER_MODER1_1
 ((
uöt32_t
)0x00000008)

	)

2857 
	#GPIO_MODER_MODER2
 ((
uöt32_t
)0x00000030)

	)

2858 
	#GPIO_MODER_MODER2_0
 ((
uöt32_t
)0x00000010)

	)

2859 
	#GPIO_MODER_MODER2_1
 ((
uöt32_t
)0x00000020)

	)

2860 
	#GPIO_MODER_MODER3
 ((
uöt32_t
)0x000000C0)

	)

2861 
	#GPIO_MODER_MODER3_0
 ((
uöt32_t
)0x00000040)

	)

2862 
	#GPIO_MODER_MODER3_1
 ((
uöt32_t
)0x00000080)

	)

2863 
	#GPIO_MODER_MODER4
 ((
uöt32_t
)0x00000300)

	)

2864 
	#GPIO_MODER_MODER4_0
 ((
uöt32_t
)0x00000100)

	)

2865 
	#GPIO_MODER_MODER4_1
 ((
uöt32_t
)0x00000200)

	)

2866 
	#GPIO_MODER_MODER5
 ((
uöt32_t
)0x00000C00)

	)

2867 
	#GPIO_MODER_MODER5_0
 ((
uöt32_t
)0x00000400)

	)

2868 
	#GPIO_MODER_MODER5_1
 ((
uöt32_t
)0x00000800)

	)

2869 
	#GPIO_MODER_MODER6
 ((
uöt32_t
)0x00003000)

	)

2870 
	#GPIO_MODER_MODER6_0
 ((
uöt32_t
)0x00001000)

	)

2871 
	#GPIO_MODER_MODER6_1
 ((
uöt32_t
)0x00002000)

	)

2872 
	#GPIO_MODER_MODER7
 ((
uöt32_t
)0x0000C000)

	)

2873 
	#GPIO_MODER_MODER7_0
 ((
uöt32_t
)0x00004000)

	)

2874 
	#GPIO_MODER_MODER7_1
 ((
uöt32_t
)0x00008000)

	)

2875 
	#GPIO_MODER_MODER8
 ((
uöt32_t
)0x00030000)

	)

2876 
	#GPIO_MODER_MODER8_0
 ((
uöt32_t
)0x00010000)

	)

2877 
	#GPIO_MODER_MODER8_1
 ((
uöt32_t
)0x00020000)

	)

2878 
	#GPIO_MODER_MODER9
 ((
uöt32_t
)0x000C0000)

	)

2879 
	#GPIO_MODER_MODER9_0
 ((
uöt32_t
)0x00040000)

	)

2880 
	#GPIO_MODER_MODER9_1
 ((
uöt32_t
)0x00080000)

	)

2881 
	#GPIO_MODER_MODER10
 ((
uöt32_t
)0x00300000)

	)

2882 
	#GPIO_MODER_MODER10_0
 ((
uöt32_t
)0x00100000)

	)

2883 
	#GPIO_MODER_MODER10_1
 ((
uöt32_t
)0x00200000)

	)

2884 
	#GPIO_MODER_MODER11
 ((
uöt32_t
)0x00C00000)

	)

2885 
	#GPIO_MODER_MODER11_0
 ((
uöt32_t
)0x00400000)

	)

2886 
	#GPIO_MODER_MODER11_1
 ((
uöt32_t
)0x00800000)

	)

2887 
	#GPIO_MODER_MODER12
 ((
uöt32_t
)0x03000000)

	)

2888 
	#GPIO_MODER_MODER12_0
 ((
uöt32_t
)0x01000000)

	)

2889 
	#GPIO_MODER_MODER12_1
 ((
uöt32_t
)0x02000000)

	)

2890 
	#GPIO_MODER_MODER13
 ((
uöt32_t
)0x0C000000)

	)

2891 
	#GPIO_MODER_MODER13_0
 ((
uöt32_t
)0x04000000)

	)

2892 
	#GPIO_MODER_MODER13_1
 ((
uöt32_t
)0x08000000)

	)

2893 
	#GPIO_MODER_MODER14
 ((
uöt32_t
)0x30000000)

	)

2894 
	#GPIO_MODER_MODER14_0
 ((
uöt32_t
)0x10000000)

	)

2895 
	#GPIO_MODER_MODER14_1
 ((
uöt32_t
)0x20000000)

	)

2896 
	#GPIO_MODER_MODER15
 ((
uöt32_t
)0xC0000000)

	)

2897 
	#GPIO_MODER_MODER15_0
 ((
uöt32_t
)0x40000000)

	)

2898 
	#GPIO_MODER_MODER15_1
 ((
uöt32_t
)0x80000000)

	)

2901 
	#GPIO_OTYPER_OT_0
 ((
uöt32_t
)0x00000001)

	)

2902 
	#GPIO_OTYPER_OT_1
 ((
uöt32_t
)0x00000002)

	)

2903 
	#GPIO_OTYPER_OT_2
 ((
uöt32_t
)0x00000004)

	)

2904 
	#GPIO_OTYPER_OT_3
 ((
uöt32_t
)0x00000008)

	)

2905 
	#GPIO_OTYPER_OT_4
 ((
uöt32_t
)0x00000010)

	)

2906 
	#GPIO_OTYPER_OT_5
 ((
uöt32_t
)0x00000020)

	)

2907 
	#GPIO_OTYPER_OT_6
 ((
uöt32_t
)0x00000040)

	)

2908 
	#GPIO_OTYPER_OT_7
 ((
uöt32_t
)0x00000080)

	)

2909 
	#GPIO_OTYPER_OT_8
 ((
uöt32_t
)0x00000100)

	)

2910 
	#GPIO_OTYPER_OT_9
 ((
uöt32_t
)0x00000200)

	)

2911 
	#GPIO_OTYPER_OT_10
 ((
uöt32_t
)0x00000400)

	)

2912 
	#GPIO_OTYPER_OT_11
 ((
uöt32_t
)0x00000800)

	)

2913 
	#GPIO_OTYPER_OT_12
 ((
uöt32_t
)0x00001000)

	)

2914 
	#GPIO_OTYPER_OT_13
 ((
uöt32_t
)0x00002000)

	)

2915 
	#GPIO_OTYPER_OT_14
 ((
uöt32_t
)0x00004000)

	)

2916 
	#GPIO_OTYPER_OT_15
 ((
uöt32_t
)0x00008000)

	)

2919 
	#GPIO_OSPEEDER_OSPEEDR0
 ((
uöt32_t
)0x00000003)

	)

2920 
	#GPIO_OSPEEDER_OSPEEDR0_0
 ((
uöt32_t
)0x00000001)

	)

2921 
	#GPIO_OSPEEDER_OSPEEDR0_1
 ((
uöt32_t
)0x00000002)

	)

2922 
	#GPIO_OSPEEDER_OSPEEDR1
 ((
uöt32_t
)0x0000000C)

	)

2923 
	#GPIO_OSPEEDER_OSPEEDR1_0
 ((
uöt32_t
)0x00000004)

	)

2924 
	#GPIO_OSPEEDER_OSPEEDR1_1
 ((
uöt32_t
)0x00000008)

	)

2925 
	#GPIO_OSPEEDER_OSPEEDR2
 ((
uöt32_t
)0x00000030)

	)

2926 
	#GPIO_OSPEEDER_OSPEEDR2_0
 ((
uöt32_t
)0x00000010)

	)

2927 
	#GPIO_OSPEEDER_OSPEEDR2_1
 ((
uöt32_t
)0x00000020)

	)

2928 
	#GPIO_OSPEEDER_OSPEEDR3
 ((
uöt32_t
)0x000000C0)

	)

2929 
	#GPIO_OSPEEDER_OSPEEDR3_0
 ((
uöt32_t
)0x00000040)

	)

2930 
	#GPIO_OSPEEDER_OSPEEDR3_1
 ((
uöt32_t
)0x00000080)

	)

2931 
	#GPIO_OSPEEDER_OSPEEDR4
 ((
uöt32_t
)0x00000300)

	)

2932 
	#GPIO_OSPEEDER_OSPEEDR4_0
 ((
uöt32_t
)0x00000100)

	)

2933 
	#GPIO_OSPEEDER_OSPEEDR4_1
 ((
uöt32_t
)0x00000200)

	)

2934 
	#GPIO_OSPEEDER_OSPEEDR5
 ((
uöt32_t
)0x00000C00)

	)

2935 
	#GPIO_OSPEEDER_OSPEEDR5_0
 ((
uöt32_t
)0x00000400)

	)

2936 
	#GPIO_OSPEEDER_OSPEEDR5_1
 ((
uöt32_t
)0x00000800)

	)

2937 
	#GPIO_OSPEEDER_OSPEEDR6
 ((
uöt32_t
)0x00003000)

	)

2938 
	#GPIO_OSPEEDER_OSPEEDR6_0
 ((
uöt32_t
)0x00001000)

	)

2939 
	#GPIO_OSPEEDER_OSPEEDR6_1
 ((
uöt32_t
)0x00002000)

	)

2940 
	#GPIO_OSPEEDER_OSPEEDR7
 ((
uöt32_t
)0x0000C000)

	)

2941 
	#GPIO_OSPEEDER_OSPEEDR7_0
 ((
uöt32_t
)0x00004000)

	)

2942 
	#GPIO_OSPEEDER_OSPEEDR7_1
 ((
uöt32_t
)0x00008000)

	)

2943 
	#GPIO_OSPEEDER_OSPEEDR8
 ((
uöt32_t
)0x00030000)

	)

2944 
	#GPIO_OSPEEDER_OSPEEDR8_0
 ((
uöt32_t
)0x00010000)

	)

2945 
	#GPIO_OSPEEDER_OSPEEDR8_1
 ((
uöt32_t
)0x00020000)

	)

2946 
	#GPIO_OSPEEDER_OSPEEDR9
 ((
uöt32_t
)0x000C0000)

	)

2947 
	#GPIO_OSPEEDER_OSPEEDR9_0
 ((
uöt32_t
)0x00040000)

	)

2948 
	#GPIO_OSPEEDER_OSPEEDR9_1
 ((
uöt32_t
)0x00080000)

	)

2949 
	#GPIO_OSPEEDER_OSPEEDR10
 ((
uöt32_t
)0x00300000)

	)

2950 
	#GPIO_OSPEEDER_OSPEEDR10_0
 ((
uöt32_t
)0x00100000)

	)

2951 
	#GPIO_OSPEEDER_OSPEEDR10_1
 ((
uöt32_t
)0x00200000)

	)

2952 
	#GPIO_OSPEEDER_OSPEEDR11
 ((
uöt32_t
)0x00C00000)

	)

2953 
	#GPIO_OSPEEDER_OSPEEDR11_0
 ((
uöt32_t
)0x00400000)

	)

2954 
	#GPIO_OSPEEDER_OSPEEDR11_1
 ((
uöt32_t
)0x00800000)

	)

2955 
	#GPIO_OSPEEDER_OSPEEDR12
 ((
uöt32_t
)0x03000000)

	)

2956 
	#GPIO_OSPEEDER_OSPEEDR12_0
 ((
uöt32_t
)0x01000000)

	)

2957 
	#GPIO_OSPEEDER_OSPEEDR12_1
 ((
uöt32_t
)0x02000000)

	)

2958 
	#GPIO_OSPEEDER_OSPEEDR13
 ((
uöt32_t
)0x0C000000)

	)

2959 
	#GPIO_OSPEEDER_OSPEEDR13_0
 ((
uöt32_t
)0x04000000)

	)

2960 
	#GPIO_OSPEEDER_OSPEEDR13_1
 ((
uöt32_t
)0x08000000)

	)

2961 
	#GPIO_OSPEEDER_OSPEEDR14
 ((
uöt32_t
)0x30000000)

	)

2962 
	#GPIO_OSPEEDER_OSPEEDR14_0
 ((
uöt32_t
)0x10000000)

	)

2963 
	#GPIO_OSPEEDER_OSPEEDR14_1
 ((
uöt32_t
)0x20000000)

	)

2964 
	#GPIO_OSPEEDER_OSPEEDR15
 ((
uöt32_t
)0xC0000000)

	)

2965 
	#GPIO_OSPEEDER_OSPEEDR15_0
 ((
uöt32_t
)0x40000000)

	)

2966 
	#GPIO_OSPEEDER_OSPEEDR15_1
 ((
uöt32_t
)0x80000000)

	)

2969 
	#GPIO_PUPDR_PUPDR0
 ((
uöt32_t
)0x00000003)

	)

2970 
	#GPIO_PUPDR_PUPDR0_0
 ((
uöt32_t
)0x00000001)

	)

2971 
	#GPIO_PUPDR_PUPDR0_1
 ((
uöt32_t
)0x00000002)

	)

2972 
	#GPIO_PUPDR_PUPDR1
 ((
uöt32_t
)0x0000000C)

	)

2973 
	#GPIO_PUPDR_PUPDR1_0
 ((
uöt32_t
)0x00000004)

	)

2974 
	#GPIO_PUPDR_PUPDR1_1
 ((
uöt32_t
)0x00000008)

	)

2975 
	#GPIO_PUPDR_PUPDR2
 ((
uöt32_t
)0x00000030)

	)

2976 
	#GPIO_PUPDR_PUPDR2_0
 ((
uöt32_t
)0x00000010)

	)

2977 
	#GPIO_PUPDR_PUPDR2_1
 ((
uöt32_t
)0x00000020)

	)

2978 
	#GPIO_PUPDR_PUPDR3
 ((
uöt32_t
)0x000000C0)

	)

2979 
	#GPIO_PUPDR_PUPDR3_0
 ((
uöt32_t
)0x00000040)

	)

2980 
	#GPIO_PUPDR_PUPDR3_1
 ((
uöt32_t
)0x00000080)

	)

2981 
	#GPIO_PUPDR_PUPDR4
 ((
uöt32_t
)0x00000300)

	)

2982 
	#GPIO_PUPDR_PUPDR4_0
 ((
uöt32_t
)0x00000100)

	)

2983 
	#GPIO_PUPDR_PUPDR4_1
 ((
uöt32_t
)0x00000200)

	)

2984 
	#GPIO_PUPDR_PUPDR5
 ((
uöt32_t
)0x00000C00)

	)

2985 
	#GPIO_PUPDR_PUPDR5_0
 ((
uöt32_t
)0x00000400)

	)

2986 
	#GPIO_PUPDR_PUPDR5_1
 ((
uöt32_t
)0x00000800)

	)

2987 
	#GPIO_PUPDR_PUPDR6
 ((
uöt32_t
)0x00003000)

	)

2988 
	#GPIO_PUPDR_PUPDR6_0
 ((
uöt32_t
)0x00001000)

	)

2989 
	#GPIO_PUPDR_PUPDR6_1
 ((
uöt32_t
)0x00002000)

	)

2990 
	#GPIO_PUPDR_PUPDR7
 ((
uöt32_t
)0x0000C000)

	)

2991 
	#GPIO_PUPDR_PUPDR7_0
 ((
uöt32_t
)0x00004000)

	)

2992 
	#GPIO_PUPDR_PUPDR7_1
 ((
uöt32_t
)0x00008000)

	)

2993 
	#GPIO_PUPDR_PUPDR8
 ((
uöt32_t
)0x00030000)

	)

2994 
	#GPIO_PUPDR_PUPDR8_0
 ((
uöt32_t
)0x00010000)

	)

2995 
	#GPIO_PUPDR_PUPDR8_1
 ((
uöt32_t
)0x00020000)

	)

2996 
	#GPIO_PUPDR_PUPDR9
 ((
uöt32_t
)0x000C0000)

	)

2997 
	#GPIO_PUPDR_PUPDR9_0
 ((
uöt32_t
)0x00040000)

	)

2998 
	#GPIO_PUPDR_PUPDR9_1
 ((
uöt32_t
)0x00080000)

	)

2999 
	#GPIO_PUPDR_PUPDR10
 ((
uöt32_t
)0x00300000)

	)

3000 
	#GPIO_PUPDR_PUPDR10_0
 ((
uöt32_t
)0x00100000)

	)

3001 
	#GPIO_PUPDR_PUPDR10_1
 ((
uöt32_t
)0x00200000)

	)

3002 
	#GPIO_PUPDR_PUPDR11
 ((
uöt32_t
)0x00C00000)

	)

3003 
	#GPIO_PUPDR_PUPDR11_0
 ((
uöt32_t
)0x00400000)

	)

3004 
	#GPIO_PUPDR_PUPDR11_1
 ((
uöt32_t
)0x00800000)

	)

3005 
	#GPIO_PUPDR_PUPDR12
 ((
uöt32_t
)0x03000000)

	)

3006 
	#GPIO_PUPDR_PUPDR12_0
 ((
uöt32_t
)0x01000000)

	)

3007 
	#GPIO_PUPDR_PUPDR12_1
 ((
uöt32_t
)0x02000000)

	)

3008 
	#GPIO_PUPDR_PUPDR13
 ((
uöt32_t
)0x0C000000)

	)

3009 
	#GPIO_PUPDR_PUPDR13_0
 ((
uöt32_t
)0x04000000)

	)

3010 
	#GPIO_PUPDR_PUPDR13_1
 ((
uöt32_t
)0x08000000)

	)

3011 
	#GPIO_PUPDR_PUPDR14
 ((
uöt32_t
)0x30000000)

	)

3012 
	#GPIO_PUPDR_PUPDR14_0
 ((
uöt32_t
)0x10000000)

	)

3013 
	#GPIO_PUPDR_PUPDR14_1
 ((
uöt32_t
)0x20000000)

	)

3014 
	#GPIO_PUPDR_PUPDR15
 ((
uöt32_t
)0xC0000000)

	)

3015 
	#GPIO_PUPDR_PUPDR15_0
 ((
uöt32_t
)0x40000000)

	)

3016 
	#GPIO_PUPDR_PUPDR15_1
 ((
uöt32_t
)0x80000000)

	)

3019 
	#GPIO_IDR_IDR_0
 ((
uöt32_t
)0x00000001)

	)

3020 
	#GPIO_IDR_IDR_1
 ((
uöt32_t
)0x00000002)

	)

3021 
	#GPIO_IDR_IDR_2
 ((
uöt32_t
)0x00000004)

	)

3022 
	#GPIO_IDR_IDR_3
 ((
uöt32_t
)0x00000008)

	)

3023 
	#GPIO_IDR_IDR_4
 ((
uöt32_t
)0x00000010)

	)

3024 
	#GPIO_IDR_IDR_5
 ((
uöt32_t
)0x00000020)

	)

3025 
	#GPIO_IDR_IDR_6
 ((
uöt32_t
)0x00000040)

	)

3026 
	#GPIO_IDR_IDR_7
 ((
uöt32_t
)0x00000080)

	)

3027 
	#GPIO_IDR_IDR_8
 ((
uöt32_t
)0x00000100)

	)

3028 
	#GPIO_IDR_IDR_9
 ((
uöt32_t
)0x00000200)

	)

3029 
	#GPIO_IDR_IDR_10
 ((
uöt32_t
)0x00000400)

	)

3030 
	#GPIO_IDR_IDR_11
 ((
uöt32_t
)0x00000800)

	)

3031 
	#GPIO_IDR_IDR_12
 ((
uöt32_t
)0x00001000)

	)

3032 
	#GPIO_IDR_IDR_13
 ((
uöt32_t
)0x00002000)

	)

3033 
	#GPIO_IDR_IDR_14
 ((
uöt32_t
)0x00004000)

	)

3034 
	#GPIO_IDR_IDR_15
 ((
uöt32_t
)0x00008000)

	)

3036 
	#GPIO_OTYPER_IDR_0
 
GPIO_IDR_IDR_0


	)

3037 
	#GPIO_OTYPER_IDR_1
 
GPIO_IDR_IDR_1


	)

3038 
	#GPIO_OTYPER_IDR_2
 
GPIO_IDR_IDR_2


	)

3039 
	#GPIO_OTYPER_IDR_3
 
GPIO_IDR_IDR_3


	)

3040 
	#GPIO_OTYPER_IDR_4
 
GPIO_IDR_IDR_4


	)

3041 
	#GPIO_OTYPER_IDR_5
 
GPIO_IDR_IDR_5


	)

3042 
	#GPIO_OTYPER_IDR_6
 
GPIO_IDR_IDR_6


	)

3043 
	#GPIO_OTYPER_IDR_7
 
GPIO_IDR_IDR_7


	)

3044 
	#GPIO_OTYPER_IDR_8
 
GPIO_IDR_IDR_8


	)

3045 
	#GPIO_OTYPER_IDR_9
 
GPIO_IDR_IDR_9


	)

3046 
	#GPIO_OTYPER_IDR_10
 
GPIO_IDR_IDR_10


	)

3047 
	#GPIO_OTYPER_IDR_11
 
GPIO_IDR_IDR_11


	)

3048 
	#GPIO_OTYPER_IDR_12
 
GPIO_IDR_IDR_12


	)

3049 
	#GPIO_OTYPER_IDR_13
 
GPIO_IDR_IDR_13


	)

3050 
	#GPIO_OTYPER_IDR_14
 
GPIO_IDR_IDR_14


	)

3051 
	#GPIO_OTYPER_IDR_15
 
GPIO_IDR_IDR_15


	)

3054 
	#GPIO_ODR_ODR_0
 ((
uöt32_t
)0x00000001)

	)

3055 
	#GPIO_ODR_ODR_1
 ((
uöt32_t
)0x00000002)

	)

3056 
	#GPIO_ODR_ODR_2
 ((
uöt32_t
)0x00000004)

	)

3057 
	#GPIO_ODR_ODR_3
 ((
uöt32_t
)0x00000008)

	)

3058 
	#GPIO_ODR_ODR_4
 ((
uöt32_t
)0x00000010)

	)

3059 
	#GPIO_ODR_ODR_5
 ((
uöt32_t
)0x00000020)

	)

3060 
	#GPIO_ODR_ODR_6
 ((
uöt32_t
)0x00000040)

	)

3061 
	#GPIO_ODR_ODR_7
 ((
uöt32_t
)0x00000080)

	)

3062 
	#GPIO_ODR_ODR_8
 ((
uöt32_t
)0x00000100)

	)

3063 
	#GPIO_ODR_ODR_9
 ((
uöt32_t
)0x00000200)

	)

3064 
	#GPIO_ODR_ODR_10
 ((
uöt32_t
)0x00000400)

	)

3065 
	#GPIO_ODR_ODR_11
 ((
uöt32_t
)0x00000800)

	)

3066 
	#GPIO_ODR_ODR_12
 ((
uöt32_t
)0x00001000)

	)

3067 
	#GPIO_ODR_ODR_13
 ((
uöt32_t
)0x00002000)

	)

3068 
	#GPIO_ODR_ODR_14
 ((
uöt32_t
)0x00004000)

	)

3069 
	#GPIO_ODR_ODR_15
 ((
uöt32_t
)0x00008000)

	)

3071 
	#GPIO_OTYPER_ODR_0
 
GPIO_ODR_ODR_0


	)

3072 
	#GPIO_OTYPER_ODR_1
 
GPIO_ODR_ODR_1


	)

3073 
	#GPIO_OTYPER_ODR_2
 
GPIO_ODR_ODR_2


	)

3074 
	#GPIO_OTYPER_ODR_3
 
GPIO_ODR_ODR_3


	)

3075 
	#GPIO_OTYPER_ODR_4
 
GPIO_ODR_ODR_4


	)

3076 
	#GPIO_OTYPER_ODR_5
 
GPIO_ODR_ODR_5


	)

3077 
	#GPIO_OTYPER_ODR_6
 
GPIO_ODR_ODR_6


	)

3078 
	#GPIO_OTYPER_ODR_7
 
GPIO_ODR_ODR_7


	)

3079 
	#GPIO_OTYPER_ODR_8
 
GPIO_ODR_ODR_8


	)

3080 
	#GPIO_OTYPER_ODR_9
 
GPIO_ODR_ODR_9


	)

3081 
	#GPIO_OTYPER_ODR_10
 
GPIO_ODR_ODR_10


	)

3082 
	#GPIO_OTYPER_ODR_11
 
GPIO_ODR_ODR_11


	)

3083 
	#GPIO_OTYPER_ODR_12
 
GPIO_ODR_ODR_12


	)

3084 
	#GPIO_OTYPER_ODR_13
 
GPIO_ODR_ODR_13


	)

3085 
	#GPIO_OTYPER_ODR_14
 
GPIO_ODR_ODR_14


	)

3086 
	#GPIO_OTYPER_ODR_15
 
GPIO_ODR_ODR_15


	)

3089 
	#GPIO_BSRR_BS_0
 ((
uöt32_t
)0x00000001)

	)

3090 
	#GPIO_BSRR_BS_1
 ((
uöt32_t
)0x00000002)

	)

3091 
	#GPIO_BSRR_BS_2
 ((
uöt32_t
)0x00000004)

	)

3092 
	#GPIO_BSRR_BS_3
 ((
uöt32_t
)0x00000008)

	)

3093 
	#GPIO_BSRR_BS_4
 ((
uöt32_t
)0x00000010)

	)

3094 
	#GPIO_BSRR_BS_5
 ((
uöt32_t
)0x00000020)

	)

3095 
	#GPIO_BSRR_BS_6
 ((
uöt32_t
)0x00000040)

	)

3096 
	#GPIO_BSRR_BS_7
 ((
uöt32_t
)0x00000080)

	)

3097 
	#GPIO_BSRR_BS_8
 ((
uöt32_t
)0x00000100)

	)

3098 
	#GPIO_BSRR_BS_9
 ((
uöt32_t
)0x00000200)

	)

3099 
	#GPIO_BSRR_BS_10
 ((
uöt32_t
)0x00000400)

	)

3100 
	#GPIO_BSRR_BS_11
 ((
uöt32_t
)0x00000800)

	)

3101 
	#GPIO_BSRR_BS_12
 ((
uöt32_t
)0x00001000)

	)

3102 
	#GPIO_BSRR_BS_13
 ((
uöt32_t
)0x00002000)

	)

3103 
	#GPIO_BSRR_BS_14
 ((
uöt32_t
)0x00004000)

	)

3104 
	#GPIO_BSRR_BS_15
 ((
uöt32_t
)0x00008000)

	)

3105 
	#GPIO_BSRR_BR_0
 ((
uöt32_t
)0x00010000)

	)

3106 
	#GPIO_BSRR_BR_1
 ((
uöt32_t
)0x00020000)

	)

3107 
	#GPIO_BSRR_BR_2
 ((
uöt32_t
)0x00040000)

	)

3108 
	#GPIO_BSRR_BR_3
 ((
uöt32_t
)0x00080000)

	)

3109 
	#GPIO_BSRR_BR_4
 ((
uöt32_t
)0x00100000)

	)

3110 
	#GPIO_BSRR_BR_5
 ((
uöt32_t
)0x00200000)

	)

3111 
	#GPIO_BSRR_BR_6
 ((
uöt32_t
)0x00400000)

	)

3112 
	#GPIO_BSRR_BR_7
 ((
uöt32_t
)0x00800000)

	)

3113 
	#GPIO_BSRR_BR_8
 ((
uöt32_t
)0x01000000)

	)

3114 
	#GPIO_BSRR_BR_9
 ((
uöt32_t
)0x02000000)

	)

3115 
	#GPIO_BSRR_BR_10
 ((
uöt32_t
)0x04000000)

	)

3116 
	#GPIO_BSRR_BR_11
 ((
uöt32_t
)0x08000000)

	)

3117 
	#GPIO_BSRR_BR_12
 ((
uöt32_t
)0x10000000)

	)

3118 
	#GPIO_BSRR_BR_13
 ((
uöt32_t
)0x20000000)

	)

3119 
	#GPIO_BSRR_BR_14
 ((
uöt32_t
)0x40000000)

	)

3120 
	#GPIO_BSRR_BR_15
 ((
uöt32_t
)0x80000000)

	)

3123 
	#GPIO_LCKR_LCK0
 ((
uöt32_t
)0x00000001)

	)

3124 
	#GPIO_LCKR_LCK1
 ((
uöt32_t
)0x00000002)

	)

3125 
	#GPIO_LCKR_LCK2
 ((
uöt32_t
)0x00000004)

	)

3126 
	#GPIO_LCKR_LCK3
 ((
uöt32_t
)0x00000008)

	)

3127 
	#GPIO_LCKR_LCK4
 ((
uöt32_t
)0x00000010)

	)

3128 
	#GPIO_LCKR_LCK5
 ((
uöt32_t
)0x00000020)

	)

3129 
	#GPIO_LCKR_LCK6
 ((
uöt32_t
)0x00000040)

	)

3130 
	#GPIO_LCKR_LCK7
 ((
uöt32_t
)0x00000080)

	)

3131 
	#GPIO_LCKR_LCK8
 ((
uöt32_t
)0x00000100)

	)

3132 
	#GPIO_LCKR_LCK9
 ((
uöt32_t
)0x00000200)

	)

3133 
	#GPIO_LCKR_LCK10
 ((
uöt32_t
)0x00000400)

	)

3134 
	#GPIO_LCKR_LCK11
 ((
uöt32_t
)0x00000800)

	)

3135 
	#GPIO_LCKR_LCK12
 ((
uöt32_t
)0x00001000)

	)

3136 
	#GPIO_LCKR_LCK13
 ((
uöt32_t
)0x00002000)

	)

3137 
	#GPIO_LCKR_LCK14
 ((
uöt32_t
)0x00004000)

	)

3138 
	#GPIO_LCKR_LCK15
 ((
uöt32_t
)0x00008000)

	)

3139 
	#GPIO_LCKR_LCKK
 ((
uöt32_t
)0x00010000)

	)

3142 
	#GPIO_AFRL_AFRL0
 ((
uöt32_t
)0x0000000F)

	)

3143 
	#GPIO_AFRL_AFRL1
 ((
uöt32_t
)0x000000F0)

	)

3144 
	#GPIO_AFRL_AFRL2
 ((
uöt32_t
)0x00000F00)

	)

3145 
	#GPIO_AFRL_AFRL3
 ((
uöt32_t
)0x0000F000)

	)

3146 
	#GPIO_AFRL_AFRL4
 ((
uöt32_t
)0x000F0000)

	)

3147 
	#GPIO_AFRL_AFRL5
 ((
uöt32_t
)0x00F00000)

	)

3148 
	#GPIO_AFRL_AFRL6
 ((
uöt32_t
)0x0F000000)

	)

3149 
	#GPIO_AFRL_AFRL7
 ((
uöt32_t
)0xF0000000)

	)

3152 
	#GPIO_AFRH_AFRH8
 ((
uöt32_t
)0x0000000F)

	)

3153 
	#GPIO_AFRH_AFRH9
 ((
uöt32_t
)0x000000F0)

	)

3154 
	#GPIO_AFRH_AFRH10
 ((
uöt32_t
)0x00000F00)

	)

3155 
	#GPIO_AFRH_AFRH11
 ((
uöt32_t
)0x0000F000)

	)

3156 
	#GPIO_AFRH_AFRH12
 ((
uöt32_t
)0x000F0000)

	)

3157 
	#GPIO_AFRH_AFRH13
 ((
uöt32_t
)0x00F00000)

	)

3158 
	#GPIO_AFRH_AFRH14
 ((
uöt32_t
)0x0F000000)

	)

3159 
	#GPIO_AFRH_AFRH15
 ((
uöt32_t
)0xF0000000)

	)

3168 
	#I2C_CR1_PE
 ((
uöt16_t
)0x0001Ë

	)

3169 
	#I2C_CR1_SMBUS
 ((
uöt16_t
)0x0002Ë

	)

3170 
	#I2C_CR1_SMBTYPE
 ((
uöt16_t
)0x0008Ë

	)

3171 
	#I2C_CR1_ENARP
 ((
uöt16_t
)0x0010Ë

	)

3172 
	#I2C_CR1_ENPEC
 ((
uöt16_t
)0x0020Ë

	)

3173 
	#I2C_CR1_ENGC
 ((
uöt16_t
)0x0040Ë

	)

3174 
	#I2C_CR1_NOSTRETCH
 ((
uöt16_t
)0x0080Ë

	)

3175 
	#I2C_CR1_START
 ((
uöt16_t
)0x0100Ë

	)

3176 
	#I2C_CR1_STOP
 ((
uöt16_t
)0x0200Ë

	)

3177 
	#I2C_CR1_ACK
 ((
uöt16_t
)0x0400Ë

	)

3178 
	#I2C_CR1_POS
 ((
uöt16_t
)0x0800Ë

	)

3179 
	#I2C_CR1_PEC
 ((
uöt16_t
)0x1000Ë

	)

3180 
	#I2C_CR1_ALERT
 ((
uöt16_t
)0x2000Ë

	)

3181 
	#I2C_CR1_SWRST
 ((
uöt16_t
)0x8000Ë

	)

3184 
	#I2C_CR2_FREQ
 ((
uöt16_t
)0x003FË

	)

3185 
	#I2C_CR2_FREQ_0
 ((
uöt16_t
)0x0001Ë

	)

3186 
	#I2C_CR2_FREQ_1
 ((
uöt16_t
)0x0002Ë

	)

3187 
	#I2C_CR2_FREQ_2
 ((
uöt16_t
)0x0004Ë

	)

3188 
	#I2C_CR2_FREQ_3
 ((
uöt16_t
)0x0008Ë

	)

3189 
	#I2C_CR2_FREQ_4
 ((
uöt16_t
)0x0010Ë

	)

3190 
	#I2C_CR2_FREQ_5
 ((
uöt16_t
)0x0020Ë

	)

3192 
	#I2C_CR2_ITERREN
 ((
uöt16_t
)0x0100Ë

	)

3193 
	#I2C_CR2_ITEVTEN
 ((
uöt16_t
)0x0200Ë

	)

3194 
	#I2C_CR2_ITBUFEN
 ((
uöt16_t
)0x0400Ë

	)

3195 
	#I2C_CR2_DMAEN
 ((
uöt16_t
)0x0800Ë

	)

3196 
	#I2C_CR2_LAST
 ((
uöt16_t
)0x1000Ë

	)

3199 
	#I2C_OAR1_ADD1_7
 ((
uöt16_t
)0x00FEË

	)

3200 
	#I2C_OAR1_ADD8_9
 ((
uöt16_t
)0x0300Ë

	)

3202 
	#I2C_OAR1_ADD0
 ((
uöt16_t
)0x0001Ë

	)

3203 
	#I2C_OAR1_ADD1
 ((
uöt16_t
)0x0002Ë

	)

3204 
	#I2C_OAR1_ADD2
 ((
uöt16_t
)0x0004Ë

	)

3205 
	#I2C_OAR1_ADD3
 ((
uöt16_t
)0x0008Ë

	)

3206 
	#I2C_OAR1_ADD4
 ((
uöt16_t
)0x0010Ë

	)

3207 
	#I2C_OAR1_ADD5
 ((
uöt16_t
)0x0020Ë

	)

3208 
	#I2C_OAR1_ADD6
 ((
uöt16_t
)0x0040Ë

	)

3209 
	#I2C_OAR1_ADD7
 ((
uöt16_t
)0x0080Ë

	)

3210 
	#I2C_OAR1_ADD8
 ((
uöt16_t
)0x0100Ë

	)

3211 
	#I2C_OAR1_ADD9
 ((
uöt16_t
)0x0200Ë

	)

3213 
	#I2C_OAR1_ADDMODE
 ((
uöt16_t
)0x8000Ë

	)

3216 
	#I2C_OAR2_ENDUAL
 ((
uöt8_t
)0x01Ë

	)

3217 
	#I2C_OAR2_ADD2
 ((
uöt8_t
)0xFEË

	)

3220 
	#I2C_DR_DR
 ((
uöt8_t
)0xFFË

	)

3223 
	#I2C_SR1_SB
 ((
uöt16_t
)0x0001Ë

	)

3224 
	#I2C_SR1_ADDR
 ((
uöt16_t
)0x0002Ë

	)

3225 
	#I2C_SR1_BTF
 ((
uöt16_t
)0x0004Ë

	)

3226 
	#I2C_SR1_ADD10
 ((
uöt16_t
)0x0008Ë

	)

3227 
	#I2C_SR1_STOPF
 ((
uöt16_t
)0x0010Ë

	)

3228 
	#I2C_SR1_RXNE
 ((
uöt16_t
)0x0040Ë

	)

3229 
	#I2C_SR1_TXE
 ((
uöt16_t
)0x0080Ë

	)

3230 
	#I2C_SR1_BERR
 ((
uöt16_t
)0x0100Ë

	)

3231 
	#I2C_SR1_ARLO
 ((
uöt16_t
)0x0200Ë

	)

3232 
	#I2C_SR1_AF
 ((
uöt16_t
)0x0400Ë

	)

3233 
	#I2C_SR1_OVR
 ((
uöt16_t
)0x0800Ë

	)

3234 
	#I2C_SR1_PECERR
 ((
uöt16_t
)0x1000Ë

	)

3235 
	#I2C_SR1_TIMEOUT
 ((
uöt16_t
)0x4000Ë

	)

3236 
	#I2C_SR1_SMBALERT
 ((
uöt16_t
)0x8000Ë

	)

3239 
	#I2C_SR2_MSL
 ((
uöt16_t
)0x0001Ë

	)

3240 
	#I2C_SR2_BUSY
 ((
uöt16_t
)0x0002Ë

	)

3241 
	#I2C_SR2_TRA
 ((
uöt16_t
)0x0004Ë

	)

3242 
	#I2C_SR2_GENCALL
 ((
uöt16_t
)0x0010Ë

	)

3243 
	#I2C_SR2_SMBDEFAULT
 ((
uöt16_t
)0x0020Ë

	)

3244 
	#I2C_SR2_SMBHOST
 ((
uöt16_t
)0x0040Ë

	)

3245 
	#I2C_SR2_DUALF
 ((
uöt16_t
)0x0080Ë

	)

3246 
	#I2C_SR2_PEC
 ((
uöt16_t
)0xFF00Ë

	)

3249 
	#I2C_CCR_CCR
 ((
uöt16_t
)0x0FFFË

	)

3250 
	#I2C_CCR_DUTY
 ((
uöt16_t
)0x4000Ë

	)

3251 
	#I2C_CCR_FS
 ((
uöt16_t
)0x8000Ë

	)

3254 
	#I2C_TRISE_TRISE
 ((
uöt8_t
)0x3FË

	)

3263 
	#IWDG_KR_KEY
 ((
uöt16_t
)0xFFFFË

	)

3266 
	#IWDG_PR_PR
 ((
uöt8_t
)0x07Ë

	)

3267 
	#IWDG_PR_PR_0
 ((
uöt8_t
)0x01Ë

	)

3268 
	#IWDG_PR_PR_1
 ((
uöt8_t
)0x02Ë

	)

3269 
	#IWDG_PR_PR_2
 ((
uöt8_t
)0x04Ë

	)

3272 
	#IWDG_RLR_RL
 ((
uöt16_t
)0x0FFFË

	)

3275 
	#IWDG_SR_PVU
 ((
uöt8_t
)0x01Ë

	)

3276 
	#IWDG_SR_RVU
 ((
uöt8_t
)0x02Ë

	)

3285 
	#LCD_CR_LCDEN
 ((
uöt32_t
)0x00000001Ë

	)

3286 
	#LCD_CR_VSEL
 ((
uöt32_t
)0x00000002Ë

	)

3288 
	#LCD_CR_DUTY
 ((
uöt32_t
)0x0000001CË

	)

3289 
	#LCD_CR_DUTY_0
 ((
uöt32_t
)0x00000004Ë

	)

3290 
	#LCD_CR_DUTY_1
 ((
uöt32_t
)0x00000008Ë

	)

3291 
	#LCD_CR_DUTY_2
 ((
uöt32_t
)0x00000010Ë

	)

3293 
	#LCD_CR_BIAS
 ((
uöt32_t
)0x00000060Ë

	)

3294 
	#LCD_CR_BIAS_0
 ((
uöt32_t
)0x00000020Ë

	)

3295 
	#LCD_CR_BIAS_1
 ((
uöt32_t
)0x00000040Ë

	)

3297 
	#LCD_CR_MUX_SEG
 ((
uöt32_t
)0x00000080Ë

	)

3300 
	#LCD_FCR_HD
 ((
uöt32_t
)0x00000001Ë

	)

3301 
	#LCD_FCR_SOFIE
 ((
uöt32_t
)0x00000002Ë

	)

3302 
	#LCD_FCR_UDDIE
 ((
uöt32_t
)0x00000008Ë

	)

3304 
	#LCD_FCR_PON
 ((
uöt32_t
)0x00000070Ë

	)

3305 
	#LCD_FCR_PON_0
 ((
uöt32_t
)0x00000010Ë

	)

3306 
	#LCD_FCR_PON_1
 ((
uöt32_t
)0x00000020Ë

	)

3307 
	#LCD_FCR_PON_2
 ((
uöt32_t
)0x00000040Ë

	)

3309 
	#LCD_FCR_DEAD
 ((
uöt32_t
)0x00000380Ë

	)

3310 
	#LCD_FCR_DEAD_0
 ((
uöt32_t
)0x00000080Ë

	)

3311 
	#LCD_FCR_DEAD_1
 ((
uöt32_t
)0x00000100Ë

	)

3312 
	#LCD_FCR_DEAD_2
 ((
uöt32_t
)0x00000200Ë

	)

3314 
	#LCD_FCR_CC
 ((
uöt32_t
)0x00001C00Ë

	)

3315 
	#LCD_FCR_CC_0
 ((
uöt32_t
)0x00000400Ë

	)

3316 
	#LCD_FCR_CC_1
 ((
uöt32_t
)0x00000800Ë

	)

3317 
	#LCD_FCR_CC_2
 ((
uöt32_t
)0x00001000Ë

	)

3319 
	#LCD_FCR_BLINKF
 ((
uöt32_t
)0x0000E000Ë

	)

3320 
	#LCD_FCR_BLINKF_0
 ((
uöt32_t
)0x00002000Ë

	)

3321 
	#LCD_FCR_BLINKF_1
 ((
uöt32_t
)0x00004000Ë

	)

3322 
	#LCD_FCR_BLINKF_2
 ((
uöt32_t
)0x00008000Ë

	)

3324 
	#LCD_FCR_BLINK
 ((
uöt32_t
)0x00030000Ë

	)

3325 
	#LCD_FCR_BLINK_0
 ((
uöt32_t
)0x00010000Ë

	)

3326 
	#LCD_FCR_BLINK_1
 ((
uöt32_t
)0x00020000Ë

	)

3328 
	#LCD_FCR_DIV
 ((
uöt32_t
)0x003C0000Ë

	)

3329 
	#LCD_FCR_PS
 ((
uöt32_t
)0x03C00000Ë

	)

3332 
	#LCD_SR_ENS
 ((
uöt32_t
)0x00000001Ë

	)

3333 
	#LCD_SR_SOF
 ((
uöt32_t
)0x00000002Ë

	)

3334 
	#LCD_SR_UDR
 ((
uöt32_t
)0x00000004Ë

	)

3335 
	#LCD_SR_UDD
 ((
uöt32_t
)0x00000008Ë

	)

3336 
	#LCD_SR_RDY
 ((
uöt32_t
)0x00000010Ë

	)

3337 
	#LCD_SR_FCRSR
 ((
uöt32_t
)0x00000020Ë

	)

3340 
	#LCD_CLR_SOFC
 ((
uöt32_t
)0x00000002Ë

	)

3341 
	#LCD_CLR_UDDC
 ((
uöt32_t
)0x00000008Ë

	)

3344 
	#LCD_RAM_SEGMENT_DATA
 ((
uöt32_t
)0xFFFFFFFFË

	)

3353 
	#PWR_CR_LPSDSR
 ((
uöt16_t
)0x0001Ë

	)

3354 
	#PWR_CR_PDDS
 ((
uöt16_t
)0x0002Ë

	)

3355 
	#PWR_CR_CWUF
 ((
uöt16_t
)0x0004Ë

	)

3356 
	#PWR_CR_CSBF
 ((
uöt16_t
)0x0008Ë

	)

3357 
	#PWR_CR_PVDE
 ((
uöt16_t
)0x0010Ë

	)

3359 
	#PWR_CR_PLS
 ((
uöt16_t
)0x00E0Ë

	)

3360 
	#PWR_CR_PLS_0
 ((
uöt16_t
)0x0020Ë

	)

3361 
	#PWR_CR_PLS_1
 ((
uöt16_t
)0x0040Ë

	)

3362 
	#PWR_CR_PLS_2
 ((
uöt16_t
)0x0080Ë

	)

3365 
	#PWR_CR_PLS_LEV0
 ((
uöt16_t
)0x0000Ë

	)

3366 
	#PWR_CR_PLS_LEV1
 ((
uöt16_t
)0x0020Ë

	)

3367 
	#PWR_CR_PLS_LEV2
 ((
uöt16_t
)0x0040Ë

	)

3368 
	#PWR_CR_PLS_LEV3
 ((
uöt16_t
)0x0060Ë

	)

3369 
	#PWR_CR_PLS_LEV4
 ((
uöt16_t
)0x0080Ë

	)

3370 
	#PWR_CR_PLS_LEV5
 ((
uöt16_t
)0x00A0Ë

	)

3371 
	#PWR_CR_PLS_LEV6
 ((
uöt16_t
)0x00C0Ë

	)

3372 
	#PWR_CR_PLS_LEV7
 ((
uöt16_t
)0x00E0Ë

	)

3374 
	#PWR_CR_DBP
 ((
uöt16_t
)0x0100Ë

	)

3375 
	#PWR_CR_ULP
 ((
uöt16_t
)0x0200Ë

	)

3376 
	#PWR_CR_FWU
 ((
uöt16_t
)0x0400Ë

	)

3378 
	#PWR_CR_VOS
 ((
uöt16_t
)0x1800Ë

	)

3379 
	#PWR_CR_VOS_0
 ((
uöt16_t
)0x0800Ë

	)

3380 
	#PWR_CR_VOS_1
 ((
uöt16_t
)0x1000Ë

	)

3381 
	#PWR_CR_LPRUN
 ((
uöt16_t
)0x4000Ë

	)

3384 
	#PWR_CSR_WUF
 ((
uöt16_t
)0x0001Ë

	)

3385 
	#PWR_CSR_SBF
 ((
uöt16_t
)0x0002Ë

	)

3386 
	#PWR_CSR_PVDO
 ((
uöt16_t
)0x0004Ë

	)

3387 
	#PWR_CSR_VREFINTRDYF
 ((
uöt16_t
)0x0008Ë

	)

3388 
	#PWR_CSR_VOSF
 ((
uöt16_t
)0x0010Ë

	)

3389 
	#PWR_CSR_REGLPF
 ((
uöt16_t
)0x0020Ë

	)

3391 
	#PWR_CSR_EWUP1
 ((
uöt16_t
)0x0100Ë

	)

3392 
	#PWR_CSR_EWUP2
 ((
uöt16_t
)0x0200Ë

	)

3393 
	#PWR_CSR_EWUP3
 ((
uöt16_t
)0x0400Ë

	)

3401 
	#RCC_CR_HSION
 ((
uöt32_t
)0x00000001Ë

	)

3402 
	#RCC_CR_HSIRDY
 ((
uöt32_t
)0x00000002Ë

	)

3404 
	#RCC_CR_MSION
 ((
uöt32_t
)0x00000100Ë

	)

3405 
	#RCC_CR_MSIRDY
 ((
uöt32_t
)0x00000200Ë

	)

3407 
	#RCC_CR_HSEON
 ((
uöt32_t
)0x00010000Ë

	)

3408 
	#RCC_CR_HSERDY
 ((
uöt32_t
)0x00020000Ë

	)

3409 
	#RCC_CR_HSEBYP
 ((
uöt32_t
)0x00040000Ë

	)

3411 
	#RCC_CR_PLLON
 ((
uöt32_t
)0x01000000Ë

	)

3412 
	#RCC_CR_PLLRDY
 ((
uöt32_t
)0x02000000Ë

	)

3413 
	#RCC_CR_CSSON
 ((
uöt32_t
)0x10000000Ë

	)

3415 
	#RCC_CR_RTCPRE
 ((
uöt32_t
)0x60000000Ë

	)

3416 
	#RCC_CR_RTCPRE_0
 ((
uöt32_t
)0x20000000Ë

	)

3417 
	#RCC_CR_RTCPRE_1
 ((
uöt32_t
)0x40000000Ë

	)

3420 
	#RCC_ICSCR_HSICAL
 ((
uöt32_t
)0x000000FFË

	)

3421 
	#RCC_ICSCR_HSITRIM
 ((
uöt32_t
)0x00001F00Ë

	)

3423 
	#RCC_ICSCR_MSIRANGE
 ((
uöt32_t
)0x0000E000Ë

	)

3424 
	#RCC_ICSCR_MSIRANGE_0
 ((
uöt32_t
)0x00000000Ë

	)

3425 
	#RCC_ICSCR_MSIRANGE_1
 ((
uöt32_t
)0x00002000Ë

	)

3426 
	#RCC_ICSCR_MSIRANGE_2
 ((
uöt32_t
)0x00004000Ë

	)

3427 
	#RCC_ICSCR_MSIRANGE_3
 ((
uöt32_t
)0x00006000Ë

	)

3428 
	#RCC_ICSCR_MSIRANGE_4
 ((
uöt32_t
)0x00008000Ë

	)

3429 
	#RCC_ICSCR_MSIRANGE_5
 ((
uöt32_t
)0x0000A000Ë

	)

3430 
	#RCC_ICSCR_MSIRANGE_6
 ((
uöt32_t
)0x0000C000Ë

	)

3431 
	#RCC_ICSCR_MSICAL
 ((
uöt32_t
)0x00FF0000Ë

	)

3432 
	#RCC_ICSCR_MSITRIM
 ((
uöt32_t
)0xFF000000Ë

	)

3435 
	#RCC_CFGR_SW
 ((
uöt32_t
)0x00000003Ë

	)

3436 
	#RCC_CFGR_SW_0
 ((
uöt32_t
)0x00000001Ë

	)

3437 
	#RCC_CFGR_SW_1
 ((
uöt32_t
)0x00000002Ë

	)

3440 
	#RCC_CFGR_SW_MSI
 ((
uöt32_t
)0x00000000Ë

	)

3441 
	#RCC_CFGR_SW_HSI
 ((
uöt32_t
)0x00000001Ë

	)

3442 
	#RCC_CFGR_SW_HSE
 ((
uöt32_t
)0x00000002Ë

	)

3443 
	#RCC_CFGR_SW_PLL
 ((
uöt32_t
)0x00000003Ë

	)

3445 
	#RCC_CFGR_SWS
 ((
uöt32_t
)0x0000000CË

	)

3446 
	#RCC_CFGR_SWS_0
 ((
uöt32_t
)0x00000004Ë

	)

3447 
	#RCC_CFGR_SWS_1
 ((
uöt32_t
)0x00000008Ë

	)

3450 
	#RCC_CFGR_SWS_MSI
 ((
uöt32_t
)0x00000000Ë

	)

3451 
	#RCC_CFGR_SWS_HSI
 ((
uöt32_t
)0x00000004Ë

	)

3452 
	#RCC_CFGR_SWS_HSE
 ((
uöt32_t
)0x00000008Ë

	)

3453 
	#RCC_CFGR_SWS_PLL
 ((
uöt32_t
)0x0000000CË

	)

3455 
	#RCC_CFGR_HPRE
 ((
uöt32_t
)0x000000F0Ë

	)

3456 
	#RCC_CFGR_HPRE_0
 ((
uöt32_t
)0x00000010Ë

	)

3457 
	#RCC_CFGR_HPRE_1
 ((
uöt32_t
)0x00000020Ë

	)

3458 
	#RCC_CFGR_HPRE_2
 ((
uöt32_t
)0x00000040Ë

	)

3459 
	#RCC_CFGR_HPRE_3
 ((
uöt32_t
)0x00000080Ë

	)

3462 
	#RCC_CFGR_HPRE_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3463 
	#RCC_CFGR_HPRE_DIV2
 ((
uöt32_t
)0x00000080Ë

	)

3464 
	#RCC_CFGR_HPRE_DIV4
 ((
uöt32_t
)0x00000090Ë

	)

3465 
	#RCC_CFGR_HPRE_DIV8
 ((
uöt32_t
)0x000000A0Ë

	)

3466 
	#RCC_CFGR_HPRE_DIV16
 ((
uöt32_t
)0x000000B0Ë

	)

3467 
	#RCC_CFGR_HPRE_DIV64
 ((
uöt32_t
)0x000000C0Ë

	)

3468 
	#RCC_CFGR_HPRE_DIV128
 ((
uöt32_t
)0x000000D0Ë

	)

3469 
	#RCC_CFGR_HPRE_DIV256
 ((
uöt32_t
)0x000000E0Ë

	)

3470 
	#RCC_CFGR_HPRE_DIV512
 ((
uöt32_t
)0x000000F0Ë

	)

3472 
	#RCC_CFGR_PPRE1
 ((
uöt32_t
)0x00000700Ë

	)

3473 
	#RCC_CFGR_PPRE1_0
 ((
uöt32_t
)0x00000100Ë

	)

3474 
	#RCC_CFGR_PPRE1_1
 ((
uöt32_t
)0x00000200Ë

	)

3475 
	#RCC_CFGR_PPRE1_2
 ((
uöt32_t
)0x00000400Ë

	)

3478 
	#RCC_CFGR_PPRE1_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3479 
	#RCC_CFGR_PPRE1_DIV2
 ((
uöt32_t
)0x00000400Ë

	)

3480 
	#RCC_CFGR_PPRE1_DIV4
 ((
uöt32_t
)0x00000500Ë

	)

3481 
	#RCC_CFGR_PPRE1_DIV8
 ((
uöt32_t
)0x00000600Ë

	)

3482 
	#RCC_CFGR_PPRE1_DIV16
 ((
uöt32_t
)0x00000700Ë

	)

3484 
	#RCC_CFGR_PPRE2
 ((
uöt32_t
)0x00003800Ë

	)

3485 
	#RCC_CFGR_PPRE2_0
 ((
uöt32_t
)0x00000800Ë

	)

3486 
	#RCC_CFGR_PPRE2_1
 ((
uöt32_t
)0x00001000Ë

	)

3487 
	#RCC_CFGR_PPRE2_2
 ((
uöt32_t
)0x00002000Ë

	)

3490 
	#RCC_CFGR_PPRE2_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3491 
	#RCC_CFGR_PPRE2_DIV2
 ((
uöt32_t
)0x00002000Ë

	)

3492 
	#RCC_CFGR_PPRE2_DIV4
 ((
uöt32_t
)0x00002800Ë

	)

3493 
	#RCC_CFGR_PPRE2_DIV8
 ((
uöt32_t
)0x00003000Ë

	)

3494 
	#RCC_CFGR_PPRE2_DIV16
 ((
uöt32_t
)0x00003800Ë

	)

3497 
	#RCC_CFGR_PLLSRC
 ((
uöt32_t
)0x00010000Ë

	)

3499 
	#RCC_CFGR_PLLSRC_HSI
 ((
uöt32_t
)0x00000000Ë

	)

3500 
	#RCC_CFGR_PLLSRC_HSE
 ((
uöt32_t
)0x00010000Ë

	)

3503 
	#RCC_CFGR_PLLMUL
 ((
uöt32_t
)0x003C0000Ë

	)

3504 
	#RCC_CFGR_PLLMUL_0
 ((
uöt32_t
)0x00040000Ë

	)

3505 
	#RCC_CFGR_PLLMUL_1
 ((
uöt32_t
)0x00080000Ë

	)

3506 
	#RCC_CFGR_PLLMUL_2
 ((
uöt32_t
)0x00100000Ë

	)

3507 
	#RCC_CFGR_PLLMUL_3
 ((
uöt32_t
)0x00200000Ë

	)

3510 
	#RCC_CFGR_PLLMUL3
 ((
uöt32_t
)0x00000000Ë

	)

3511 
	#RCC_CFGR_PLLMUL4
 ((
uöt32_t
)0x00040000Ë

	)

3512 
	#RCC_CFGR_PLLMUL6
 ((
uöt32_t
)0x00080000Ë

	)

3513 
	#RCC_CFGR_PLLMUL8
 ((
uöt32_t
)0x000C0000Ë

	)

3514 
	#RCC_CFGR_PLLMUL12
 ((
uöt32_t
)0x00100000Ë

	)

3515 
	#RCC_CFGR_PLLMUL16
 ((
uöt32_t
)0x00140000Ë

	)

3516 
	#RCC_CFGR_PLLMUL24
 ((
uöt32_t
)0x00180000Ë

	)

3517 
	#RCC_CFGR_PLLMUL32
 ((
uöt32_t
)0x001C0000Ë

	)

3518 
	#RCC_CFGR_PLLMUL48
 ((
uöt32_t
)0x00200000Ë

	)

3521 
	#RCC_CFGR_PLLDIV
 ((
uöt32_t
)0x00C00000Ë

	)

3522 
	#RCC_CFGR_PLLDIV_0
 ((
uöt32_t
)0x00400000Ë

	)

3523 
	#RCC_CFGR_PLLDIV_1
 ((
uöt32_t
)0x00800000Ë

	)

3527 
	#RCC_CFGR_PLLDIV1
 ((
uöt32_t
)0x00000000Ë

	)

3528 
	#RCC_CFGR_PLLDIV2
 ((
uöt32_t
)0x00400000Ë

	)

3529 
	#RCC_CFGR_PLLDIV3
 ((
uöt32_t
)0x00800000Ë

	)

3530 
	#RCC_CFGR_PLLDIV4
 ((
uöt32_t
)0x00C00000Ë

	)

3533 
	#RCC_CFGR_MCOSEL
 ((
uöt32_t
)0x07000000Ë

	)

3534 
	#RCC_CFGR_MCOSEL_0
 ((
uöt32_t
)0x01000000Ë

	)

3535 
	#RCC_CFGR_MCOSEL_1
 ((
uöt32_t
)0x02000000Ë

	)

3536 
	#RCC_CFGR_MCOSEL_2
 ((
uöt32_t
)0x04000000Ë

	)

3539 
	#RCC_CFGR_MCO_NOCLOCK
 ((
uöt32_t
)0x00000000Ë

	)

3540 
	#RCC_CFGR_MCO_SYSCLK
 ((
uöt32_t
)0x01000000Ë

	)

3541 
	#RCC_CFGR_MCO_HSI
 ((
uöt32_t
)0x02000000Ë

	)

3542 
	#RCC_CFGR_MCO_MSI
 ((
uöt32_t
)0x03000000Ë

	)

3543 
	#RCC_CFGR_MCO_HSE
 ((
uöt32_t
)0x04000000Ë

	)

3544 
	#RCC_CFGR_MCO_PLL
 ((
uöt32_t
)0x05000000Ë

	)

3545 
	#RCC_CFGR_MCO_LSI
 ((
uöt32_t
)0x06000000Ë

	)

3546 
	#RCC_CFGR_MCO_LSE
 ((
uöt32_t
)0x07000000Ë

	)

3548 
	#RCC_CFGR_MCOPRE
 ((
uöt32_t
)0x70000000Ë

	)

3549 
	#RCC_CFGR_MCOPRE_0
 ((
uöt32_t
)0x10000000Ë

	)

3550 
	#RCC_CFGR_MCOPRE_1
 ((
uöt32_t
)0x20000000Ë

	)

3551 
	#RCC_CFGR_MCOPRE_2
 ((
uöt32_t
)0x40000000Ë

	)

3554 
	#RCC_CFGR_MCO_DIV1
 ((
uöt32_t
)0x00000000Ë

	)

3555 
	#RCC_CFGR_MCO_DIV2
 ((
uöt32_t
)0x10000000Ë

	)

3556 
	#RCC_CFGR_MCO_DIV4
 ((
uöt32_t
)0x20000000Ë

	)

3557 
	#RCC_CFGR_MCO_DIV8
 ((
uöt32_t
)0x30000000Ë

	)

3558 
	#RCC_CFGR_MCO_DIV16
 ((
uöt32_t
)0x40000000Ë

	)

3561 
	#RCC_CIR_LSIRDYF
 ((
uöt32_t
)0x00000001Ë

	)

3562 
	#RCC_CIR_LSERDYF
 ((
uöt32_t
)0x00000002Ë

	)

3563 
	#RCC_CIR_HSIRDYF
 ((
uöt32_t
)0x00000004Ë

	)

3564 
	#RCC_CIR_HSERDYF
 ((
uöt32_t
)0x00000008Ë

	)

3565 
	#RCC_CIR_PLLRDYF
 ((
uöt32_t
)0x00000010Ë

	)

3566 
	#RCC_CIR_MSIRDYF
 ((
uöt32_t
)0x00000020Ë

	)

3567 
	#RCC_CIR_LSECSS
 ((
uöt32_t
)0x00000040Ë

	)

3568 
	#RCC_CIR_CSSF
 ((
uöt32_t
)0x00000080Ë

	)

3570 
	#RCC_CIR_LSIRDYIE
 ((
uöt32_t
)0x00000100Ë

	)

3571 
	#RCC_CIR_LSERDYIE
 ((
uöt32_t
)0x00000200Ë

	)

3572 
	#RCC_CIR_HSIRDYIE
 ((
uöt32_t
)0x00000400Ë

	)

3573 
	#RCC_CIR_HSERDYIE
 ((
uöt32_t
)0x00000800Ë

	)

3574 
	#RCC_CIR_PLLRDYIE
 ((
uöt32_t
)0x00001000Ë

	)

3575 
	#RCC_CIR_MSIRDYIE
 ((
uöt32_t
)0x00002000Ë

	)

3576 
	#RCC_CIR_LSECSSIE
 ((
uöt32_t
)0x00004000Ë

	)

3578 
	#RCC_CIR_LSIRDYC
 ((
uöt32_t
)0x00010000Ë

	)

3579 
	#RCC_CIR_LSERDYC
 ((
uöt32_t
)0x00020000Ë

	)

3580 
	#RCC_CIR_HSIRDYC
 ((
uöt32_t
)0x00040000Ë

	)

3581 
	#RCC_CIR_HSERDYC
 ((
uöt32_t
)0x00080000Ë

	)

3582 
	#RCC_CIR_PLLRDYC
 ((
uöt32_t
)0x00100000Ë

	)

3583 
	#RCC_CIR_MSIRDYC
 ((
uöt32_t
)0x00200000Ë

	)

3584 
	#RCC_CIR_LSECSSC
 ((
uöt32_t
)0x00400000Ë

	)

3585 
	#RCC_CIR_CSSC
 ((
uöt32_t
)0x00800000Ë

	)

3589 
	#RCC_AHBRSTR_GPIOARST
 ((
uöt32_t
)0x00000001Ë

	)

3590 
	#RCC_AHBRSTR_GPIOBRST
 ((
uöt32_t
)0x00000002Ë

	)

3591 
	#RCC_AHBRSTR_GPIOCRST
 ((
uöt32_t
)0x00000004Ë

	)

3592 
	#RCC_AHBRSTR_GPIODRST
 ((
uöt32_t
)0x00000008Ë

	)

3593 
	#RCC_AHBRSTR_GPIOERST
 ((
uöt32_t
)0x00000010Ë

	)

3594 
	#RCC_AHBRSTR_GPIOHRST
 ((
uöt32_t
)0x00000020Ë

	)

3595 
	#RCC_AHBRSTR_GPIOFRST
 ((
uöt32_t
)0x00000040Ë

	)

3596 
	#RCC_AHBRSTR_GPIOGRST
 ((
uöt32_t
)0x00000080Ë

	)

3597 
	#RCC_AHBRSTR_CRCRST
 ((
uöt32_t
)0x00001000Ë

	)

3598 
	#RCC_AHBRSTR_FLITFRST
 ((
uöt32_t
)0x00008000Ë

	)

3599 
	#RCC_AHBRSTR_DMA1RST
 ((
uöt32_t
)0x01000000Ë

	)

3600 
	#RCC_AHBRSTR_DMA2RST
 ((
uöt32_t
)0x02000000Ë

	)

3601 
	#RCC_AHBRSTR_AESRST
 ((
uöt32_t
)0x08000000Ë

	)

3602 
	#RCC_AHBRSTR_FSMCRST
 ((
uöt32_t
)0x40000000Ë

	)

3605 
	#RCC_APB2RSTR_SYSCFGRST
 ((
uöt32_t
)0x00000001Ë

	)

3606 
	#RCC_APB2RSTR_TIM9RST
 ((
uöt32_t
)0x00000004Ë

	)

3607 
	#RCC_APB2RSTR_TIM10RST
 ((
uöt32_t
)0x00000008Ë

	)

3608 
	#RCC_APB2RSTR_TIM11RST
 ((
uöt32_t
)0x00000010Ë

	)

3609 
	#RCC_APB2RSTR_ADC1RST
 ((
uöt32_t
)0x00000200Ë

	)

3610 
	#RCC_APB2RSTR_SDIORST
 ((
uöt32_t
)0x00000800Ë

	)

3611 
	#RCC_APB2RSTR_SPI1RST
 ((
uöt32_t
)0x00001000Ë

	)

3612 
	#RCC_APB2RSTR_USART1RST
 ((
uöt32_t
)0x00004000Ë

	)

3615 
	#RCC_APB1RSTR_TIM2RST
 ((
uöt32_t
)0x00000001Ë

	)

3616 
	#RCC_APB1RSTR_TIM3RST
 ((
uöt32_t
)0x00000002Ë

	)

3617 
	#RCC_APB1RSTR_TIM4RST
 ((
uöt32_t
)0x00000004Ë

	)

3618 
	#RCC_APB1RSTR_TIM5RST
 ((
uöt32_t
)0x00000008Ë

	)

3619 
	#RCC_APB1RSTR_TIM6RST
 ((
uöt32_t
)0x00000010Ë

	)

3620 
	#RCC_APB1RSTR_TIM7RST
 ((
uöt32_t
)0x00000020Ë

	)

3621 
	#RCC_APB1RSTR_LCDRST
 ((
uöt32_t
)0x00000200Ë

	)

3622 
	#RCC_APB1RSTR_WWDGRST
 ((
uöt32_t
)0x00000800Ë

	)

3623 
	#RCC_APB1RSTR_SPI2RST
 ((
uöt32_t
)0x00004000Ë

	)

3624 
	#RCC_APB1RSTR_SPI3RST
 ((
uöt32_t
)0x00008000Ë

	)

3625 
	#RCC_APB1RSTR_USART2RST
 ((
uöt32_t
)0x00020000Ë

	)

3626 
	#RCC_APB1RSTR_USART3RST
 ((
uöt32_t
)0x00040000Ë

	)

3627 
	#RCC_APB1RSTR_UART4RST
 ((
uöt32_t
)0x00080000Ë

	)

3628 
	#RCC_APB1RSTR_UART5RST
 ((
uöt32_t
)0x00100000Ë

	)

3629 
	#RCC_APB1RSTR_I2C1RST
 ((
uöt32_t
)0x00200000Ë

	)

3630 
	#RCC_APB1RSTR_I2C2RST
 ((
uöt32_t
)0x00400000Ë

	)

3631 
	#RCC_APB1RSTR_USBRST
 ((
uöt32_t
)0x00800000Ë

	)

3632 
	#RCC_APB1RSTR_PWRRST
 ((
uöt32_t
)0x10000000Ë

	)

3633 
	#RCC_APB1RSTR_DACRST
 ((
uöt32_t
)0x20000000Ë

	)

3634 
	#RCC_APB1RSTR_COMPRST
 ((
uöt32_t
)0x80000000Ë

	)

3637 
	#RCC_AHBENR_GPIOAEN
 ((
uöt32_t
)0x00000001Ë

	)

3638 
	#RCC_AHBENR_GPIOBEN
 ((
uöt32_t
)0x00000002Ë

	)

3639 
	#RCC_AHBENR_GPIOCEN
 ((
uöt32_t
)0x00000004Ë

	)

3640 
	#RCC_AHBENR_GPIODEN
 ((
uöt32_t
)0x00000008Ë

	)

3641 
	#RCC_AHBENR_GPIOEEN
 ((
uöt32_t
)0x00000010Ë

	)

3642 
	#RCC_AHBENR_GPIOHEN
 ((
uöt32_t
)0x00000020Ë

	)

3643 
	#RCC_AHBENR_GPIOFEN
 ((
uöt32_t
)0x00000040Ë

	)

3644 
	#RCC_AHBENR_GPIOGEN
 ((
uöt32_t
)0x00000080Ë

	)

3645 
	#RCC_AHBENR_CRCEN
 ((
uöt32_t
)0x00001000Ë

	)

3646 
	#RCC_AHBENR_FLITFEN
 ((
uöt32_t
)0x00008000Ë

	)

3648 
	#RCC_AHBENR_DMA1EN
 ((
uöt32_t
)0x01000000Ë

	)

3649 
	#RCC_AHBENR_DMA2EN
 ((
uöt32_t
)0x02000000Ë

	)

3650 
	#RCC_AHBENR_AESEN
 ((
uöt32_t
)0x08000000Ë

	)

3651 
	#RCC_AHBENR_FSMCEN
 ((
uöt32_t
)0x40000000Ë

	)

3655 
	#RCC_APB2ENR_SYSCFGEN
 ((
uöt32_t
)0x00000001Ë

	)

3656 
	#RCC_APB2ENR_TIM9EN
 ((
uöt32_t
)0x00000004Ë

	)

3657 
	#RCC_APB2ENR_TIM10EN
 ((
uöt32_t
)0x00000008Ë

	)

3658 
	#RCC_APB2ENR_TIM11EN
 ((
uöt32_t
)0x00000010Ë

	)

3659 
	#RCC_APB2ENR_ADC1EN
 ((
uöt32_t
)0x00000200Ë

	)

3660 
	#RCC_APB2ENR_SDIOEN
 ((
uöt32_t
)0x00000800Ë

	)

3661 
	#RCC_APB2ENR_SPI1EN
 ((
uöt32_t
)0x00001000Ë

	)

3662 
	#RCC_APB2ENR_USART1EN
 ((
uöt32_t
)0x00004000Ë

	)

3666 
	#RCC_APB1ENR_TIM2EN
 ((
uöt32_t
)0x00000001Ë

	)

3667 
	#RCC_APB1ENR_TIM3EN
 ((
uöt32_t
)0x00000002Ë

	)

3668 
	#RCC_APB1ENR_TIM4EN
 ((
uöt32_t
)0x00000004Ë

	)

3669 
	#RCC_APB1ENR_TIM5EN
 ((
uöt32_t
)0x00000008Ë

	)

3670 
	#RCC_APB1ENR_TIM6EN
 ((
uöt32_t
)0x00000010Ë

	)

3671 
	#RCC_APB1ENR_TIM7EN
 ((
uöt32_t
)0x00000020Ë

	)

3672 
	#RCC_APB1ENR_LCDEN
 ((
uöt32_t
)0x00000200Ë

	)

3673 
	#RCC_APB1ENR_WWDGEN
 ((
uöt32_t
)0x00000800Ë

	)

3674 
	#RCC_APB1ENR_SPI2EN
 ((
uöt32_t
)0x00004000Ë

	)

3675 
	#RCC_APB1ENR_SPI3EN
 ((
uöt32_t
)0x00008000Ë

	)

3676 
	#RCC_APB1ENR_USART2EN
 ((
uöt32_t
)0x00020000Ë

	)

3677 
	#RCC_APB1ENR_USART3EN
 ((
uöt32_t
)0x00040000Ë

	)

3678 
	#RCC_APB1ENR_UART4EN
 ((
uöt32_t
)0x00080000Ë

	)

3679 
	#RCC_APB1ENR_UART5EN
 ((
uöt32_t
)0x00100000Ë

	)

3680 
	#RCC_APB1ENR_I2C1EN
 ((
uöt32_t
)0x00200000Ë

	)

3681 
	#RCC_APB1ENR_I2C2EN
 ((
uöt32_t
)0x00400000Ë

	)

3682 
	#RCC_APB1ENR_USBEN
 ((
uöt32_t
)0x00800000Ë

	)

3683 
	#RCC_APB1ENR_PWREN
 ((
uöt32_t
)0x10000000Ë

	)

3684 
	#RCC_APB1ENR_DACEN
 ((
uöt32_t
)0x20000000Ë

	)

3685 
	#RCC_APB1ENR_COMPEN
 ((
uöt32_t
)0x80000000Ë

	)

3688 
	#RCC_AHBLPENR_GPIOALPEN
 ((
uöt32_t
)0x00000001Ë

	)

3689 
	#RCC_AHBLPENR_GPIOBLPEN
 ((
uöt32_t
)0x00000002Ë

	)

3690 
	#RCC_AHBLPENR_GPIOCLPEN
 ((
uöt32_t
)0x00000004Ë

	)

3691 
	#RCC_AHBLPENR_GPIODLPEN
 ((
uöt32_t
)0x00000008Ë

	)

3692 
	#RCC_AHBLPENR_GPIOELPEN
 ((
uöt32_t
)0x00000010Ë

	)

3693 
	#RCC_AHBLPENR_GPIOHLPEN
 ((
uöt32_t
)0x00000020Ë

	)

3694 
	#RCC_AHBLPENR_GPIOFLPEN
 ((
uöt32_t
)0x00000040Ë

	)

3695 
	#RCC_AHBLPENR_GPIOGLPEN
 ((
uöt32_t
)0x00000080Ë

	)

3696 
	#RCC_AHBLPENR_CRCLPEN
 ((
uöt32_t
)0x00001000Ë

	)

3697 
	#RCC_AHBLPENR_FLITFLPEN
 ((
uöt32_t
)0x00008000Ë

	)

3700 
	#RCC_AHBLPENR_SRAMLPEN
 ((
uöt32_t
)0x00010000Ë

	)

3701 
	#RCC_AHBLPENR_DMA1LPEN
 ((
uöt32_t
)0x01000000Ë

	)

3702 
	#RCC_AHBLPENR_DMA2LPEN
 ((
uöt32_t
)0x02000000Ë

	)

3703 
	#RCC_AHBLPENR_AESLPEN
 ((
uöt32_t
)0x08000000Ë

	)

3704 
	#RCC_AHBLPENR_FSMCLPEN
 ((
uöt32_t
)0x40000000Ë

	)

3707 
	#RCC_APB2LPENR_SYSCFGLPEN
 ((
uöt32_t
)0x00000001Ë

	)

3708 
	#RCC_APB2LPENR_TIM9LPEN
 ((
uöt32_t
)0x00000004Ë

	)

3709 
	#RCC_APB2LPENR_TIM10LPEN
 ((
uöt32_t
)0x00000008Ë

	)

3710 
	#RCC_APB2LPENR_TIM11LPEN
 ((
uöt32_t
)0x00000010Ë

	)

3711 
	#RCC_APB2LPENR_ADC1LPEN
 ((
uöt32_t
)0x00000200Ë

	)

3712 
	#RCC_APB2LPENR_SDIOLPEN
 ((
uöt32_t
)0x00000800Ë

	)

3713 
	#RCC_APB2LPENR_SPI1LPEN
 ((
uöt32_t
)0x00001000Ë

	)

3714 
	#RCC_APB2LPENR_USART1LPEN
 ((
uöt32_t
)0x00004000Ë

	)

3717 
	#RCC_APB1LPENR_TIM2LPEN
 ((
uöt32_t
)0x00000001Ë

	)

3718 
	#RCC_APB1LPENR_TIM3LPEN
 ((
uöt32_t
)0x00000002Ë

	)

3719 
	#RCC_APB1LPENR_TIM4LPEN
 ((
uöt32_t
)0x00000004Ë

	)

3720 
	#RCC_APB1LPENR_TIM5LPEN
 ((
uöt32_t
)0x00000008Ë

	)

3721 
	#RCC_APB1LPENR_TIM6LPEN
 ((
uöt32_t
)0x00000010Ë

	)

3722 
	#RCC_APB1LPENR_TIM7LPEN
 ((
uöt32_t
)0x00000020Ë

	)

3723 
	#RCC_APB1LPENR_LCDLPEN
 ((
uöt32_t
)0x00000200Ë

	)

3724 
	#RCC_APB1LPENR_WWDGLPEN
 ((
uöt32_t
)0x00000800Ë

	)

3725 
	#RCC_APB1LPENR_SPI2LPEN
 ((
uöt32_t
)0x00004000Ë

	)

3726 
	#RCC_APB1LPENR_SPI3LPEN
 ((
uöt32_t
)0x00008000Ë

	)

3727 
	#RCC_APB1LPENR_USART2LPEN
 ((
uöt32_t
)0x00020000Ë

	)

3728 
	#RCC_APB1LPENR_USART3LPEN
 ((
uöt32_t
)0x00040000Ë

	)

3729 
	#RCC_APB1LPENR_UART4LPEN
 ((
uöt32_t
)0x00080000Ë

	)

3730 
	#RCC_APB1LPENR_UART5LPEN
 ((
uöt32_t
)0x00100000Ë

	)

3731 
	#RCC_APB1LPENR_I2C1LPEN
 ((
uöt32_t
)0x00200000Ë

	)

3732 
	#RCC_APB1LPENR_I2C2LPEN
 ((
uöt32_t
)0x00400000Ë

	)

3733 
	#RCC_APB1LPENR_USBLPEN
 ((
uöt32_t
)0x00800000Ë

	)

3734 
	#RCC_APB1LPENR_PWRLPEN
 ((
uöt32_t
)0x10000000Ë

	)

3735 
	#RCC_APB1LPENR_DACLPEN
 ((
uöt32_t
)0x20000000Ë

	)

3736 
	#RCC_APB1LPENR_COMPLPEN
 ((
uöt32_t
)0x80000000Ë

	)

3739 
	#RCC_CSR_LSION
 ((
uöt32_t
)0x00000001Ë

	)

3740 
	#RCC_CSR_LSIRDY
 ((
uöt32_t
)0x00000002Ë

	)

3742 
	#RCC_CSR_LSEON
 ((
uöt32_t
)0x00000100Ë

	)

3743 
	#RCC_CSR_LSERDY
 ((
uöt32_t
)0x00000200Ë

	)

3744 
	#RCC_CSR_LSEBYP
 ((
uöt32_t
)0x00000400Ë

	)

3745 
	#RCC_CSR_LSECSSON
 ((
uöt32_t
)0x00000800Ë

	)

3746 
	#RCC_CSR_LSECSSD
 ((
uöt32_t
)0x00001000Ë

	)

3748 
	#RCC_CSR_RTCSEL
 ((
uöt32_t
)0x00030000Ë

	)

3749 
	#RCC_CSR_RTCSEL_0
 ((
uöt32_t
)0x00010000Ë

	)

3750 
	#RCC_CSR_RTCSEL_1
 ((
uöt32_t
)0x00020000Ë

	)

3753 
	#RCC_CSR_RTCSEL_NOCLOCK
 ((
uöt32_t
)0x00000000Ë

	)

3754 
	#RCC_CSR_RTCSEL_LSE
 ((
uöt32_t
)0x00010000Ë

	)

3755 
	#RCC_CSR_RTCSEL_LSI
 ((
uöt32_t
)0x00020000Ë

	)

3756 
	#RCC_CSR_RTCSEL_HSE
 ((
uöt32_t
)0x00030000Ë

	)

3758 
	#RCC_CSR_RTCEN
 ((
uöt32_t
)0x00400000Ë

	)

3759 
	#RCC_CSR_RTCRST
 ((
uöt32_t
)0x00800000Ë

	)

3761 
	#RCC_CSR_RMVF
 ((
uöt32_t
)0x01000000Ë

	)

3762 
	#RCC_CSR_OBLRSTF
 ((
uöt32_t
)0x02000000Ë

	)

3763 
	#RCC_CSR_PINRSTF
 ((
uöt32_t
)0x04000000Ë

	)

3764 
	#RCC_CSR_PORRSTF
 ((
uöt32_t
)0x08000000Ë

	)

3765 
	#RCC_CSR_SFTRSTF
 ((
uöt32_t
)0x10000000Ë

	)

3766 
	#RCC_CSR_IWDGRSTF
 ((
uöt32_t
)0x20000000Ë

	)

3767 
	#RCC_CSR_WWDGRSTF
 ((
uöt32_t
)0x40000000Ë

	)

3768 
	#RCC_CSR_LPWRRSTF
 ((
uöt32_t
)0x80000000Ë

	)

3777 
	#RTC_TR_PM
 ((
uöt32_t
)0x00400000)

	)

3778 
	#RTC_TR_HT
 ((
uöt32_t
)0x00300000)

	)

3779 
	#RTC_TR_HT_0
 ((
uöt32_t
)0x00100000)

	)

3780 
	#RTC_TR_HT_1
 ((
uöt32_t
)0x00200000)

	)

3781 
	#RTC_TR_HU
 ((
uöt32_t
)0x000F0000)

	)

3782 
	#RTC_TR_HU_0
 ((
uöt32_t
)0x00010000)

	)

3783 
	#RTC_TR_HU_1
 ((
uöt32_t
)0x00020000)

	)

3784 
	#RTC_TR_HU_2
 ((
uöt32_t
)0x00040000)

	)

3785 
	#RTC_TR_HU_3
 ((
uöt32_t
)0x00080000)

	)

3786 
	#RTC_TR_MNT
 ((
uöt32_t
)0x00007000)

	)

3787 
	#RTC_TR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

3788 
	#RTC_TR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

3789 
	#RTC_TR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

3790 
	#RTC_TR_MNU
 ((
uöt32_t
)0x00000F00)

	)

3791 
	#RTC_TR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

3792 
	#RTC_TR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

3793 
	#RTC_TR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

3794 
	#RTC_TR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

3795 
	#RTC_TR_ST
 ((
uöt32_t
)0x00000070)

	)

3796 
	#RTC_TR_ST_0
 ((
uöt32_t
)0x00000010)

	)

3797 
	#RTC_TR_ST_1
 ((
uöt32_t
)0x00000020)

	)

3798 
	#RTC_TR_ST_2
 ((
uöt32_t
)0x00000040)

	)

3799 
	#RTC_TR_SU
 ((
uöt32_t
)0x0000000F)

	)

3800 
	#RTC_TR_SU_0
 ((
uöt32_t
)0x00000001)

	)

3801 
	#RTC_TR_SU_1
 ((
uöt32_t
)0x00000002)

	)

3802 
	#RTC_TR_SU_2
 ((
uöt32_t
)0x00000004)

	)

3803 
	#RTC_TR_SU_3
 ((
uöt32_t
)0x00000008)

	)

3806 
	#RTC_DR_YT
 ((
uöt32_t
)0x00F00000)

	)

3807 
	#RTC_DR_YT_0
 ((
uöt32_t
)0x00100000)

	)

3808 
	#RTC_DR_YT_1
 ((
uöt32_t
)0x00200000)

	)

3809 
	#RTC_DR_YT_2
 ((
uöt32_t
)0x00400000)

	)

3810 
	#RTC_DR_YT_3
 ((
uöt32_t
)0x00800000)

	)

3811 
	#RTC_DR_YU
 ((
uöt32_t
)0x000F0000)

	)

3812 
	#RTC_DR_YU_0
 ((
uöt32_t
)0x00010000)

	)

3813 
	#RTC_DR_YU_1
 ((
uöt32_t
)0x00020000)

	)

3814 
	#RTC_DR_YU_2
 ((
uöt32_t
)0x00040000)

	)

3815 
	#RTC_DR_YU_3
 ((
uöt32_t
)0x00080000)

	)

3816 
	#RTC_DR_WDU
 ((
uöt32_t
)0x0000E000)

	)

3817 
	#RTC_DR_WDU_0
 ((
uöt32_t
)0x00002000)

	)

3818 
	#RTC_DR_WDU_1
 ((
uöt32_t
)0x00004000)

	)

3819 
	#RTC_DR_WDU_2
 ((
uöt32_t
)0x00008000)

	)

3820 
	#RTC_DR_MT
 ((
uöt32_t
)0x00001000)

	)

3821 
	#RTC_DR_MU
 ((
uöt32_t
)0x00000F00)

	)

3822 
	#RTC_DR_MU_0
 ((
uöt32_t
)0x00000100)

	)

3823 
	#RTC_DR_MU_1
 ((
uöt32_t
)0x00000200)

	)

3824 
	#RTC_DR_MU_2
 ((
uöt32_t
)0x00000400)

	)

3825 
	#RTC_DR_MU_3
 ((
uöt32_t
)0x00000800)

	)

3826 
	#RTC_DR_DT
 ((
uöt32_t
)0x00000030)

	)

3827 
	#RTC_DR_DT_0
 ((
uöt32_t
)0x00000010)

	)

3828 
	#RTC_DR_DT_1
 ((
uöt32_t
)0x00000020)

	)

3829 
	#RTC_DR_DU
 ((
uöt32_t
)0x0000000F)

	)

3830 
	#RTC_DR_DU_0
 ((
uöt32_t
)0x00000001)

	)

3831 
	#RTC_DR_DU_1
 ((
uöt32_t
)0x00000002)

	)

3832 
	#RTC_DR_DU_2
 ((
uöt32_t
)0x00000004)

	)

3833 
	#RTC_DR_DU_3
 ((
uöt32_t
)0x00000008)

	)

3836 
	#RTC_CR_COE
 ((
uöt32_t
)0x00800000)

	)

3837 
	#RTC_CR_OSEL
 ((
uöt32_t
)0x00600000)

	)

3838 
	#RTC_CR_OSEL_0
 ((
uöt32_t
)0x00200000)

	)

3839 
	#RTC_CR_OSEL_1
 ((
uöt32_t
)0x00400000)

	)

3840 
	#RTC_CR_POL
 ((
uöt32_t
)0x00100000)

	)

3841 
	#RTC_CR_COSEL
 ((
uöt32_t
)0x00080000)

	)

3842 
	#RTC_CR_BCK
 ((
uöt32_t
)0x00040000)

	)

3843 
	#RTC_CR_SUB1H
 ((
uöt32_t
)0x00020000)

	)

3844 
	#RTC_CR_ADD1H
 ((
uöt32_t
)0x00010000)

	)

3845 
	#RTC_CR_TSIE
 ((
uöt32_t
)0x00008000)

	)

3846 
	#RTC_CR_WUTIE
 ((
uöt32_t
)0x00004000)

	)

3847 
	#RTC_CR_ALRBIE
 ((
uöt32_t
)0x00002000)

	)

3848 
	#RTC_CR_ALRAIE
 ((
uöt32_t
)0x00001000)

	)

3849 
	#RTC_CR_TSE
 ((
uöt32_t
)0x00000800)

	)

3850 
	#RTC_CR_WUTE
 ((
uöt32_t
)0x00000400)

	)

3851 
	#RTC_CR_ALRBE
 ((
uöt32_t
)0x00000200)

	)

3852 
	#RTC_CR_ALRAE
 ((
uöt32_t
)0x00000100)

	)

3853 
	#RTC_CR_DCE
 ((
uöt32_t
)0x00000080)

	)

3854 
	#RTC_CR_FMT
 ((
uöt32_t
)0x00000040)

	)

3855 
	#RTC_CR_BYPSHAD
 ((
uöt32_t
)0x00000020)

	)

3856 
	#RTC_CR_REFCKON
 ((
uöt32_t
)0x00000010)

	)

3857 
	#RTC_CR_TSEDGE
 ((
uöt32_t
)0x00000008)

	)

3858 
	#RTC_CR_WUCKSEL
 ((
uöt32_t
)0x00000007)

	)

3859 
	#RTC_CR_WUCKSEL_0
 ((
uöt32_t
)0x00000001)

	)

3860 
	#RTC_CR_WUCKSEL_1
 ((
uöt32_t
)0x00000002)

	)

3861 
	#RTC_CR_WUCKSEL_2
 ((
uöt32_t
)0x00000004)

	)

3864 
	#RTC_ISR_RECALPF
 ((
uöt32_t
)0x00010000)

	)

3865 
	#RTC_ISR_TAMP3F
 ((
uöt32_t
)0x00008000)

	)

3866 
	#RTC_ISR_TAMP2F
 ((
uöt32_t
)0x00004000)

	)

3867 
	#RTC_ISR_TAMP1F
 ((
uöt32_t
)0x00002000)

	)

3868 
	#RTC_ISR_TSOVF
 ((
uöt32_t
)0x00001000)

	)

3869 
	#RTC_ISR_TSF
 ((
uöt32_t
)0x00000800)

	)

3870 
	#RTC_ISR_WUTF
 ((
uöt32_t
)0x00000400)

	)

3871 
	#RTC_ISR_ALRBF
 ((
uöt32_t
)0x00000200)

	)

3872 
	#RTC_ISR_ALRAF
 ((
uöt32_t
)0x00000100)

	)

3873 
	#RTC_ISR_INIT
 ((
uöt32_t
)0x00000080)

	)

3874 
	#RTC_ISR_INITF
 ((
uöt32_t
)0x00000040)

	)

3875 
	#RTC_ISR_RSF
 ((
uöt32_t
)0x00000020)

	)

3876 
	#RTC_ISR_INITS
 ((
uöt32_t
)0x00000010)

	)

3877 
	#RTC_ISR_SHPF
 ((
uöt32_t
)0x00000008)

	)

3878 
	#RTC_ISR_WUTWF
 ((
uöt32_t
)0x00000004)

	)

3879 
	#RTC_ISR_ALRBWF
 ((
uöt32_t
)0x00000002)

	)

3880 
	#RTC_ISR_ALRAWF
 ((
uöt32_t
)0x00000001)

	)

3883 
	#RTC_PRER_PREDIV_A
 ((
uöt32_t
)0x007F0000)

	)

3884 
	#RTC_PRER_PREDIV_S
 ((
uöt32_t
)0x00007FFF)

	)

3887 
	#RTC_WUTR_WUT
 ((
uöt32_t
)0x0000FFFF)

	)

3890 
	#RTC_CALIBR_DCS
 ((
uöt32_t
)0x00000080)

	)

3891 
	#RTC_CALIBR_DC
 ((
uöt32_t
)0x0000001F)

	)

3894 
	#RTC_ALRMAR_MSK4
 ((
uöt32_t
)0x80000000)

	)

3895 
	#RTC_ALRMAR_WDSEL
 ((
uöt32_t
)0x40000000)

	)

3896 
	#RTC_ALRMAR_DT
 ((
uöt32_t
)0x30000000)

	)

3897 
	#RTC_ALRMAR_DT_0
 ((
uöt32_t
)0x10000000)

	)

3898 
	#RTC_ALRMAR_DT_1
 ((
uöt32_t
)0x20000000)

	)

3899 
	#RTC_ALRMAR_DU
 ((
uöt32_t
)0x0F000000)

	)

3900 
	#RTC_ALRMAR_DU_0
 ((
uöt32_t
)0x01000000)

	)

3901 
	#RTC_ALRMAR_DU_1
 ((
uöt32_t
)0x02000000)

	)

3902 
	#RTC_ALRMAR_DU_2
 ((
uöt32_t
)0x04000000)

	)

3903 
	#RTC_ALRMAR_DU_3
 ((
uöt32_t
)0x08000000)

	)

3904 
	#RTC_ALRMAR_MSK3
 ((
uöt32_t
)0x00800000)

	)

3905 
	#RTC_ALRMAR_PM
 ((
uöt32_t
)0x00400000)

	)

3906 
	#RTC_ALRMAR_HT
 ((
uöt32_t
)0x00300000)

	)

3907 
	#RTC_ALRMAR_HT_0
 ((
uöt32_t
)0x00100000)

	)

3908 
	#RTC_ALRMAR_HT_1
 ((
uöt32_t
)0x00200000)

	)

3909 
	#RTC_ALRMAR_HU
 ((
uöt32_t
)0x000F0000)

	)

3910 
	#RTC_ALRMAR_HU_0
 ((
uöt32_t
)0x00010000)

	)

3911 
	#RTC_ALRMAR_HU_1
 ((
uöt32_t
)0x00020000)

	)

3912 
	#RTC_ALRMAR_HU_2
 ((
uöt32_t
)0x00040000)

	)

3913 
	#RTC_ALRMAR_HU_3
 ((
uöt32_t
)0x00080000)

	)

3914 
	#RTC_ALRMAR_MSK2
 ((
uöt32_t
)0x00008000)

	)

3915 
	#RTC_ALRMAR_MNT
 ((
uöt32_t
)0x00007000)

	)

3916 
	#RTC_ALRMAR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

3917 
	#RTC_ALRMAR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

3918 
	#RTC_ALRMAR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

3919 
	#RTC_ALRMAR_MNU
 ((
uöt32_t
)0x00000F00)

	)

3920 
	#RTC_ALRMAR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

3921 
	#RTC_ALRMAR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

3922 
	#RTC_ALRMAR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

3923 
	#RTC_ALRMAR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

3924 
	#RTC_ALRMAR_MSK1
 ((
uöt32_t
)0x00000080)

	)

3925 
	#RTC_ALRMAR_ST
 ((
uöt32_t
)0x00000070)

	)

3926 
	#RTC_ALRMAR_ST_0
 ((
uöt32_t
)0x00000010)

	)

3927 
	#RTC_ALRMAR_ST_1
 ((
uöt32_t
)0x00000020)

	)

3928 
	#RTC_ALRMAR_ST_2
 ((
uöt32_t
)0x00000040)

	)

3929 
	#RTC_ALRMAR_SU
 ((
uöt32_t
)0x0000000F)

	)

3930 
	#RTC_ALRMAR_SU_0
 ((
uöt32_t
)0x00000001)

	)

3931 
	#RTC_ALRMAR_SU_1
 ((
uöt32_t
)0x00000002)

	)

3932 
	#RTC_ALRMAR_SU_2
 ((
uöt32_t
)0x00000004)

	)

3933 
	#RTC_ALRMAR_SU_3
 ((
uöt32_t
)0x00000008)

	)

3936 
	#RTC_ALRMBR_MSK4
 ((
uöt32_t
)0x80000000)

	)

3937 
	#RTC_ALRMBR_WDSEL
 ((
uöt32_t
)0x40000000)

	)

3938 
	#RTC_ALRMBR_DT
 ((
uöt32_t
)0x30000000)

	)

3939 
	#RTC_ALRMBR_DT_0
 ((
uöt32_t
)0x10000000)

	)

3940 
	#RTC_ALRMBR_DT_1
 ((
uöt32_t
)0x20000000)

	)

3941 
	#RTC_ALRMBR_DU
 ((
uöt32_t
)0x0F000000)

	)

3942 
	#RTC_ALRMBR_DU_0
 ((
uöt32_t
)0x01000000)

	)

3943 
	#RTC_ALRMBR_DU_1
 ((
uöt32_t
)0x02000000)

	)

3944 
	#RTC_ALRMBR_DU_2
 ((
uöt32_t
)0x04000000)

	)

3945 
	#RTC_ALRMBR_DU_3
 ((
uöt32_t
)0x08000000)

	)

3946 
	#RTC_ALRMBR_MSK3
 ((
uöt32_t
)0x00800000)

	)

3947 
	#RTC_ALRMBR_PM
 ((
uöt32_t
)0x00400000)

	)

3948 
	#RTC_ALRMBR_HT
 ((
uöt32_t
)0x00300000)

	)

3949 
	#RTC_ALRMBR_HT_0
 ((
uöt32_t
)0x00100000)

	)

3950 
	#RTC_ALRMBR_HT_1
 ((
uöt32_t
)0x00200000)

	)

3951 
	#RTC_ALRMBR_HU
 ((
uöt32_t
)0x000F0000)

	)

3952 
	#RTC_ALRMBR_HU_0
 ((
uöt32_t
)0x00010000)

	)

3953 
	#RTC_ALRMBR_HU_1
 ((
uöt32_t
)0x00020000)

	)

3954 
	#RTC_ALRMBR_HU_2
 ((
uöt32_t
)0x00040000)

	)

3955 
	#RTC_ALRMBR_HU_3
 ((
uöt32_t
)0x00080000)

	)

3956 
	#RTC_ALRMBR_MSK2
 ((
uöt32_t
)0x00008000)

	)

3957 
	#RTC_ALRMBR_MNT
 ((
uöt32_t
)0x00007000)

	)

3958 
	#RTC_ALRMBR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

3959 
	#RTC_ALRMBR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

3960 
	#RTC_ALRMBR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

3961 
	#RTC_ALRMBR_MNU
 ((
uöt32_t
)0x00000F00)

	)

3962 
	#RTC_ALRMBR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

3963 
	#RTC_ALRMBR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

3964 
	#RTC_ALRMBR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

3965 
	#RTC_ALRMBR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

3966 
	#RTC_ALRMBR_MSK1
 ((
uöt32_t
)0x00000080)

	)

3967 
	#RTC_ALRMBR_ST
 ((
uöt32_t
)0x00000070)

	)

3968 
	#RTC_ALRMBR_ST_0
 ((
uöt32_t
)0x00000010)

	)

3969 
	#RTC_ALRMBR_ST_1
 ((
uöt32_t
)0x00000020)

	)

3970 
	#RTC_ALRMBR_ST_2
 ((
uöt32_t
)0x00000040)

	)

3971 
	#RTC_ALRMBR_SU
 ((
uöt32_t
)0x0000000F)

	)

3972 
	#RTC_ALRMBR_SU_0
 ((
uöt32_t
)0x00000001)

	)

3973 
	#RTC_ALRMBR_SU_1
 ((
uöt32_t
)0x00000002)

	)

3974 
	#RTC_ALRMBR_SU_2
 ((
uöt32_t
)0x00000004)

	)

3975 
	#RTC_ALRMBR_SU_3
 ((
uöt32_t
)0x00000008)

	)

3978 
	#RTC_WPR_KEY
 ((
uöt32_t
)0x000000FF)

	)

3981 
	#RTC_SSR_SS
 ((
uöt32_t
)0x0000FFFF)

	)

3984 
	#RTC_SHIFTR_SUBFS
 ((
uöt32_t
)0x00007FFF)

	)

3985 
	#RTC_SHIFTR_ADD1S
 ((
uöt32_t
)0x80000000)

	)

3988 
	#RTC_TSTR_PM
 ((
uöt32_t
)0x00400000)

	)

3989 
	#RTC_TSTR_HT
 ((
uöt32_t
)0x00300000)

	)

3990 
	#RTC_TSTR_HT_0
 ((
uöt32_t
)0x00100000)

	)

3991 
	#RTC_TSTR_HT_1
 ((
uöt32_t
)0x00200000)

	)

3992 
	#RTC_TSTR_HU
 ((
uöt32_t
)0x000F0000)

	)

3993 
	#RTC_TSTR_HU_0
 ((
uöt32_t
)0x00010000)

	)

3994 
	#RTC_TSTR_HU_1
 ((
uöt32_t
)0x00020000)

	)

3995 
	#RTC_TSTR_HU_2
 ((
uöt32_t
)0x00040000)

	)

3996 
	#RTC_TSTR_HU_3
 ((
uöt32_t
)0x00080000)

	)

3997 
	#RTC_TSTR_MNT
 ((
uöt32_t
)0x00007000)

	)

3998 
	#RTC_TSTR_MNT_0
 ((
uöt32_t
)0x00001000)

	)

3999 
	#RTC_TSTR_MNT_1
 ((
uöt32_t
)0x00002000)

	)

4000 
	#RTC_TSTR_MNT_2
 ((
uöt32_t
)0x00004000)

	)

4001 
	#RTC_TSTR_MNU
 ((
uöt32_t
)0x00000F00)

	)

4002 
	#RTC_TSTR_MNU_0
 ((
uöt32_t
)0x00000100)

	)

4003 
	#RTC_TSTR_MNU_1
 ((
uöt32_t
)0x00000200)

	)

4004 
	#RTC_TSTR_MNU_2
 ((
uöt32_t
)0x00000400)

	)

4005 
	#RTC_TSTR_MNU_3
 ((
uöt32_t
)0x00000800)

	)

4006 
	#RTC_TSTR_ST
 ((
uöt32_t
)0x00000070)

	)

4007 
	#RTC_TSTR_ST_0
 ((
uöt32_t
)0x00000010)

	)

4008 
	#RTC_TSTR_ST_1
 ((
uöt32_t
)0x00000020)

	)

4009 
	#RTC_TSTR_ST_2
 ((
uöt32_t
)0x00000040)

	)

4010 
	#RTC_TSTR_SU
 ((
uöt32_t
)0x0000000F)

	)

4011 
	#RTC_TSTR_SU_0
 ((
uöt32_t
)0x00000001)

	)

4012 
	#RTC_TSTR_SU_1
 ((
uöt32_t
)0x00000002)

	)

4013 
	#RTC_TSTR_SU_2
 ((
uöt32_t
)0x00000004)

	)

4014 
	#RTC_TSTR_SU_3
 ((
uöt32_t
)0x00000008)

	)

4017 
	#RTC_TSDR_WDU
 ((
uöt32_t
)0x0000E000)

	)

4018 
	#RTC_TSDR_WDU_0
 ((
uöt32_t
)0x00002000)

	)

4019 
	#RTC_TSDR_WDU_1
 ((
uöt32_t
)0x00004000)

	)

4020 
	#RTC_TSDR_WDU_2
 ((
uöt32_t
)0x00008000)

	)

4021 
	#RTC_TSDR_MT
 ((
uöt32_t
)0x00001000)

	)

4022 
	#RTC_TSDR_MU
 ((
uöt32_t
)0x00000F00)

	)

4023 
	#RTC_TSDR_MU_0
 ((
uöt32_t
)0x00000100)

	)

4024 
	#RTC_TSDR_MU_1
 ((
uöt32_t
)0x00000200)

	)

4025 
	#RTC_TSDR_MU_2
 ((
uöt32_t
)0x00000400)

	)

4026 
	#RTC_TSDR_MU_3
 ((
uöt32_t
)0x00000800)

	)

4027 
	#RTC_TSDR_DT
 ((
uöt32_t
)0x00000030)

	)

4028 
	#RTC_TSDR_DT_0
 ((
uöt32_t
)0x00000010)

	)

4029 
	#RTC_TSDR_DT_1
 ((
uöt32_t
)0x00000020)

	)

4030 
	#RTC_TSDR_DU
 ((
uöt32_t
)0x0000000F)

	)

4031 
	#RTC_TSDR_DU_0
 ((
uöt32_t
)0x00000001)

	)

4032 
	#RTC_TSDR_DU_1
 ((
uöt32_t
)0x00000002)

	)

4033 
	#RTC_TSDR_DU_2
 ((
uöt32_t
)0x00000004)

	)

4034 
	#RTC_TSDR_DU_3
 ((
uöt32_t
)0x00000008)

	)

4037 
	#RTC_TSSSR_SS
 ((
uöt32_t
)0x0000FFFF)

	)

4040 
	#RTC_CALR_CALP
 ((
uöt32_t
)0x00008000)

	)

4041 
	#RTC_CALR_CALW8
 ((
uöt32_t
)0x00004000)

	)

4042 
	#RTC_CALR_CALW16
 ((
uöt32_t
)0x00002000)

	)

4043 
	#RTC_CALR_CALM
 ((
uöt32_t
)0x000001FF)

	)

4044 
	#RTC_CALR_CALM_0
 ((
uöt32_t
)0x00000001)

	)

4045 
	#RTC_CALR_CALM_1
 ((
uöt32_t
)0x00000002)

	)

4046 
	#RTC_CALR_CALM_2
 ((
uöt32_t
)0x00000004)

	)

4047 
	#RTC_CALR_CALM_3
 ((
uöt32_t
)0x00000008)

	)

4048 
	#RTC_CALR_CALM_4
 ((
uöt32_t
)0x00000010)

	)

4049 
	#RTC_CALR_CALM_5
 ((
uöt32_t
)0x00000020)

	)

4050 
	#RTC_CALR_CALM_6
 ((
uöt32_t
)0x00000040)

	)

4051 
	#RTC_CALR_CALM_7
 ((
uöt32_t
)0x00000080)

	)

4052 
	#RTC_CALR_CALM_8
 ((
uöt32_t
)0x00000100)

	)

4055 
	#RTC_TAFCR_ALARMOUTTYPE
 ((
uöt32_t
)0x00040000)

	)

4056 
	#RTC_TAFCR_TAMPPUDIS
 ((
uöt32_t
)0x00008000)

	)

4057 
	#RTC_TAFCR_TAMPPRCH
 ((
uöt32_t
)0x00006000)

	)

4058 
	#RTC_TAFCR_TAMPPRCH_0
 ((
uöt32_t
)0x00002000)

	)

4059 
	#RTC_TAFCR_TAMPPRCH_1
 ((
uöt32_t
)0x00004000)

	)

4060 
	#RTC_TAFCR_TAMPFLT
 ((
uöt32_t
)0x00001800)

	)

4061 
	#RTC_TAFCR_TAMPFLT_0
 ((
uöt32_t
)0x00000800)

	)

4062 
	#RTC_TAFCR_TAMPFLT_1
 ((
uöt32_t
)0x00001000)

	)

4063 
	#RTC_TAFCR_TAMPFREQ
 ((
uöt32_t
)0x00000700)

	)

4064 
	#RTC_TAFCR_TAMPFREQ_0
 ((
uöt32_t
)0x00000100)

	)

4065 
	#RTC_TAFCR_TAMPFREQ_1
 ((
uöt32_t
)0x00000200)

	)

4066 
	#RTC_TAFCR_TAMPFREQ_2
 ((
uöt32_t
)0x00000400)

	)

4067 
	#RTC_TAFCR_TAMPTS
 ((
uöt32_t
)0x00000080)

	)

4068 
	#RTC_TAFCR_TAMP3TRG
 ((
uöt32_t
)0x00000040)

	)

4069 
	#RTC_TAFCR_TAMP3E
 ((
uöt32_t
)0x00000020)

	)

4070 
	#RTC_TAFCR_TAMP2TRG
 ((
uöt32_t
)0x00000010)

	)

4071 
	#RTC_TAFCR_TAMP2E
 ((
uöt32_t
)0x00000008)

	)

4072 
	#RTC_TAFCR_TAMPIE
 ((
uöt32_t
)0x00000004)

	)

4073 
	#RTC_TAFCR_TAMP1TRG
 ((
uöt32_t
)0x00000002)

	)

4074 
	#RTC_TAFCR_TAMP1E
 ((
uöt32_t
)0x00000001)

	)

4077 
	#RTC_ALRMASSR_MASKSS
 ((
uöt32_t
)0x0F000000)

	)

4078 
	#RTC_ALRMASSR_MASKSS_0
 ((
uöt32_t
)0x01000000)

	)

4079 
	#RTC_ALRMASSR_MASKSS_1
 ((
uöt32_t
)0x02000000)

	)

4080 
	#RTC_ALRMASSR_MASKSS_2
 ((
uöt32_t
)0x04000000)

	)

4081 
	#RTC_ALRMASSR_MASKSS_3
 ((
uöt32_t
)0x08000000)

	)

4082 
	#RTC_ALRMASSR_SS
 ((
uöt32_t
)0x00007FFF)

	)

4085 
	#RTC_ALRMBSSR_MASKSS
 ((
uöt32_t
)0x0F000000)

	)

4086 
	#RTC_ALRMBSSR_MASKSS_0
 ((
uöt32_t
)0x01000000)

	)

4087 
	#RTC_ALRMBSSR_MASKSS_1
 ((
uöt32_t
)0x02000000)

	)

4088 
	#RTC_ALRMBSSR_MASKSS_2
 ((
uöt32_t
)0x04000000)

	)

4089 
	#RTC_ALRMBSSR_MASKSS_3
 ((
uöt32_t
)0x08000000)

	)

4090 
	#RTC_ALRMBSSR_SS
 ((
uöt32_t
)0x00007FFF)

	)

4093 
	#RTC_BKP0R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4096 
	#RTC_BKP1R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4099 
	#RTC_BKP2R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4102 
	#RTC_BKP3R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4105 
	#RTC_BKP4R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4108 
	#RTC_BKP5R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4111 
	#RTC_BKP6R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4114 
	#RTC_BKP7R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4117 
	#RTC_BKP8R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4120 
	#RTC_BKP9R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4123 
	#RTC_BKP10R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4126 
	#RTC_BKP11R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4129 
	#RTC_BKP12R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4132 
	#RTC_BKP13R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4135 
	#RTC_BKP14R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4138 
	#RTC_BKP15R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4141 
	#RTC_BKP16R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4144 
	#RTC_BKP17R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4147 
	#RTC_BKP18R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4150 
	#RTC_BKP19R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4153 
	#RTC_BKP20R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4156 
	#RTC_BKP21R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4159 
	#RTC_BKP22R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4162 
	#RTC_BKP23R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4165 
	#RTC_BKP24R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4168 
	#RTC_BKP25R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4171 
	#RTC_BKP26R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4174 
	#RTC_BKP27R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4177 
	#RTC_BKP28R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4180 
	#RTC_BKP29R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4183 
	#RTC_BKP30R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4186 
	#RTC_BKP31R
 ((
uöt32_t
)0xFFFFFFFF)

	)

4195 
	#SDIO_POWER_PWRCTRL
 ((
uöt8_t
)0x03Ë

	)

4196 
	#SDIO_POWER_PWRCTRL_0
 ((
uöt8_t
)0x01Ë

	)

4197 
	#SDIO_POWER_PWRCTRL_1
 ((
uöt8_t
)0x02Ë

	)

4200 
	#SDIO_CLKCR_CLKDIV
 ((
uöt16_t
)0x00FFË

	)

4201 
	#SDIO_CLKCR_CLKEN
 ((
uöt16_t
)0x0100Ë

	)

4202 
	#SDIO_CLKCR_PWRSAV
 ((
uöt16_t
)0x0200Ë

	)

4203 
	#SDIO_CLKCR_BYPASS
 ((
uöt16_t
)0x0400Ë

	)

4205 
	#SDIO_CLKCR_WIDBUS
 ((
uöt16_t
)0x1800Ë

	)

4206 
	#SDIO_CLKCR_WIDBUS_0
 ((
uöt16_t
)0x0800Ë

	)

4207 
	#SDIO_CLKCR_WIDBUS_1
 ((
uöt16_t
)0x1000Ë

	)

4209 
	#SDIO_CLKCR_NEGEDGE
 ((
uöt16_t
)0x2000Ë

	)

4210 
	#SDIO_CLKCR_HWFC_EN
 ((
uöt16_t
)0x4000Ë

	)

4213 
	#SDIO_ARG_CMDARG
 ((
uöt32_t
)0xFFFFFFFFË

	)

4216 
	#SDIO_CMD_CMDINDEX
 ((
uöt16_t
)0x003FË

	)

4218 
	#SDIO_CMD_WAITRESP
 ((
uöt16_t
)0x00C0Ë

	)

4219 
	#SDIO_CMD_WAITRESP_0
 ((
uöt16_t
)0x0040Ë

	)

4220 
	#SDIO_CMD_WAITRESP_1
 ((
uöt16_t
)0x0080Ë

	)

4222 
	#SDIO_CMD_WAITINT
 ((
uöt16_t
)0x0100Ë

	)

4223 
	#SDIO_CMD_WAITPEND
 ((
uöt16_t
)0x0200Ë

	)

4224 
	#SDIO_CMD_CPSMEN
 ((
uöt16_t
)0x0400Ë

	)

4225 
	#SDIO_CMD_SDIOSUSPEND
 ((
uöt16_t
)0x0800Ë

	)

4226 
	#SDIO_CMD_ENCMDCOMPL
 ((
uöt16_t
)0x1000Ë

	)

4227 
	#SDIO_CMD_NIEN
 ((
uöt16_t
)0x2000Ë

	)

4228 
	#SDIO_CMD_CEATACMD
 ((
uöt16_t
)0x4000Ë

	)

4231 
	#SDIO_RESPCMD_RESPCMD
 ((
uöt8_t
)0x3FË

	)

4234 
	#SDIO_RESP0_CARDSTATUS0
 ((
uöt32_t
)0xFFFFFFFFË

	)

4237 
	#SDIO_RESP1_CARDSTATUS1
 ((
uöt32_t
)0xFFFFFFFFË

	)

4240 
	#SDIO_RESP2_CARDSTATUS2
 ((
uöt32_t
)0xFFFFFFFFË

	)

4243 
	#SDIO_RESP3_CARDSTATUS3
 ((
uöt32_t
)0xFFFFFFFFË

	)

4246 
	#SDIO_RESP4_CARDSTATUS4
 ((
uöt32_t
)0xFFFFFFFFË

	)

4249 
	#SDIO_DTIMER_DATATIME
 ((
uöt32_t
)0xFFFFFFFFË

	)

4252 
	#SDIO_DLEN_DATALENGTH
 ((
uöt32_t
)0x01FFFFFFË

	)

4255 
	#SDIO_DCTRL_DTEN
 ((
uöt16_t
)0x0001Ë

	)

4256 
	#SDIO_DCTRL_DTDIR
 ((
uöt16_t
)0x0002Ë

	)

4257 
	#SDIO_DCTRL_DTMODE
 ((
uöt16_t
)0x0004Ë

	)

4258 
	#SDIO_DCTRL_DMAEN
 ((
uöt16_t
)0x0008Ë

	)

4260 
	#SDIO_DCTRL_DBLOCKSIZE
 ((
uöt16_t
)0x00F0Ë

	)

4261 
	#SDIO_DCTRL_DBLOCKSIZE_0
 ((
uöt16_t
)0x0010Ë

	)

4262 
	#SDIO_DCTRL_DBLOCKSIZE_1
 ((
uöt16_t
)0x0020Ë

	)

4263 
	#SDIO_DCTRL_DBLOCKSIZE_2
 ((
uöt16_t
)0x0040Ë

	)

4264 
	#SDIO_DCTRL_DBLOCKSIZE_3
 ((
uöt16_t
)0x0080Ë

	)

4266 
	#SDIO_DCTRL_RWSTART
 ((
uöt16_t
)0x0100Ë

	)

4267 
	#SDIO_DCTRL_RWSTOP
 ((
uöt16_t
)0x0200Ë

	)

4268 
	#SDIO_DCTRL_RWMOD
 ((
uöt16_t
)0x0400Ë

	)

4269 
	#SDIO_DCTRL_SDIOEN
 ((
uöt16_t
)0x0800Ë

	)

4272 
	#SDIO_DCOUNT_DATACOUNT
 ((
uöt32_t
)0x01FFFFFFË

	)

4275 
	#SDIO_STA_CCRCFAIL
 ((
uöt32_t
)0x00000001Ë

	)

4276 
	#SDIO_STA_DCRCFAIL
 ((
uöt32_t
)0x00000002Ë

	)

4277 
	#SDIO_STA_CTIMEOUT
 ((
uöt32_t
)0x00000004Ë

	)

4278 
	#SDIO_STA_DTIMEOUT
 ((
uöt32_t
)0x00000008Ë

	)

4279 
	#SDIO_STA_TXUNDERR
 ((
uöt32_t
)0x00000010Ë

	)

4280 
	#SDIO_STA_RXOVERR
 ((
uöt32_t
)0x00000020Ë

	)

4281 
	#SDIO_STA_CMDREND
 ((
uöt32_t
)0x00000040Ë

	)

4282 
	#SDIO_STA_CMDSENT
 ((
uöt32_t
)0x00000080Ë

	)

4283 
	#SDIO_STA_DATAEND
 ((
uöt32_t
)0x00000100Ë

	)

4284 
	#SDIO_STA_STBITERR
 ((
uöt32_t
)0x00000200Ë

	)

4285 
	#SDIO_STA_DBCKEND
 ((
uöt32_t
)0x00000400Ë

	)

4286 
	#SDIO_STA_CMDACT
 ((
uöt32_t
)0x00000800Ë

	)

4287 
	#SDIO_STA_TXACT
 ((
uöt32_t
)0x00001000Ë

	)

4288 
	#SDIO_STA_RXACT
 ((
uöt32_t
)0x00002000Ë

	)

4289 
	#SDIO_STA_TXFIFOHE
 ((
uöt32_t
)0x00004000Ë

	)

4290 
	#SDIO_STA_RXFIFOHF
 ((
uöt32_t
)0x00008000Ë

	)

4291 
	#SDIO_STA_TXFIFOF
 ((
uöt32_t
)0x00010000Ë

	)

4292 
	#SDIO_STA_RXFIFOF
 ((
uöt32_t
)0x00020000Ë

	)

4293 
	#SDIO_STA_TXFIFOE
 ((
uöt32_t
)0x00040000Ë

	)

4294 
	#SDIO_STA_RXFIFOE
 ((
uöt32_t
)0x00080000Ë

	)

4295 
	#SDIO_STA_TXDAVL
 ((
uöt32_t
)0x00100000Ë

	)

4296 
	#SDIO_STA_RXDAVL
 ((
uöt32_t
)0x00200000Ë

	)

4297 
	#SDIO_STA_SDIOIT
 ((
uöt32_t
)0x00400000Ë

	)

4298 
	#SDIO_STA_CEATAEND
 ((
uöt32_t
)0x00800000Ë

	)

4301 
	#SDIO_ICR_CCRCFAILC
 ((
uöt32_t
)0x00000001Ë

	)

4302 
	#SDIO_ICR_DCRCFAILC
 ((
uöt32_t
)0x00000002Ë

	)

4303 
	#SDIO_ICR_CTIMEOUTC
 ((
uöt32_t
)0x00000004Ë

	)

4304 
	#SDIO_ICR_DTIMEOUTC
 ((
uöt32_t
)0x00000008Ë

	)

4305 
	#SDIO_ICR_TXUNDERRC
 ((
uöt32_t
)0x00000010Ë

	)

4306 
	#SDIO_ICR_RXOVERRC
 ((
uöt32_t
)0x00000020Ë

	)

4307 
	#SDIO_ICR_CMDRENDC
 ((
uöt32_t
)0x00000040Ë

	)

4308 
	#SDIO_ICR_CMDSENTC
 ((
uöt32_t
)0x00000080Ë

	)

4309 
	#SDIO_ICR_DATAENDC
 ((
uöt32_t
)0x00000100Ë

	)

4310 
	#SDIO_ICR_STBITERRC
 ((
uöt32_t
)0x00000200Ë

	)

4311 
	#SDIO_ICR_DBCKENDC
 ((
uöt32_t
)0x00000400Ë

	)

4312 
	#SDIO_ICR_SDIOITC
 ((
uöt32_t
)0x00400000Ë

	)

4313 
	#SDIO_ICR_CEATAENDC
 ((
uöt32_t
)0x00800000Ë

	)

4316 
	#SDIO_MASK_CCRCFAILIE
 ((
uöt32_t
)0x00000001Ë

	)

4317 
	#SDIO_MASK_DCRCFAILIE
 ((
uöt32_t
)0x00000002Ë

	)

4318 
	#SDIO_MASK_CTIMEOUTIE
 ((
uöt32_t
)0x00000004Ë

	)

4319 
	#SDIO_MASK_DTIMEOUTIE
 ((
uöt32_t
)0x00000008Ë

	)

4320 
	#SDIO_MASK_TXUNDERRIE
 ((
uöt32_t
)0x00000010Ë

	)

4321 
	#SDIO_MASK_RXOVERRIE
 ((
uöt32_t
)0x00000020Ë

	)

4322 
	#SDIO_MASK_CMDRENDIE
 ((
uöt32_t
)0x00000040Ë

	)

4323 
	#SDIO_MASK_CMDSENTIE
 ((
uöt32_t
)0x00000080Ë

	)

4324 
	#SDIO_MASK_DATAENDIE
 ((
uöt32_t
)0x00000100Ë

	)

4325 
	#SDIO_MASK_STBITERRIE
 ((
uöt32_t
)0x00000200Ë

	)

4326 
	#SDIO_MASK_DBCKENDIE
 ((
uöt32_t
)0x00000400Ë

	)

4327 
	#SDIO_MASK_CMDACTIE
 ((
uöt32_t
)0x00000800Ë

	)

4328 
	#SDIO_MASK_TXACTIE
 ((
uöt32_t
)0x00001000Ë

	)

4329 
	#SDIO_MASK_RXACTIE
 ((
uöt32_t
)0x00002000Ë

	)

4330 
	#SDIO_MASK_TXFIFOHEIE
 ((
uöt32_t
)0x00004000Ë

	)

4331 
	#SDIO_MASK_RXFIFOHFIE
 ((
uöt32_t
)0x00008000Ë

	)

4332 
	#SDIO_MASK_TXFIFOFIE
 ((
uöt32_t
)0x00010000Ë

	)

4333 
	#SDIO_MASK_RXFIFOFIE
 ((
uöt32_t
)0x00020000Ë

	)

4334 
	#SDIO_MASK_TXFIFOEIE
 ((
uöt32_t
)0x00040000Ë

	)

4335 
	#SDIO_MASK_RXFIFOEIE
 ((
uöt32_t
)0x00080000Ë

	)

4336 
	#SDIO_MASK_TXDAVLIE
 ((
uöt32_t
)0x00100000Ë

	)

4337 
	#SDIO_MASK_RXDAVLIE
 ((
uöt32_t
)0x00200000Ë

	)

4338 
	#SDIO_MASK_SDIOITIE
 ((
uöt32_t
)0x00400000Ë

	)

4339 
	#SDIO_MASK_CEATAENDIE
 ((
uöt32_t
)0x00800000Ë

	)

4342 
	#SDIO_FIFOCNT_FIFOCOUNT
 ((
uöt32_t
)0x00FFFFFFË

	)

4345 
	#SDIO_FIFO_FIFODATA
 ((
uöt32_t
)0xFFFFFFFFË

	)

4354 
	#SPI_CR1_CPHA
 ((
uöt16_t
)0x0001Ë

	)

4355 
	#SPI_CR1_CPOL
 ((
uöt16_t
)0x0002Ë

	)

4356 
	#SPI_CR1_MSTR
 ((
uöt16_t
)0x0004Ë

	)

4358 
	#SPI_CR1_BR
 ((
uöt16_t
)0x0038Ë

	)

4359 
	#SPI_CR1_BR_0
 ((
uöt16_t
)0x0008Ë

	)

4360 
	#SPI_CR1_BR_1
 ((
uöt16_t
)0x0010Ë

	)

4361 
	#SPI_CR1_BR_2
 ((
uöt16_t
)0x0020Ë

	)

4363 
	#SPI_CR1_SPE
 ((
uöt16_t
)0x0040Ë

	)

4364 
	#SPI_CR1_LSBFIRST
 ((
uöt16_t
)0x0080Ë

	)

4365 
	#SPI_CR1_SSI
 ((
uöt16_t
)0x0100Ë

	)

4366 
	#SPI_CR1_SSM
 ((
uöt16_t
)0x0200Ë

	)

4367 
	#SPI_CR1_RXONLY
 ((
uöt16_t
)0x0400Ë

	)

4368 
	#SPI_CR1_DFF
 ((
uöt16_t
)0x0800Ë

	)

4369 
	#SPI_CR1_CRCNEXT
 ((
uöt16_t
)0x1000Ë

	)

4370 
	#SPI_CR1_CRCEN
 ((
uöt16_t
)0x2000Ë

	)

4371 
	#SPI_CR1_BIDIOE
 ((
uöt16_t
)0x4000Ë

	)

4372 
	#SPI_CR1_BIDIMODE
 ((
uöt16_t
)0x8000Ë

	)

4375 
	#SPI_CR2_RXDMAEN
 ((
uöt8_t
)0x01Ë

	)

4376 
	#SPI_CR2_TXDMAEN
 ((
uöt8_t
)0x02Ë

	)

4377 
	#SPI_CR2_SSOE
 ((
uöt8_t
)0x04Ë

	)

4378 
	#SPI_CR2_FRF
 ((
uöt8_t
)0x08Ë

	)

4379 
	#SPI_CR2_ERRIE
 ((
uöt8_t
)0x20Ë

	)

4380 
	#SPI_CR2_RXNEIE
 ((
uöt8_t
)0x40Ë

	)

4381 
	#SPI_CR2_TXEIE
 ((
uöt8_t
)0x80Ë

	)

4384 
	#SPI_SR_RXNE
 ((
uöt8_t
)0x01Ë

	)

4385 
	#SPI_SR_TXE
 ((
uöt8_t
)0x02Ë

	)

4386 
	#SPI_SR_CHSIDE
 ((
uöt8_t
)0x04Ë

	)

4387 
	#SPI_SR_UDR
 ((
uöt8_t
)0x08Ë

	)

4388 
	#SPI_SR_CRCERR
 ((
uöt8_t
)0x10Ë

	)

4389 
	#SPI_SR_MODF
 ((
uöt8_t
)0x20Ë

	)

4390 
	#SPI_SR_OVR
 ((
uöt8_t
)0x40Ë

	)

4391 
	#SPI_SR_BSY
 ((
uöt8_t
)0x80Ë

	)

4394 
	#SPI_DR_DR
 ((
uöt16_t
)0xFFFFË

	)

4397 
	#SPI_CRCPR_CRCPOLY
 ((
uöt16_t
)0xFFFFË

	)

4400 
	#SPI_RXCRCR_RXCRC
 ((
uöt16_t
)0xFFFFË

	)

4403 
	#SPI_TXCRCR_TXCRC
 ((
uöt16_t
)0xFFFFË

	)

4406 
	#SPI_I2SCFGR_CHLEN
 ((
uöt16_t
)0x0001Ë

	)

4408 
	#SPI_I2SCFGR_DATLEN
 ((
uöt16_t
)0x0006Ë

	)

4409 
	#SPI_I2SCFGR_DATLEN_0
 ((
uöt16_t
)0x0002Ë

	)

4410 
	#SPI_I2SCFGR_DATLEN_1
 ((
uöt16_t
)0x0004Ë

	)

4412 
	#SPI_I2SCFGR_CKPOL
 ((
uöt16_t
)0x0008Ë

	)

4414 
	#SPI_I2SCFGR_I2SSTD
 ((
uöt16_t
)0x0030Ë

	)

4415 
	#SPI_I2SCFGR_I2SSTD_0
 ((
uöt16_t
)0x0010Ë

	)

4416 
	#SPI_I2SCFGR_I2SSTD_1
 ((
uöt16_t
)0x0020Ë

	)

4418 
	#SPI_I2SCFGR_PCMSYNC
 ((
uöt16_t
)0x0080Ë

	)

4420 
	#SPI_I2SCFGR_I2SCFG
 ((
uöt16_t
)0x0300Ë

	)

4421 
	#SPI_I2SCFGR_I2SCFG_0
 ((
uöt16_t
)0x0100Ë

	)

4422 
	#SPI_I2SCFGR_I2SCFG_1
 ((
uöt16_t
)0x0200Ë

	)

4424 
	#SPI_I2SCFGR_I2SE
 ((
uöt16_t
)0x0400Ë

	)

4425 
	#SPI_I2SCFGR_I2SMOD
 ((
uöt16_t
)0x0800Ë

	)

4428 
	#SPI_I2SPR_I2SDIV
 ((
uöt16_t
)0x00FFË

	)

4429 
	#SPI_I2SPR_ODD
 ((
uöt16_t
)0x0100Ë

	)

4430 
	#SPI_I2SPR_MCKOE
 ((
uöt16_t
)0x0200Ë

	)

4438 
	#SYSCFG_MEMRMP_MEM_MODE
 ((
uöt32_t
)0x00000003Ë

	)

4439 
	#SYSCFG_MEMRMP_MEM_MODE_0
 ((
uöt32_t
)0x00000001Ë

	)

4440 
	#SYSCFG_MEMRMP_MEM_MODE_1
 ((
uöt32_t
)0x00000002Ë

	)

4441 
	#SYSCFG_MEMRMP_BOOT_MODE
 ((
uöt32_t
)0x00000300Ë

	)

4442 
	#SYSCFG_MEMRMP_BOOT_MODE_0
 ((
uöt32_t
)0x00000100Ë

	)

4443 
	#SYSCFG_MEMRMP_BOOT_MODE_1
 ((
uöt32_t
)0x00000200Ë

	)

4446 
	#SYSCFG_PMC_USB_PU
 ((
uöt32_t
)0x00000001Ë

	)

4449 
	#SYSCFG_EXTICR1_EXTI0
 ((
uöt16_t
)0x000FË

	)

4450 
	#SYSCFG_EXTICR1_EXTI1
 ((
uöt16_t
)0x00F0Ë

	)

4451 
	#SYSCFG_EXTICR1_EXTI2
 ((
uöt16_t
)0x0F00Ë

	)

4452 
	#SYSCFG_EXTICR1_EXTI3
 ((
uöt16_t
)0xF000Ë

	)

4457 
	#SYSCFG_EXTICR1_EXTI0_PA
 ((
uöt16_t
)0x0000Ë

	)

4458 
	#SYSCFG_EXTICR1_EXTI0_PB
 ((
uöt16_t
)0x0001Ë

	)

4459 
	#SYSCFG_EXTICR1_EXTI0_PC
 ((
uöt16_t
)0x0002Ë

	)

4460 
	#SYSCFG_EXTICR1_EXTI0_PD
 ((
uöt16_t
)0x0003Ë

	)

4461 
	#SYSCFG_EXTICR1_EXTI0_PE
 ((
uöt16_t
)0x0004Ë

	)

4462 
	#SYSCFG_EXTICR1_EXTI0_PH
 ((
uöt16_t
)0x0005Ë

	)

4463 
	#SYSCFG_EXTICR1_EXTI0_PF
 ((
uöt16_t
)0x0006Ë

	)

4464 
	#SYSCFG_EXTICR1_EXTI0_PG
 ((
uöt16_t
)0x0007Ë

	)

4469 
	#SYSCFG_EXTICR1_EXTI1_PA
 ((
uöt16_t
)0x0000Ë

	)

4470 
	#SYSCFG_EXTICR1_EXTI1_PB
 ((
uöt16_t
)0x0010Ë

	)

4471 
	#SYSCFG_EXTICR1_EXTI1_PC
 ((
uöt16_t
)0x0020Ë

	)

4472 
	#SYSCFG_EXTICR1_EXTI1_PD
 ((
uöt16_t
)0x0030Ë

	)

4473 
	#SYSCFG_EXTICR1_EXTI1_PE
 ((
uöt16_t
)0x0040Ë

	)

4474 
	#SYSCFG_EXTICR1_EXTI1_PH
 ((
uöt16_t
)0x0050Ë

	)

4475 
	#SYSCFG_EXTICR1_EXTI1_PF
 ((
uöt16_t
)0x0060Ë

	)

4476 
	#SYSCFG_EXTICR1_EXTI1_PG
 ((
uöt16_t
)0x0070Ë

	)

4481 
	#SYSCFG_EXTICR1_EXTI2_PA
 ((
uöt16_t
)0x0000Ë

	)

4482 
	#SYSCFG_EXTICR1_EXTI2_PB
 ((
uöt16_t
)0x0100Ë

	)

4483 
	#SYSCFG_EXTICR1_EXTI2_PC
 ((
uöt16_t
)0x0200Ë

	)

4484 
	#SYSCFG_EXTICR1_EXTI2_PD
 ((
uöt16_t
)0x0300Ë

	)

4485 
	#SYSCFG_EXTICR1_EXTI2_PE
 ((
uöt16_t
)0x0400Ë

	)

4486 
	#SYSCFG_EXTICR1_EXTI2_PH
 ((
uöt16_t
)0x0500Ë

	)

4487 
	#SYSCFG_EXTICR1_EXTI2_PF
 ((
uöt16_t
)0x0600Ë

	)

4488 
	#SYSCFG_EXTICR1_EXTI2_PG
 ((
uöt16_t
)0x0700Ë

	)

4493 
	#SYSCFG_EXTICR1_EXTI3_PA
 ((
uöt16_t
)0x0000Ë

	)

4494 
	#SYSCFG_EXTICR1_EXTI3_PB
 ((
uöt16_t
)0x1000Ë

	)

4495 
	#SYSCFG_EXTICR1_EXTI3_PC
 ((
uöt16_t
)0x2000Ë

	)

4496 
	#SYSCFG_EXTICR1_EXTI3_PD
 ((
uöt16_t
)0x3000Ë

	)

4497 
	#SYSCFG_EXTICR1_EXTI3_PE
 ((
uöt16_t
)0x4000Ë

	)

4498 
	#SYSCFG_EXTICR1_EXTI3_PF
 ((
uöt16_t
)0x3000Ë

	)

4499 
	#SYSCFG_EXTICR1_EXTI3_PG
 ((
uöt16_t
)0x4000Ë

	)

4502 
	#SYSCFG_EXTICR2_EXTI4
 ((
uöt16_t
)0x000FË

	)

4503 
	#SYSCFG_EXTICR2_EXTI5
 ((
uöt16_t
)0x00F0Ë

	)

4504 
	#SYSCFG_EXTICR2_EXTI6
 ((
uöt16_t
)0x0F00Ë

	)

4505 
	#SYSCFG_EXTICR2_EXTI7
 ((
uöt16_t
)0xF000Ë

	)

4510 
	#SYSCFG_EXTICR2_EXTI4_PA
 ((
uöt16_t
)0x0000Ë

	)

4511 
	#SYSCFG_EXTICR2_EXTI4_PB
 ((
uöt16_t
)0x0001Ë

	)

4512 
	#SYSCFG_EXTICR2_EXTI4_PC
 ((
uöt16_t
)0x0002Ë

	)

4513 
	#SYSCFG_EXTICR2_EXTI4_PD
 ((
uöt16_t
)0x0003Ë

	)

4514 
	#SYSCFG_EXTICR2_EXTI4_PE
 ((
uöt16_t
)0x0004Ë

	)

4515 
	#SYSCFG_EXTICR2_EXTI4_PF
 ((
uöt16_t
)0x0006Ë

	)

4516 
	#SYSCFG_EXTICR2_EXTI4_PG
 ((
uöt16_t
)0x0007Ë

	)

4521 
	#SYSCFG_EXTICR2_EXTI5_PA
 ((
uöt16_t
)0x0000Ë

	)

4522 
	#SYSCFG_EXTICR2_EXTI5_PB
 ((
uöt16_t
)0x0010Ë

	)

4523 
	#SYSCFG_EXTICR2_EXTI5_PC
 ((
uöt16_t
)0x0020Ë

	)

4524 
	#SYSCFG_EXTICR2_EXTI5_PD
 ((
uöt16_t
)0x0030Ë

	)

4525 
	#SYSCFG_EXTICR2_EXTI5_PE
 ((
uöt16_t
)0x0040Ë

	)

4526 
	#SYSCFG_EXTICR2_EXTI5_PF
 ((
uöt16_t
)0x0060Ë

	)

4527 
	#SYSCFG_EXTICR2_EXTI5_PG
 ((
uöt16_t
)0x0070Ë

	)

4532 
	#SYSCFG_EXTICR2_EXTI6_PA
 ((
uöt16_t
)0x0000Ë

	)

4533 
	#SYSCFG_EXTICR2_EXTI6_PB
 ((
uöt16_t
)0x0100Ë

	)

4534 
	#SYSCFG_EXTICR2_EXTI6_PC
 ((
uöt16_t
)0x0200Ë

	)

4535 
	#SYSCFG_EXTICR2_EXTI6_PD
 ((
uöt16_t
)0x0300Ë

	)

4536 
	#SYSCFG_EXTICR2_EXTI6_PE
 ((
uöt16_t
)0x0400Ë

	)

4537 
	#SYSCFG_EXTICR2_EXTI6_PF
 ((
uöt16_t
)0x0600Ë

	)

4538 
	#SYSCFG_EXTICR2_EXTI6_PG
 ((
uöt16_t
)0x0700Ë

	)

4543 
	#SYSCFG_EXTICR2_EXTI7_PA
 ((
uöt16_t
)0x0000Ë

	)

4544 
	#SYSCFG_EXTICR2_EXTI7_PB
 ((
uöt16_t
)0x1000Ë

	)

4545 
	#SYSCFG_EXTICR2_EXTI7_PC
 ((
uöt16_t
)0x2000Ë

	)

4546 
	#SYSCFG_EXTICR2_EXTI7_PD
 ((
uöt16_t
)0x3000Ë

	)

4547 
	#SYSCFG_EXTICR2_EXTI7_PE
 ((
uöt16_t
)0x4000Ë

	)

4548 
	#SYSCFG_EXTICR2_EXTI7_PF
 ((
uöt16_t
)0x6000Ë

	)

4549 
	#SYSCFG_EXTICR2_EXTI7_PG
 ((
uöt16_t
)0x7000Ë

	)

4552 
	#SYSCFG_EXTICR3_EXTI8
 ((
uöt16_t
)0x000FË

	)

4553 
	#SYSCFG_EXTICR3_EXTI9
 ((
uöt16_t
)0x00F0Ë

	)

4554 
	#SYSCFG_EXTICR3_EXTI10
 ((
uöt16_t
)0x0F00Ë

	)

4555 
	#SYSCFG_EXTICR3_EXTI11
 ((
uöt16_t
)0xF000Ë

	)

4560 
	#SYSCFG_EXTICR3_EXTI8_PA
 ((
uöt16_t
)0x0000Ë

	)

4561 
	#SYSCFG_EXTICR3_EXTI8_PB
 ((
uöt16_t
)0x0001Ë

	)

4562 
	#SYSCFG_EXTICR3_EXTI8_PC
 ((
uöt16_t
)0x0002Ë

	)

4563 
	#SYSCFG_EXTICR3_EXTI8_PD
 ((
uöt16_t
)0x0003Ë

	)

4564 
	#SYSCFG_EXTICR3_EXTI8_PE
 ((
uöt16_t
)0x0004Ë

	)

4565 
	#SYSCFG_EXTICR3_EXTI8_PF
 ((
uöt16_t
)0x0006Ë

	)

4566 
	#SYSCFG_EXTICR3_EXTI8_PG
 ((
uöt16_t
)0x0007Ë

	)

4571 
	#SYSCFG_EXTICR3_EXTI9_PA
 ((
uöt16_t
)0x0000Ë

	)

4572 
	#SYSCFG_EXTICR3_EXTI9_PB
 ((
uöt16_t
)0x0010Ë

	)

4573 
	#SYSCFG_EXTICR3_EXTI9_PC
 ((
uöt16_t
)0x0020Ë

	)

4574 
	#SYSCFG_EXTICR3_EXTI9_PD
 ((
uöt16_t
)0x0030Ë

	)

4575 
	#SYSCFG_EXTICR3_EXTI9_PE
 ((
uöt16_t
)0x0040Ë

	)

4576 
	#SYSCFG_EXTICR3_EXTI9_PF
 ((
uöt16_t
)0x0060Ë

	)

4577 
	#SYSCFG_EXTICR3_EXTI9_PG
 ((
uöt16_t
)0x0070Ë

	)

4582 
	#SYSCFG_EXTICR3_EXTI10_PA
 ((
uöt16_t
)0x0000Ë

	)

4583 
	#SYSCFG_EXTICR3_EXTI10_PB
 ((
uöt16_t
)0x0100Ë

	)

4584 
	#SYSCFG_EXTICR3_EXTI10_PC
 ((
uöt16_t
)0x0200Ë

	)

4585 
	#SYSCFG_EXTICR3_EXTI10_PD
 ((
uöt16_t
)0x0300Ë

	)

4586 
	#SYSCFG_EXTICR3_EXTI10_PE
 ((
uöt16_t
)0x0400Ë

	)

4587 
	#SYSCFG_EXTICR3_EXTI10_PF
 ((
uöt16_t
)0x0600Ë

	)

4588 
	#SYSCFG_EXTICR3_EXTI10_PG
 ((
uöt16_t
)0x0700Ë

	)

4593 
	#SYSCFG_EXTICR3_EXTI11_PA
 ((
uöt16_t
)0x0000Ë

	)

4594 
	#SYSCFG_EXTICR3_EXTI11_PB
 ((
uöt16_t
)0x1000Ë

	)

4595 
	#SYSCFG_EXTICR3_EXTI11_PC
 ((
uöt16_t
)0x2000Ë

	)

4596 
	#SYSCFG_EXTICR3_EXTI11_PD
 ((
uöt16_t
)0x3000Ë

	)

4597 
	#SYSCFG_EXTICR3_EXTI11_PE
 ((
uöt16_t
)0x4000Ë

	)

4598 
	#SYSCFG_EXTICR3_EXTI11_PF
 ((
uöt16_t
)0x6000Ë

	)

4599 
	#SYSCFG_EXTICR3_EXTI11_PG
 ((
uöt16_t
)0x7000Ë

	)

4602 
	#SYSCFG_EXTICR4_EXTI12
 ((
uöt16_t
)0x000FË

	)

4603 
	#SYSCFG_EXTICR4_EXTI13
 ((
uöt16_t
)0x00F0Ë

	)

4604 
	#SYSCFG_EXTICR4_EXTI14
 ((
uöt16_t
)0x0F00Ë

	)

4605 
	#SYSCFG_EXTICR4_EXTI15
 ((
uöt16_t
)0xF000Ë

	)

4610 
	#SYSCFG_EXTICR4_EXTI12_PA
 ((
uöt16_t
)0x0000Ë

	)

4611 
	#SYSCFG_EXTICR4_EXTI12_PB
 ((
uöt16_t
)0x0001Ë

	)

4612 
	#SYSCFG_EXTICR4_EXTI12_PC
 ((
uöt16_t
)0x0002Ë

	)

4613 
	#SYSCFG_EXTICR4_EXTI12_PD
 ((
uöt16_t
)0x0003Ë

	)

4614 
	#SYSCFG_EXTICR4_EXTI12_PE
 ((
uöt16_t
)0x0004Ë

	)

4615 
	#SYSCFG_EXTICR4_EXTI12_PF
 ((
uöt16_t
)0x0006Ë

	)

4616 
	#SYSCFG_EXTICR4_EXTI12_PG
 ((
uöt16_t
)0x0007Ë

	)

4621 
	#SYSCFG_EXTICR4_EXTI13_PA
 ((
uöt16_t
)0x0000Ë

	)

4622 
	#SYSCFG_EXTICR4_EXTI13_PB
 ((
uöt16_t
)0x0010Ë

	)

4623 
	#SYSCFG_EXTICR4_EXTI13_PC
 ((
uöt16_t
)0x0020Ë

	)

4624 
	#SYSCFG_EXTICR4_EXTI13_PD
 ((
uöt16_t
)0x0030Ë

	)

4625 
	#SYSCFG_EXTICR4_EXTI13_PE
 ((
uöt16_t
)0x0040Ë

	)

4626 
	#SYSCFG_EXTICR4_EXTI13_PF
 ((
uöt16_t
)0x0060Ë

	)

4627 
	#SYSCFG_EXTICR4_EXTI13_PG
 ((
uöt16_t
)0x0070Ë

	)

4632 
	#SYSCFG_EXTICR4_EXTI14_PA
 ((
uöt16_t
)0x0000Ë

	)

4633 
	#SYSCFG_EXTICR4_EXTI14_PB
 ((
uöt16_t
)0x0100Ë

	)

4634 
	#SYSCFG_EXTICR4_EXTI14_PC
 ((
uöt16_t
)0x0200Ë

	)

4635 
	#SYSCFG_EXTICR4_EXTI14_PD
 ((
uöt16_t
)0x0300Ë

	)

4636 
	#SYSCFG_EXTICR4_EXTI14_PE
 ((
uöt16_t
)0x0400Ë

	)

4637 
	#SYSCFG_EXTICR4_EXTI14_PF
 ((
uöt16_t
)0x0600Ë

	)

4638 
	#SYSCFG_EXTICR4_EXTI14_PG
 ((
uöt16_t
)0x0700Ë

	)

4643 
	#SYSCFG_EXTICR4_EXTI15_PA
 ((
uöt16_t
)0x0000Ë

	)

4644 
	#SYSCFG_EXTICR4_EXTI15_PB
 ((
uöt16_t
)0x1000Ë

	)

4645 
	#SYSCFG_EXTICR4_EXTI15_PC
 ((
uöt16_t
)0x2000Ë

	)

4646 
	#SYSCFG_EXTICR4_EXTI15_PD
 ((
uöt16_t
)0x3000Ë

	)

4647 
	#SYSCFG_EXTICR4_EXTI15_PE
 ((
uöt16_t
)0x4000Ë

	)

4648 
	#SYSCFG_EXTICR4_EXTI15_PF
 ((
uöt16_t
)0x6000Ë

	)

4649 
	#SYSCFG_EXTICR4_EXTI15_PG
 ((
uöt16_t
)0x7000Ë

	)

4658 
	#RI_ICR_IC1Z
 ((
uöt32_t
)0x0000000FË

	)

4659 
	#RI_ICR_IC1Z_0
 ((
uöt32_t
)0x00000001Ë

	)

4660 
	#RI_ICR_IC1Z_1
 ((
uöt32_t
)0x00000002Ë

	)

4661 
	#RI_ICR_IC1Z_2
 ((
uöt32_t
)0x00000004Ë

	)

4662 
	#RI_ICR_IC1Z_3
 ((
uöt32_t
)0x00000008Ë

	)

4664 
	#RI_ICR_IC2Z
 ((
uöt32_t
)0x000000F0Ë

	)

4665 
	#RI_ICR_IC2Z_0
 ((
uöt32_t
)0x00000010Ë

	)

4666 
	#RI_ICR_IC2Z_1
 ((
uöt32_t
)0x00000020Ë

	)

4667 
	#RI_ICR_IC2Z_2
 ((
uöt32_t
)0x00000040Ë

	)

4668 
	#RI_ICR_IC2Z_3
 ((
uöt32_t
)0x00000080Ë

	)

4670 
	#RI_ICR_IC3Z
 ((
uöt32_t
)0x00000F00Ë

	)

4671 
	#RI_ICR_IC3Z_0
 ((
uöt32_t
)0x00000100Ë

	)

4672 
	#RI_ICR_IC3Z_1
 ((
uöt32_t
)0x00000200Ë

	)

4673 
	#RI_ICR_IC3Z_2
 ((
uöt32_t
)0x00000400Ë

	)

4674 
	#RI_ICR_IC3Z_3
 ((
uöt32_t
)0x00000800Ë

	)

4676 
	#RI_ICR_IC4Z
 ((
uöt32_t
)0x0000F000Ë

	)

4677 
	#RI_ICR_IC4Z_0
 ((
uöt32_t
)0x00001000Ë

	)

4678 
	#RI_ICR_IC4Z_1
 ((
uöt32_t
)0x00002000Ë

	)

4679 
	#RI_ICR_IC4Z_2
 ((
uöt32_t
)0x00004000Ë

	)

4680 
	#RI_ICR_IC4Z_3
 ((
uöt32_t
)0x00008000Ë

	)

4682 
	#RI_ICR_TIM
 ((
uöt32_t
)0x00030000Ë

	)

4683 
	#RI_ICR_TIM_0
 ((
uöt32_t
)0x00010000Ë

	)

4684 
	#RI_ICR_TIM_1
 ((
uöt32_t
)0x00020000Ë

	)

4686 
	#RI_ICR_IC1
 ((
uöt32_t
)0x00040000Ë

	)

4687 
	#RI_ICR_IC2
 ((
uöt32_t
)0x00080000Ë

	)

4688 
	#RI_ICR_IC3
 ((
uöt32_t
)0x00100000Ë

	)

4689 
	#RI_ICR_IC4
 ((
uöt32_t
)0x00200000Ë

	)

4692 
	#RI_ASCR1_CH
 ((
uöt32_t
)0x03FCFFFFË

	)

4693 
	#RI_ASCR1_CH_0
 ((
uöt32_t
)0x00000001Ë

	)

4694 
	#RI_ASCR1_CH_1
 ((
uöt32_t
)0x00000002Ë

	)

4695 
	#RI_ASCR1_CH_2
 ((
uöt32_t
)0x00000004Ë

	)

4696 
	#RI_ASCR1_CH_3
 ((
uöt32_t
)0x00000008Ë

	)

4697 
	#RI_ASCR1_CH_4
 ((
uöt32_t
)0x00000010Ë

	)

4698 
	#RI_ASCR1_CH_5
 ((
uöt32_t
)0x00000020Ë

	)

4699 
	#RI_ASCR1_CH_6
 ((
uöt32_t
)0x00000040Ë

	)

4700 
	#RI_ASCR1_CH_7
 ((
uöt32_t
)0x00000080Ë

	)

4701 
	#RI_ASCR1_CH_8
 ((
uöt32_t
)0x00000100Ë

	)

4702 
	#RI_ASCR1_CH_9
 ((
uöt32_t
)0x00000200Ë

	)

4703 
	#RI_ASCR1_CH_10
 ((
uöt32_t
)0x00000400Ë

	)

4704 
	#RI_ASCR1_CH_11
 ((
uöt32_t
)0x00000800Ë

	)

4705 
	#RI_ASCR1_CH_12
 ((
uöt32_t
)0x00001000Ë

	)

4706 
	#RI_ASCR1_CH_13
 ((
uöt32_t
)0x00002000Ë

	)

4707 
	#RI_ASCR1_CH_14
 ((
uöt32_t
)0x00004000Ë

	)

4708 
	#RI_ASCR1_CH_15
 ((
uöt32_t
)0x00008000Ë

	)

4709 
	#RI_ASCR1_CH_31
 ((
uöt32_t
)0x00010000Ë

	)

4710 
	#RI_ASCR1_CH_18
 ((
uöt32_t
)0x00040000Ë

	)

4711 
	#RI_ASCR1_CH_19
 ((
uöt32_t
)0x00080000Ë

	)

4712 
	#RI_ASCR1_CH_20
 ((
uöt32_t
)0x00100000Ë

	)

4713 
	#RI_ASCR1_CH_21
 ((
uöt32_t
)0x00200000Ë

	)

4714 
	#RI_ASCR1_CH_22
 ((
uöt32_t
)0x00400000Ë

	)

4715 
	#RI_ASCR1_CH_23
 ((
uöt32_t
)0x00800000Ë

	)

4716 
	#RI_ASCR1_CH_24
 ((
uöt32_t
)0x01000000Ë

	)

4717 
	#RI_ASCR1_CH_25
 ((
uöt32_t
)0x02000000Ë

	)

4718 
	#RI_ASCR1_VCOMP
 ((
uöt32_t
)0x04000000Ë

	)

4719 
	#RI_ASCR1_CH_27
 ((
uöt32_t
)0x00400000Ë

	)

4720 
	#RI_ASCR1_CH_28
 ((
uöt32_t
)0x00800000Ë

	)

4721 
	#RI_ASCR1_CH_29
 ((
uöt32_t
)0x01000000Ë

	)

4722 
	#RI_ASCR1_CH_30
 ((
uöt32_t
)0x02000000Ë

	)

4723 
	#RI_ASCR1_SCM
 ((
uöt32_t
)0x80000000Ë

	)

4726 
	#RI_ASCR2_GR10_1
 ((
uöt32_t
)0x00000001Ë

	)

4727 
	#RI_ASCR2_GR10_2
 ((
uöt32_t
)0x00000002Ë

	)

4728 
	#RI_ASCR2_GR10_3
 ((
uöt32_t
)0x00000004Ë

	)

4729 
	#RI_ASCR2_GR10_4
 ((
uöt32_t
)0x00000008Ë

	)

4730 
	#RI_ASCR2_GR6_1
 ((
uöt32_t
)0x00000010Ë

	)

4731 
	#RI_ASCR2_GR6_2
 ((
uöt32_t
)0x00000020Ë

	)

4732 
	#RI_ASCR2_GR5_1
 ((
uöt32_t
)0x00000040Ë

	)

4733 
	#RI_ASCR2_GR5_2
 ((
uöt32_t
)0x00000080Ë

	)

4734 
	#RI_ASCR2_GR5_3
 ((
uöt32_t
)0x00000100Ë

	)

4735 
	#RI_ASCR2_GR4_1
 ((
uöt32_t
)0x00000200Ë

	)

4736 
	#RI_ASCR2_GR4_2
 ((
uöt32_t
)0x00000400Ë

	)

4737 
	#RI_ASCR2_GR4_3
 ((
uöt32_t
)0x00000800Ë

	)

4738 
	#RI_ASCR2_GR4_4
 ((
uöt32_t
)0x00008000Ë

	)

4739 
	#RI_ASCR2_CH0b
 ((
uöt32_t
)0x00010000Ë

	)

4740 
	#RI_ASCR2_CH1b
 ((
uöt32_t
)0x00020000Ë

	)

4741 
	#RI_ASCR2_CH2b
 ((
uöt32_t
)0x00040000Ë

	)

4742 
	#RI_ASCR2_CH3b
 ((
uöt32_t
)0x00080000Ë

	)

4743 
	#RI_ASCR2_CH6b
 ((
uöt32_t
)0x00100000Ë

	)

4744 
	#RI_ASCR2_CH7b
 ((
uöt32_t
)0x00200000Ë

	)

4745 
	#RI_ASCR2_CH8b
 ((
uöt32_t
)0x00400000Ë

	)

4746 
	#RI_ASCR2_CH9b
 ((
uöt32_t
)0x00800000Ë

	)

4747 
	#RI_ASCR2_CH10b
 ((
uöt32_t
)0x01000000Ë

	)

4748 
	#RI_ASCR2_CH11b
 ((
uöt32_t
)0x02000000Ë

	)

4749 
	#RI_ASCR2_CH12b
 ((
uöt32_t
)0x04000000Ë

	)

4750 
	#RI_ASCR2_GR6_3
 ((
uöt32_t
)0x08000000Ë

	)

4751 
	#RI_ASCR2_GR6_4
 ((
uöt32_t
)0x10000000Ë

	)

4752 
	#RI_ASCR2_GR5_4
 ((
uöt32_t
)0x20000000Ë

	)

4755 
	#RI_HYSCR1_PA
 ((
uöt32_t
)0x0000FFFFË

	)

4756 
	#RI_HYSCR1_PA_0
 ((
uöt32_t
)0x00000001Ë

	)

4757 
	#RI_HYSCR1_PA_1
 ((
uöt32_t
)0x00000002Ë

	)

4758 
	#RI_HYSCR1_PA_2
 ((
uöt32_t
)0x00000004Ë

	)

4759 
	#RI_HYSCR1_PA_3
 ((
uöt32_t
)0x00000008Ë

	)

4760 
	#RI_HYSCR1_PA_4
 ((
uöt32_t
)0x00000010Ë

	)

4761 
	#RI_HYSCR1_PA_5
 ((
uöt32_t
)0x00000020Ë

	)

4762 
	#RI_HYSCR1_PA_6
 ((
uöt32_t
)0x00000040Ë

	)

4763 
	#RI_HYSCR1_PA_7
 ((
uöt32_t
)0x00000080Ë

	)

4764 
	#RI_HYSCR1_PA_8
 ((
uöt32_t
)0x00000100Ë

	)

4765 
	#RI_HYSCR1_PA_9
 ((
uöt32_t
)0x00000200Ë

	)

4766 
	#RI_HYSCR1_PA_10
 ((
uöt32_t
)0x00000400Ë

	)

4767 
	#RI_HYSCR1_PA_11
 ((
uöt32_t
)0x00000800Ë

	)

4768 
	#RI_HYSCR1_PA_12
 ((
uöt32_t
)0x00001000Ë

	)

4769 
	#RI_HYSCR1_PA_13
 ((
uöt32_t
)0x00002000Ë

	)

4770 
	#RI_HYSCR1_PA_14
 ((
uöt32_t
)0x00004000Ë

	)

4771 
	#RI_HYSCR1_PA_15
 ((
uöt32_t
)0x00008000Ë

	)

4773 
	#RI_HYSCR1_PB
 ((
uöt32_t
)0xFFFF0000Ë

	)

4774 
	#RI_HYSCR1_PB_0
 ((
uöt32_t
)0x00010000Ë

	)

4775 
	#RI_HYSCR1_PB_1
 ((
uöt32_t
)0x00020000Ë

	)

4776 
	#RI_HYSCR1_PB_2
 ((
uöt32_t
)0x00040000Ë

	)

4777 
	#RI_HYSCR1_PB_3
 ((
uöt32_t
)0x00080000Ë

	)

4778 
	#RI_HYSCR1_PB_4
 ((
uöt32_t
)0x00100000Ë

	)

4779 
	#RI_HYSCR1_PB_5
 ((
uöt32_t
)0x00200000Ë

	)

4780 
	#RI_HYSCR1_PB_6
 ((
uöt32_t
)0x00400000Ë

	)

4781 
	#RI_HYSCR1_PB_7
 ((
uöt32_t
)0x00800000Ë

	)

4782 
	#RI_HYSCR1_PB_8
 ((
uöt32_t
)0x01000000Ë

	)

4783 
	#RI_HYSCR1_PB_9
 ((
uöt32_t
)0x02000000Ë

	)

4784 
	#RI_HYSCR1_PB_10
 ((
uöt32_t
)0x04000000Ë

	)

4785 
	#RI_HYSCR1_PB_11
 ((
uöt32_t
)0x08000000Ë

	)

4786 
	#RI_HYSCR1_PB_12
 ((
uöt32_t
)0x10000000Ë

	)

4787 
	#RI_HYSCR1_PB_13
 ((
uöt32_t
)0x20000000Ë

	)

4788 
	#RI_HYSCR1_PB_14
 ((
uöt32_t
)0x40000000Ë

	)

4789 
	#RI_HYSCR1_PB_15
 ((
uöt32_t
)0x80000000Ë

	)

4792 
	#RI_HYSCR2_PC
 ((
uöt32_t
)0x0000FFFFË

	)

4793 
	#RI_HYSCR2_PC_0
 ((
uöt32_t
)0x00000001Ë

	)

4794 
	#RI_HYSCR2_PC_1
 ((
uöt32_t
)0x00000002Ë

	)

4795 
	#RI_HYSCR2_PC_2
 ((
uöt32_t
)0x00000004Ë

	)

4796 
	#RI_HYSCR2_PC_3
 ((
uöt32_t
)0x00000008Ë

	)

4797 
	#RI_HYSCR2_PC_4
 ((
uöt32_t
)0x00000010Ë

	)

4798 
	#RI_HYSCR2_PC_5
 ((
uöt32_t
)0x00000020Ë

	)

4799 
	#RI_HYSCR2_PC_6
 ((
uöt32_t
)0x00000040Ë

	)

4800 
	#RI_HYSCR2_PC_7
 ((
uöt32_t
)0x00000080Ë

	)

4801 
	#RI_HYSCR2_PC_8
 ((
uöt32_t
)0x00000100Ë

	)

4802 
	#RI_HYSCR2_PC_9
 ((
uöt32_t
)0x00000200Ë

	)

4803 
	#RI_HYSCR2_PC_10
 ((
uöt32_t
)0x00000400Ë

	)

4804 
	#RI_HYSCR2_PC_11
 ((
uöt32_t
)0x00000800Ë

	)

4805 
	#RI_HYSCR2_PC_12
 ((
uöt32_t
)0x00001000Ë

	)

4806 
	#RI_HYSCR2_PC_13
 ((
uöt32_t
)0x00002000Ë

	)

4807 
	#RI_HYSCR2_PC_14
 ((
uöt32_t
)0x00004000Ë

	)

4808 
	#RI_HYSCR2_PC_15
 ((
uöt32_t
)0x00008000Ë

	)

4810 
	#RI_HYSCR2_PD
 ((
uöt32_t
)0xFFFF0000Ë

	)

4811 
	#RI_HYSCR2_PD_0
 ((
uöt32_t
)0x00010000Ë

	)

4812 
	#RI_HYSCR2_PD_1
 ((
uöt32_t
)0x00020000Ë

	)

4813 
	#RI_HYSCR2_PD_2
 ((
uöt32_t
)0x00040000Ë

	)

4814 
	#RI_HYSCR2_PD_3
 ((
uöt32_t
)0x00080000Ë

	)

4815 
	#RI_HYSCR2_PD_4
 ((
uöt32_t
)0x00100000Ë

	)

4816 
	#RI_HYSCR2_PD_5
 ((
uöt32_t
)0x00200000Ë

	)

4817 
	#RI_HYSCR2_PD_6
 ((
uöt32_t
)0x00400000Ë

	)

4818 
	#RI_HYSCR2_PD_7
 ((
uöt32_t
)0x00800000Ë

	)

4819 
	#RI_HYSCR2_PD_8
 ((
uöt32_t
)0x01000000Ë

	)

4820 
	#RI_HYSCR2_PD_9
 ((
uöt32_t
)0x02000000Ë

	)

4821 
	#RI_HYSCR2_PD_10
 ((
uöt32_t
)0x04000000Ë

	)

4822 
	#RI_HYSCR2_PD_11
 ((
uöt32_t
)0x08000000Ë

	)

4823 
	#RI_HYSCR2_PD_12
 ((
uöt32_t
)0x10000000Ë

	)

4824 
	#RI_HYSCR2_PD_13
 ((
uöt32_t
)0x20000000Ë

	)

4825 
	#RI_HYSCR2_PD_14
 ((
uöt32_t
)0x40000000Ë

	)

4826 
	#RI_HYSCR2_PD_15
 ((
uöt32_t
)0x80000000Ë

	)

4829 
	#RI_HYSCR2_PE
 ((
uöt32_t
)0x0000FFFFË

	)

4830 
	#RI_HYSCR2_PE_0
 ((
uöt32_t
)0x00000001Ë

	)

4831 
	#RI_HYSCR2_PE_1
 ((
uöt32_t
)0x00000002Ë

	)

4832 
	#RI_HYSCR2_PE_2
 ((
uöt32_t
)0x00000004Ë

	)

4833 
	#RI_HYSCR2_PE_3
 ((
uöt32_t
)0x00000008Ë

	)

4834 
	#RI_HYSCR2_PE_4
 ((
uöt32_t
)0x00000010Ë

	)

4835 
	#RI_HYSCR2_PE_5
 ((
uöt32_t
)0x00000020Ë

	)

4836 
	#RI_HYSCR2_PE_6
 ((
uöt32_t
)0x00000040Ë

	)

4837 
	#RI_HYSCR2_PE_7
 ((
uöt32_t
)0x00000080Ë

	)

4838 
	#RI_HYSCR2_PE_8
 ((
uöt32_t
)0x00000100Ë

	)

4839 
	#RI_HYSCR2_PE_9
 ((
uöt32_t
)0x00000200Ë

	)

4840 
	#RI_HYSCR2_PE_10
 ((
uöt32_t
)0x00000400Ë

	)

4841 
	#RI_HYSCR2_PE_11
 ((
uöt32_t
)0x00000800Ë

	)

4842 
	#RI_HYSCR2_PE_12
 ((
uöt32_t
)0x00001000Ë

	)

4843 
	#RI_HYSCR2_PE_13
 ((
uöt32_t
)0x00002000Ë

	)

4844 
	#RI_HYSCR2_PE_14
 ((
uöt32_t
)0x00004000Ë

	)

4845 
	#RI_HYSCR2_PE_15
 ((
uöt32_t
)0x00008000Ë

	)

4847 
	#RI_HYSCR3_PF
 ((
uöt32_t
)0xFFFF0000Ë

	)

4848 
	#RI_HYSCR3_PF_0
 ((
uöt32_t
)0x00010000Ë

	)

4849 
	#RI_HYSCR3_PF_1
 ((
uöt32_t
)0x00020000Ë

	)

4850 
	#RI_HYSCR3_PF_2
 ((
uöt32_t
)0x00040000Ë

	)

4851 
	#RI_HYSCR3_PF_3
 ((
uöt32_t
)0x00080000Ë

	)

4852 
	#RI_HYSCR3_PF_4
 ((
uöt32_t
)0x00100000Ë

	)

4853 
	#RI_HYSCR3_PF_5
 ((
uöt32_t
)0x00200000Ë

	)

4854 
	#RI_HYSCR3_PF_6
 ((
uöt32_t
)0x00400000Ë

	)

4855 
	#RI_HYSCR3_PF_7
 ((
uöt32_t
)0x00800000Ë

	)

4856 
	#RI_HYSCR3_PF_8
 ((
uöt32_t
)0x01000000Ë

	)

4857 
	#RI_HYSCR3_PF_9
 ((
uöt32_t
)0x02000000Ë

	)

4858 
	#RI_HYSCR3_PF_10
 ((
uöt32_t
)0x04000000Ë

	)

4859 
	#RI_HYSCR3_PF_11
 ((
uöt32_t
)0x08000000Ë

	)

4860 
	#RI_HYSCR3_PF_12
 ((
uöt32_t
)0x10000000Ë

	)

4861 
	#RI_HYSCR3_PF_13
 ((
uöt32_t
)0x20000000Ë

	)

4862 
	#RI_HYSCR3_PF_14
 ((
uöt32_t
)0x40000000Ë

	)

4863 
	#RI_HYSCR3_PF_15
 ((
uöt32_t
)0x80000000Ë

	)

4866 
	#RI_HYSCR4_PG
 ((
uöt32_t
)0x0000FFFFË

	)

4867 
	#RI_HYSCR4_PG_0
 ((
uöt32_t
)0x00000001Ë

	)

4868 
	#RI_HYSCR4_PG_1
 ((
uöt32_t
)0x00000002Ë

	)

4869 
	#RI_HYSCR4_PG_2
 ((
uöt32_t
)0x00000004Ë

	)

4870 
	#RI_HYSCR4_PG_3
 ((
uöt32_t
)0x00000008Ë

	)

4871 
	#RI_HYSCR4_PG_4
 ((
uöt32_t
)0x00000010Ë

	)

4872 
	#RI_HYSCR4_PG_5
 ((
uöt32_t
)0x00000020Ë

	)

4873 
	#RI_HYSCR4_PG_6
 ((
uöt32_t
)0x00000040Ë

	)

4874 
	#RI_HYSCR4_PG_7
 ((
uöt32_t
)0x00000080Ë

	)

4875 
	#RI_HYSCR4_PG_8
 ((
uöt32_t
)0x00000100Ë

	)

4876 
	#RI_HYSCR4_PG_9
 ((
uöt32_t
)0x00000200Ë

	)

4877 
	#RI_HYSCR4_PG_10
 ((
uöt32_t
)0x00000400Ë

	)

4878 
	#RI_HYSCR4_PG_11
 ((
uöt32_t
)0x00000800Ë

	)

4879 
	#RI_HYSCR4_PG_12
 ((
uöt32_t
)0x00001000Ë

	)

4880 
	#RI_HYSCR4_PG_13
 ((
uöt32_t
)0x00002000Ë

	)

4881 
	#RI_HYSCR4_PG_14
 ((
uöt32_t
)0x00004000Ë

	)

4882 
	#RI_HYSCR4_PG_15
 ((
uöt32_t
)0x00008000Ë

	)

4891 
	#TIM_CR1_CEN
 ((
uöt16_t
)0x0001Ë

	)

4892 
	#TIM_CR1_UDIS
 ((
uöt16_t
)0x0002Ë

	)

4893 
	#TIM_CR1_URS
 ((
uöt16_t
)0x0004Ë

	)

4894 
	#TIM_CR1_OPM
 ((
uöt16_t
)0x0008Ë

	)

4895 
	#TIM_CR1_DIR
 ((
uöt16_t
)0x0010Ë

	)

4897 
	#TIM_CR1_CMS
 ((
uöt16_t
)0x0060Ë

	)

4898 
	#TIM_CR1_CMS_0
 ((
uöt16_t
)0x0020Ë

	)

4899 
	#TIM_CR1_CMS_1
 ((
uöt16_t
)0x0040Ë

	)

4901 
	#TIM_CR1_ARPE
 ((
uöt16_t
)0x0080Ë

	)

4903 
	#TIM_CR1_CKD
 ((
uöt16_t
)0x0300Ë

	)

4904 
	#TIM_CR1_CKD_0
 ((
uöt16_t
)0x0100Ë

	)

4905 
	#TIM_CR1_CKD_1
 ((
uöt16_t
)0x0200Ë

	)

4908 
	#TIM_CR2_CCDS
 ((
uöt16_t
)0x0008Ë

	)

4910 
	#TIM_CR2_MMS
 ((
uöt16_t
)0x0070Ë

	)

4911 
	#TIM_CR2_MMS_0
 ((
uöt16_t
)0x0010Ë

	)

4912 
	#TIM_CR2_MMS_1
 ((
uöt16_t
)0x0020Ë

	)

4913 
	#TIM_CR2_MMS_2
 ((
uöt16_t
)0x0040Ë

	)

4915 
	#TIM_CR2_TI1S
 ((
uöt16_t
)0x0080Ë

	)

4918 
	#TIM_SMCR_SMS
 ((
uöt16_t
)0x0007Ë

	)

4919 
	#TIM_SMCR_SMS_0
 ((
uöt16_t
)0x0001Ë

	)

4920 
	#TIM_SMCR_SMS_1
 ((
uöt16_t
)0x0002Ë

	)

4921 
	#TIM_SMCR_SMS_2
 ((
uöt16_t
)0x0004Ë

	)

4923 
	#TIM_SMCR_OCCS
 ((
uöt16_t
)0x0008Ë

	)

4925 
	#TIM_SMCR_TS
 ((
uöt16_t
)0x0070Ë

	)

4926 
	#TIM_SMCR_TS_0
 ((
uöt16_t
)0x0010Ë

	)

4927 
	#TIM_SMCR_TS_1
 ((
uöt16_t
)0x0020Ë

	)

4928 
	#TIM_SMCR_TS_2
 ((
uöt16_t
)0x0040Ë

	)

4930 
	#TIM_SMCR_MSM
 ((
uöt16_t
)0x0080Ë

	)

4932 
	#TIM_SMCR_ETF
 ((
uöt16_t
)0x0F00Ë

	)

4933 
	#TIM_SMCR_ETF_0
 ((
uöt16_t
)0x0100Ë

	)

4934 
	#TIM_SMCR_ETF_1
 ((
uöt16_t
)0x0200Ë

	)

4935 
	#TIM_SMCR_ETF_2
 ((
uöt16_t
)0x0400Ë

	)

4936 
	#TIM_SMCR_ETF_3
 ((
uöt16_t
)0x0800Ë

	)

4938 
	#TIM_SMCR_ETPS
 ((
uöt16_t
)0x3000Ë

	)

4939 
	#TIM_SMCR_ETPS_0
 ((
uöt16_t
)0x1000Ë

	)

4940 
	#TIM_SMCR_ETPS_1
 ((
uöt16_t
)0x2000Ë

	)

4942 
	#TIM_SMCR_ECE
 ((
uöt16_t
)0x4000Ë

	)

4943 
	#TIM_SMCR_ETP
 ((
uöt16_t
)0x8000Ë

	)

4946 
	#TIM_DIER_UIE
 ((
uöt16_t
)0x0001Ë

	)

4947 
	#TIM_DIER_CC1IE
 ((
uöt16_t
)0x0002Ë

	)

4948 
	#TIM_DIER_CC2IE
 ((
uöt16_t
)0x0004Ë

	)

4949 
	#TIM_DIER_CC3IE
 ((
uöt16_t
)0x0008Ë

	)

4950 
	#TIM_DIER_CC4IE
 ((
uöt16_t
)0x0010Ë

	)

4951 
	#TIM_DIER_TIE
 ((
uöt16_t
)0x0040Ë

	)

4952 
	#TIM_DIER_UDE
 ((
uöt16_t
)0x0100Ë

	)

4953 
	#TIM_DIER_CC1DE
 ((
uöt16_t
)0x0200Ë

	)

4954 
	#TIM_DIER_CC2DE
 ((
uöt16_t
)0x0400Ë

	)

4955 
	#TIM_DIER_CC3DE
 ((
uöt16_t
)0x0800Ë

	)

4956 
	#TIM_DIER_CC4DE
 ((
uöt16_t
)0x1000Ë

	)

4957 
	#TIM_DIER_TDE
 ((
uöt16_t
)0x4000Ë

	)

4960 
	#TIM_SR_UIF
 ((
uöt16_t
)0x0001Ë

	)

4961 
	#TIM_SR_CC1IF
 ((
uöt16_t
)0x0002Ë

	)

4962 
	#TIM_SR_CC2IF
 ((
uöt16_t
)0x0004Ë

	)

4963 
	#TIM_SR_CC3IF
 ((
uöt16_t
)0x0008Ë

	)

4964 
	#TIM_SR_CC4IF
 ((
uöt16_t
)0x0010Ë

	)

4965 
	#TIM_SR_TIF
 ((
uöt16_t
)0x0040Ë

	)

4966 
	#TIM_SR_CC1OF
 ((
uöt16_t
)0x0200Ë

	)

4967 
	#TIM_SR_CC2OF
 ((
uöt16_t
)0x0400Ë

	)

4968 
	#TIM_SR_CC3OF
 ((
uöt16_t
)0x0800Ë

	)

4969 
	#TIM_SR_CC4OF
 ((
uöt16_t
)0x1000Ë

	)

4972 
	#TIM_EGR_UG
 ((
uöt8_t
)0x01Ë

	)

4973 
	#TIM_EGR_CC1G
 ((
uöt8_t
)0x02Ë

	)

4974 
	#TIM_EGR_CC2G
 ((
uöt8_t
)0x04Ë

	)

4975 
	#TIM_EGR_CC3G
 ((
uöt8_t
)0x08Ë

	)

4976 
	#TIM_EGR_CC4G
 ((
uöt8_t
)0x10Ë

	)

4977 
	#TIM_EGR_TG
 ((
uöt8_t
)0x40Ë

	)

4980 
	#TIM_CCMR1_CC1S
 ((
uöt16_t
)0x0003Ë

	)

4981 
	#TIM_CCMR1_CC1S_0
 ((
uöt16_t
)0x0001Ë

	)

4982 
	#TIM_CCMR1_CC1S_1
 ((
uöt16_t
)0x0002Ë

	)

4984 
	#TIM_CCMR1_OC1FE
 ((
uöt16_t
)0x0004Ë

	)

4985 
	#TIM_CCMR1_OC1PE
 ((
uöt16_t
)0x0008Ë

	)

4987 
	#TIM_CCMR1_OC1M
 ((
uöt16_t
)0x0070Ë

	)

4988 
	#TIM_CCMR1_OC1M_0
 ((
uöt16_t
)0x0010Ë

	)

4989 
	#TIM_CCMR1_OC1M_1
 ((
uöt16_t
)0x0020Ë

	)

4990 
	#TIM_CCMR1_OC1M_2
 ((
uöt16_t
)0x0040Ë

	)

4992 
	#TIM_CCMR1_OC1CE
 ((
uöt16_t
)0x0080Ë

	)

4994 
	#TIM_CCMR1_CC2S
 ((
uöt16_t
)0x0300Ë

	)

4995 
	#TIM_CCMR1_CC2S_0
 ((
uöt16_t
)0x0100Ë

	)

4996 
	#TIM_CCMR1_CC2S_1
 ((
uöt16_t
)0x0200Ë

	)

4998 
	#TIM_CCMR1_OC2FE
 ((
uöt16_t
)0x0400Ë

	)

4999 
	#TIM_CCMR1_OC2PE
 ((
uöt16_t
)0x0800Ë

	)

5001 
	#TIM_CCMR1_OC2M
 ((
uöt16_t
)0x7000Ë

	)

5002 
	#TIM_CCMR1_OC2M_0
 ((
uöt16_t
)0x1000Ë

	)

5003 
	#TIM_CCMR1_OC2M_1
 ((
uöt16_t
)0x2000Ë

	)

5004 
	#TIM_CCMR1_OC2M_2
 ((
uöt16_t
)0x4000Ë

	)

5006 
	#TIM_CCMR1_OC2CE
 ((
uöt16_t
)0x8000Ë

	)

5010 
	#TIM_CCMR1_IC1PSC
 ((
uöt16_t
)0x000CË

	)

5011 
	#TIM_CCMR1_IC1PSC_0
 ((
uöt16_t
)0x0004Ë

	)

5012 
	#TIM_CCMR1_IC1PSC_1
 ((
uöt16_t
)0x0008Ë

	)

5014 
	#TIM_CCMR1_IC1F
 ((
uöt16_t
)0x00F0Ë

	)

5015 
	#TIM_CCMR1_IC1F_0
 ((
uöt16_t
)0x0010Ë

	)

5016 
	#TIM_CCMR1_IC1F_1
 ((
uöt16_t
)0x0020Ë

	)

5017 
	#TIM_CCMR1_IC1F_2
 ((
uöt16_t
)0x0040Ë

	)

5018 
	#TIM_CCMR1_IC1F_3
 ((
uöt16_t
)0x0080Ë

	)

5020 
	#TIM_CCMR1_IC2PSC
 ((
uöt16_t
)0x0C00Ë

	)

5021 
	#TIM_CCMR1_IC2PSC_0
 ((
uöt16_t
)0x0400Ë

	)

5022 
	#TIM_CCMR1_IC2PSC_1
 ((
uöt16_t
)0x0800Ë

	)

5024 
	#TIM_CCMR1_IC2F
 ((
uöt16_t
)0xF000Ë

	)

5025 
	#TIM_CCMR1_IC2F_0
 ((
uöt16_t
)0x1000Ë

	)

5026 
	#TIM_CCMR1_IC2F_1
 ((
uöt16_t
)0x2000Ë

	)

5027 
	#TIM_CCMR1_IC2F_2
 ((
uöt16_t
)0x4000Ë

	)

5028 
	#TIM_CCMR1_IC2F_3
 ((
uöt16_t
)0x8000Ë

	)

5031 
	#TIM_CCMR2_CC3S
 ((
uöt16_t
)0x0003Ë

	)

5032 
	#TIM_CCMR2_CC3S_0
 ((
uöt16_t
)0x0001Ë

	)

5033 
	#TIM_CCMR2_CC3S_1
 ((
uöt16_t
)0x0002Ë

	)

5035 
	#TIM_CCMR2_OC3FE
 ((
uöt16_t
)0x0004Ë

	)

5036 
	#TIM_CCMR2_OC3PE
 ((
uöt16_t
)0x0008Ë

	)

5038 
	#TIM_CCMR2_OC3M
 ((
uöt16_t
)0x0070Ë

	)

5039 
	#TIM_CCMR2_OC3M_0
 ((
uöt16_t
)0x0010Ë

	)

5040 
	#TIM_CCMR2_OC3M_1
 ((
uöt16_t
)0x0020Ë

	)

5041 
	#TIM_CCMR2_OC3M_2
 ((
uöt16_t
)0x0040Ë

	)

5043 
	#TIM_CCMR2_OC3CE
 ((
uöt16_t
)0x0080Ë

	)

5045 
	#TIM_CCMR2_CC4S
 ((
uöt16_t
)0x0300Ë

	)

5046 
	#TIM_CCMR2_CC4S_0
 ((
uöt16_t
)0x0100Ë

	)

5047 
	#TIM_CCMR2_CC4S_1
 ((
uöt16_t
)0x0200Ë

	)

5049 
	#TIM_CCMR2_OC4FE
 ((
uöt16_t
)0x0400Ë

	)

5050 
	#TIM_CCMR2_OC4PE
 ((
uöt16_t
)0x0800Ë

	)

5052 
	#TIM_CCMR2_OC4M
 ((
uöt16_t
)0x7000Ë

	)

5053 
	#TIM_CCMR2_OC4M_0
 ((
uöt16_t
)0x1000Ë

	)

5054 
	#TIM_CCMR2_OC4M_1
 ((
uöt16_t
)0x2000Ë

	)

5055 
	#TIM_CCMR2_OC4M_2
 ((
uöt16_t
)0x4000Ë

	)

5057 
	#TIM_CCMR2_OC4CE
 ((
uöt16_t
)0x8000Ë

	)

5061 
	#TIM_CCMR2_IC3PSC
 ((
uöt16_t
)0x000CË

	)

5062 
	#TIM_CCMR2_IC3PSC_0
 ((
uöt16_t
)0x0004Ë

	)

5063 
	#TIM_CCMR2_IC3PSC_1
 ((
uöt16_t
)0x0008Ë

	)

5065 
	#TIM_CCMR2_IC3F
 ((
uöt16_t
)0x00F0Ë

	)

5066 
	#TIM_CCMR2_IC3F_0
 ((
uöt16_t
)0x0010Ë

	)

5067 
	#TIM_CCMR2_IC3F_1
 ((
uöt16_t
)0x0020Ë

	)

5068 
	#TIM_CCMR2_IC3F_2
 ((
uöt16_t
)0x0040Ë

	)

5069 
	#TIM_CCMR2_IC3F_3
 ((
uöt16_t
)0x0080Ë

	)

5071 
	#TIM_CCMR2_IC4PSC
 ((
uöt16_t
)0x0C00Ë

	)

5072 
	#TIM_CCMR2_IC4PSC_0
 ((
uöt16_t
)0x0400Ë

	)

5073 
	#TIM_CCMR2_IC4PSC_1
 ((
uöt16_t
)0x0800Ë

	)

5075 
	#TIM_CCMR2_IC4F
 ((
uöt16_t
)0xF000Ë

	)

5076 
	#TIM_CCMR2_IC4F_0
 ((
uöt16_t
)0x1000Ë

	)

5077 
	#TIM_CCMR2_IC4F_1
 ((
uöt16_t
)0x2000Ë

	)

5078 
	#TIM_CCMR2_IC4F_2
 ((
uöt16_t
)0x4000Ë

	)

5079 
	#TIM_CCMR2_IC4F_3
 ((
uöt16_t
)0x8000Ë

	)

5082 
	#TIM_CCER_CC1E
 ((
uöt16_t
)0x0001Ë

	)

5083 
	#TIM_CCER_CC1P
 ((
uöt16_t
)0x0002Ë

	)

5084 
	#TIM_CCER_CC1NP
 ((
uöt16_t
)0x0008Ë

	)

5085 
	#TIM_CCER_CC2E
 ((
uöt16_t
)0x0010Ë

	)

5086 
	#TIM_CCER_CC2P
 ((
uöt16_t
)0x0020Ë

	)

5087 
	#TIM_CCER_CC2NP
 ((
uöt16_t
)0x0080Ë

	)

5088 
	#TIM_CCER_CC3E
 ((
uöt16_t
)0x0100Ë

	)

5089 
	#TIM_CCER_CC3P
 ((
uöt16_t
)0x0200Ë

	)

5090 
	#TIM_CCER_CC3NP
 ((
uöt16_t
)0x0800Ë

	)

5091 
	#TIM_CCER_CC4E
 ((
uöt16_t
)0x1000Ë

	)

5092 
	#TIM_CCER_CC4P
 ((
uöt16_t
)0x2000Ë

	)

5093 
	#TIM_CCER_CC4NP
 ((
uöt16_t
)0x8000Ë

	)

5096 
	#TIM_CNT_CNT
 ((
uöt16_t
)0xFFFFË

	)

5099 
	#TIM_PSC_PSC
 ((
uöt16_t
)0xFFFFË

	)

5102 
	#TIM_ARR_ARR
 ((
uöt16_t
)0xFFFFË

	)

5105 
	#TIM_CCR1_CCR1
 ((
uöt16_t
)0xFFFFË

	)

5108 
	#TIM_CCR2_CCR2
 ((
uöt16_t
)0xFFFFË

	)

5111 
	#TIM_CCR3_CCR3
 ((
uöt16_t
)0xFFFFË

	)

5114 
	#TIM_CCR4_CCR4
 ((
uöt16_t
)0xFFFFË

	)

5117 
	#TIM_DCR_DBA
 ((
uöt16_t
)0x001FË

	)

5118 
	#TIM_DCR_DBA_0
 ((
uöt16_t
)0x0001Ë

	)

5119 
	#TIM_DCR_DBA_1
 ((
uöt16_t
)0x0002Ë

	)

5120 
	#TIM_DCR_DBA_2
 ((
uöt16_t
)0x0004Ë

	)

5121 
	#TIM_DCR_DBA_3
 ((
uöt16_t
)0x0008Ë

	)

5122 
	#TIM_DCR_DBA_4
 ((
uöt16_t
)0x0010Ë

	)

5124 
	#TIM_DCR_DBL
 ((
uöt16_t
)0x1F00Ë

	)

5125 
	#TIM_DCR_DBL_0
 ((
uöt16_t
)0x0100Ë

	)

5126 
	#TIM_DCR_DBL_1
 ((
uöt16_t
)0x0200Ë

	)

5127 
	#TIM_DCR_DBL_2
 ((
uöt16_t
)0x0400Ë

	)

5128 
	#TIM_DCR_DBL_3
 ((
uöt16_t
)0x0800Ë

	)

5129 
	#TIM_DCR_DBL_4
 ((
uöt16_t
)0x1000Ë

	)

5132 
	#TIM_DMAR_DMAB
 ((
uöt16_t
)0xFFFFË

	)

5135 
	#TIM_OR_TI1RMP
 ((
uöt16_t
)0x0003Ë

	)

5136 
	#TIM_OR_TI1RMP_0
 ((
uöt16_t
)0x0001Ë

	)

5137 
	#TIM_OR_TI1RMP_1
 ((
uöt16_t
)0x0002Ë

	)

5146 
	#USART_SR_PE
 ((
uöt16_t
)0x0001Ë

	)

5147 
	#USART_SR_FE
 ((
uöt16_t
)0x0002Ë

	)

5148 
	#USART_SR_NE
 ((
uöt16_t
)0x0004Ë

	)

5149 
	#USART_SR_ORE
 ((
uöt16_t
)0x0008Ë

	)

5150 
	#USART_SR_IDLE
 ((
uöt16_t
)0x0010Ë

	)

5151 
	#USART_SR_RXNE
 ((
uöt16_t
)0x0020Ë

	)

5152 
	#USART_SR_TC
 ((
uöt16_t
)0x0040Ë

	)

5153 
	#USART_SR_TXE
 ((
uöt16_t
)0x0080Ë

	)

5154 
	#USART_SR_LBD
 ((
uöt16_t
)0x0100Ë

	)

5155 
	#USART_SR_CTS
 ((
uöt16_t
)0x0200Ë

	)

5158 
	#USART_DR_DR
 ((
uöt16_t
)0x01FFË

	)

5161 
	#USART_BRR_DIV_FRACTION
 ((
uöt16_t
)0x000FË

	)

5162 
	#USART_BRR_DIV_MANTISSA
 ((
uöt16_t
)0xFFF0Ë

	)

5165 
	#USART_CR1_SBK
 ((
uöt16_t
)0x0001Ë

	)

5166 
	#USART_CR1_RWU
 ((
uöt16_t
)0x0002Ë

	)

5167 
	#USART_CR1_RE
 ((
uöt16_t
)0x0004Ë

	)

5168 
	#USART_CR1_TE
 ((
uöt16_t
)0x0008Ë

	)

5169 
	#USART_CR1_IDLEIE
 ((
uöt16_t
)0x0010Ë

	)

5170 
	#USART_CR1_RXNEIE
 ((
uöt16_t
)0x0020Ë

	)

5171 
	#USART_CR1_TCIE
 ((
uöt16_t
)0x0040Ë

	)

5172 
	#USART_CR1_TXEIE
 ((
uöt16_t
)0x0080Ë

	)

5173 
	#USART_CR1_PEIE
 ((
uöt16_t
)0x0100Ë

	)

5174 
	#USART_CR1_PS
 ((
uöt16_t
)0x0200Ë

	)

5175 
	#USART_CR1_PCE
 ((
uöt16_t
)0x0400Ë

	)

5176 
	#USART_CR1_WAKE
 ((
uöt16_t
)0x0800Ë

	)

5177 
	#USART_CR1_M
 ((
uöt16_t
)0x1000Ë

	)

5178 
	#USART_CR1_UE
 ((
uöt16_t
)0x2000Ë

	)

5179 
	#USART_CR1_OVER8
 ((
uöt16_t
)0x8000Ë

	)

5182 
	#USART_CR2_ADD
 ((
uöt16_t
)0x000FË

	)

5183 
	#USART_CR2_LBDL
 ((
uöt16_t
)0x0020Ë

	)

5184 
	#USART_CR2_LBDIE
 ((
uöt16_t
)0x0040Ë

	)

5185 
	#USART_CR2_LBCL
 ((
uöt16_t
)0x0100Ë

	)

5186 
	#USART_CR2_CPHA
 ((
uöt16_t
)0x0200Ë

	)

5187 
	#USART_CR2_CPOL
 ((
uöt16_t
)0x0400Ë

	)

5188 
	#USART_CR2_CLKEN
 ((
uöt16_t
)0x0800Ë

	)

5190 
	#USART_CR2_STOP
 ((
uöt16_t
)0x3000Ë

	)

5191 
	#USART_CR2_STOP_0
 ((
uöt16_t
)0x1000Ë

	)

5192 
	#USART_CR2_STOP_1
 ((
uöt16_t
)0x2000Ë

	)

5194 
	#USART_CR2_LINEN
 ((
uöt16_t
)0x4000Ë

	)

5197 
	#USART_CR3_EIE
 ((
uöt16_t
)0x0001Ë

	)

5198 
	#USART_CR3_IREN
 ((
uöt16_t
)0x0002Ë

	)

5199 
	#USART_CR3_IRLP
 ((
uöt16_t
)0x0004Ë

	)

5200 
	#USART_CR3_HDSEL
 ((
uöt16_t
)0x0008Ë

	)

5201 
	#USART_CR3_NACK
 ((
uöt16_t
)0x0010Ë

	)

5202 
	#USART_CR3_SCEN
 ((
uöt16_t
)0x0020Ë

	)

5203 
	#USART_CR3_DMAR
 ((
uöt16_t
)0x0040Ë

	)

5204 
	#USART_CR3_DMAT
 ((
uöt16_t
)0x0080Ë

	)

5205 
	#USART_CR3_RTSE
 ((
uöt16_t
)0x0100Ë

	)

5206 
	#USART_CR3_CTSE
 ((
uöt16_t
)0x0200Ë

	)

5207 
	#USART_CR3_CTSIE
 ((
uöt16_t
)0x0400Ë

	)

5208 
	#USART_CR3_ONEBIT
 ((
uöt16_t
)0x0800Ë

	)

5211 
	#USART_GTPR_PSC
 ((
uöt16_t
)0x00FFË

	)

5212 
	#USART_GTPR_PSC_0
 ((
uöt16_t
)0x0001Ë

	)

5213 
	#USART_GTPR_PSC_1
 ((
uöt16_t
)0x0002Ë

	)

5214 
	#USART_GTPR_PSC_2
 ((
uöt16_t
)0x0004Ë

	)

5215 
	#USART_GTPR_PSC_3
 ((
uöt16_t
)0x0008Ë

	)

5216 
	#USART_GTPR_PSC_4
 ((
uöt16_t
)0x0010Ë

	)

5217 
	#USART_GTPR_PSC_5
 ((
uöt16_t
)0x0020Ë

	)

5218 
	#USART_GTPR_PSC_6
 ((
uöt16_t
)0x0040Ë

	)

5219 
	#USART_GTPR_PSC_7
 ((
uöt16_t
)0x0080Ë

	)

5221 
	#USART_GTPR_GT
 ((
uöt16_t
)0xFF00Ë

	)

5231 
	#USB_EP0R_EA
 ((
uöt16_t
)0x000FË

	)

5233 
	#USB_EP0R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5234 
	#USB_EP0R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5235 
	#USB_EP0R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5237 
	#USB_EP0R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5238 
	#USB_EP0R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5239 
	#USB_EP0R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5241 
	#USB_EP0R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5242 
	#USB_EP0R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5243 
	#USB_EP0R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5245 
	#USB_EP0R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5247 
	#USB_EP0R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5248 
	#USB_EP0R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5249 
	#USB_EP0R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5251 
	#USB_EP0R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5252 
	#USB_EP0R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5255 
	#USB_EP1R_EA
 ((
uöt16_t
)0x000FË

	)

5257 
	#USB_EP1R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5258 
	#USB_EP1R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5259 
	#USB_EP1R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5261 
	#USB_EP1R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5262 
	#USB_EP1R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5263 
	#USB_EP1R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5265 
	#USB_EP1R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5266 
	#USB_EP1R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5267 
	#USB_EP1R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5269 
	#USB_EP1R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5271 
	#USB_EP1R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5272 
	#USB_EP1R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5273 
	#USB_EP1R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5275 
	#USB_EP1R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5276 
	#USB_EP1R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5279 
	#USB_EP2R_EA
 ((
uöt16_t
)0x000FË

	)

5281 
	#USB_EP2R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5282 
	#USB_EP2R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5283 
	#USB_EP2R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5285 
	#USB_EP2R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5286 
	#USB_EP2R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5287 
	#USB_EP2R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5289 
	#USB_EP2R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5290 
	#USB_EP2R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5291 
	#USB_EP2R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5293 
	#USB_EP2R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5295 
	#USB_EP2R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5296 
	#USB_EP2R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5297 
	#USB_EP2R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5299 
	#USB_EP2R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5300 
	#USB_EP2R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5303 
	#USB_EP3R_EA
 ((
uöt16_t
)0x000FË

	)

5305 
	#USB_EP3R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5306 
	#USB_EP3R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5307 
	#USB_EP3R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5309 
	#USB_EP3R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5310 
	#USB_EP3R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5311 
	#USB_EP3R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5313 
	#USB_EP3R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5314 
	#USB_EP3R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5315 
	#USB_EP3R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5317 
	#USB_EP3R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5319 
	#USB_EP3R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5320 
	#USB_EP3R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5321 
	#USB_EP3R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5323 
	#USB_EP3R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5324 
	#USB_EP3R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5327 
	#USB_EP4R_EA
 ((
uöt16_t
)0x000FË

	)

5329 
	#USB_EP4R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5330 
	#USB_EP4R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5331 
	#USB_EP4R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5333 
	#USB_EP4R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5334 
	#USB_EP4R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5335 
	#USB_EP4R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5337 
	#USB_EP4R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5338 
	#USB_EP4R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5339 
	#USB_EP4R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5341 
	#USB_EP4R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5343 
	#USB_EP4R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5344 
	#USB_EP4R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5345 
	#USB_EP4R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5347 
	#USB_EP4R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5348 
	#USB_EP4R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5351 
	#USB_EP5R_EA
 ((
uöt16_t
)0x000FË

	)

5353 
	#USB_EP5R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5354 
	#USB_EP5R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5355 
	#USB_EP5R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5357 
	#USB_EP5R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5358 
	#USB_EP5R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5359 
	#USB_EP5R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5361 
	#USB_EP5R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5362 
	#USB_EP5R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5363 
	#USB_EP5R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5365 
	#USB_EP5R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5367 
	#USB_EP5R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5368 
	#USB_EP5R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5369 
	#USB_EP5R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5371 
	#USB_EP5R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5372 
	#USB_EP5R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5375 
	#USB_EP6R_EA
 ((
uöt16_t
)0x000FË

	)

5377 
	#USB_EP6R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5378 
	#USB_EP6R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5379 
	#USB_EP6R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5381 
	#USB_EP6R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5382 
	#USB_EP6R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5383 
	#USB_EP6R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5385 
	#USB_EP6R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5386 
	#USB_EP6R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5387 
	#USB_EP6R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5389 
	#USB_EP6R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5391 
	#USB_EP6R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5392 
	#USB_EP6R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5393 
	#USB_EP6R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5395 
	#USB_EP6R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5396 
	#USB_EP6R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5399 
	#USB_EP7R_EA
 ((
uöt16_t
)0x000FË

	)

5401 
	#USB_EP7R_STAT_TX
 ((
uöt16_t
)0x0030Ë

	)

5402 
	#USB_EP7R_STAT_TX_0
 ((
uöt16_t
)0x0010Ë

	)

5403 
	#USB_EP7R_STAT_TX_1
 ((
uöt16_t
)0x0020Ë

	)

5405 
	#USB_EP7R_DTOG_TX
 ((
uöt16_t
)0x0040Ë

	)

5406 
	#USB_EP7R_CTR_TX
 ((
uöt16_t
)0x0080Ë

	)

5407 
	#USB_EP7R_EP_KIND
 ((
uöt16_t
)0x0100Ë

	)

5409 
	#USB_EP7R_EP_TYPE
 ((
uöt16_t
)0x0600Ë

	)

5410 
	#USB_EP7R_EP_TYPE_0
 ((
uöt16_t
)0x0200Ë

	)

5411 
	#USB_EP7R_EP_TYPE_1
 ((
uöt16_t
)0x0400Ë

	)

5413 
	#USB_EP7R_SETUP
 ((
uöt16_t
)0x0800Ë

	)

5415 
	#USB_EP7R_STAT_RX
 ((
uöt16_t
)0x3000Ë

	)

5416 
	#USB_EP7R_STAT_RX_0
 ((
uöt16_t
)0x1000Ë

	)

5417 
	#USB_EP7R_STAT_RX_1
 ((
uöt16_t
)0x2000Ë

	)

5419 
	#USB_EP7R_DTOG_RX
 ((
uöt16_t
)0x4000Ë

	)

5420 
	#USB_EP7R_CTR_RX
 ((
uöt16_t
)0x8000Ë

	)

5424 
	#USB_CNTR_FRES
 ((
uöt16_t
)0x0001Ë

	)

5425 
	#USB_CNTR_PDWN
 ((
uöt16_t
)0x0002Ë

	)

5426 
	#USB_CNTR_LP_MODE
 ((
uöt16_t
)0x0004Ë

	)

5427 
	#USB_CNTR_FSUSP
 ((
uöt16_t
)0x0008Ë

	)

5428 
	#USB_CNTR_RESUME
 ((
uöt16_t
)0x0010Ë

	)

5429 
	#USB_CNTR_ESOFM
 ((
uöt16_t
)0x0100Ë

	)

5430 
	#USB_CNTR_SOFM
 ((
uöt16_t
)0x0200Ë

	)

5431 
	#USB_CNTR_RESETM
 ((
uöt16_t
)0x0400Ë

	)

5432 
	#USB_CNTR_SUSPM
 ((
uöt16_t
)0x0800Ë

	)

5433 
	#USB_CNTR_WKUPM
 ((
uöt16_t
)0x1000Ë

	)

5434 
	#USB_CNTR_ERRM
 ((
uöt16_t
)0x2000Ë

	)

5435 
	#USB_CNTR_PMAOVRM
 ((
uöt16_t
)0x4000Ë

	)

5436 
	#USB_CNTR_CTRM
 ((
uöt16_t
)0x8000Ë

	)

5439 
	#USB_ISTR_EP_ID
 ((
uöt16_t
)0x000FË

	)

5440 
	#USB_ISTR_DIR
 ((
uöt16_t
)0x0010Ë

	)

5441 
	#USB_ISTR_ESOF
 ((
uöt16_t
)0x0100Ë

	)

5442 
	#USB_ISTR_SOF
 ((
uöt16_t
)0x0200Ë

	)

5443 
	#USB_ISTR_RESET
 ((
uöt16_t
)0x0400Ë

	)

5444 
	#USB_ISTR_SUSP
 ((
uöt16_t
)0x0800Ë

	)

5445 
	#USB_ISTR_WKUP
 ((
uöt16_t
)0x1000Ë

	)

5446 
	#USB_ISTR_ERR
 ((
uöt16_t
)0x2000Ë

	)

5447 
	#USB_ISTR_PMAOVR
 ((
uöt16_t
)0x4000Ë

	)

5448 
	#USB_ISTR_CTR
 ((
uöt16_t
)0x8000Ë

	)

5451 
	#USB_FNR_FN
 ((
uöt16_t
)0x07FFË

	)

5452 
	#USB_FNR_LSOF
 ((
uöt16_t
)0x1800Ë

	)

5453 
	#USB_FNR_LCK
 ((
uöt16_t
)0x2000Ë

	)

5454 
	#USB_FNR_RXDM
 ((
uöt16_t
)0x4000Ë

	)

5455 
	#USB_FNR_RXDP
 ((
uöt16_t
)0x8000Ë

	)

5458 
	#USB_DADDR_ADD
 ((
uöt8_t
)0x7FË

	)

5459 
	#USB_DADDR_ADD0
 ((
uöt8_t
)0x01Ë

	)

5460 
	#USB_DADDR_ADD1
 ((
uöt8_t
)0x02Ë

	)

5461 
	#USB_DADDR_ADD2
 ((
uöt8_t
)0x04Ë

	)

5462 
	#USB_DADDR_ADD3
 ((
uöt8_t
)0x08Ë

	)

5463 
	#USB_DADDR_ADD4
 ((
uöt8_t
)0x10Ë

	)

5464 
	#USB_DADDR_ADD5
 ((
uöt8_t
)0x20Ë

	)

5465 
	#USB_DADDR_ADD6
 ((
uöt8_t
)0x40Ë

	)

5467 
	#USB_DADDR_EF
 ((
uöt8_t
)0x80Ë

	)

5470 
	#USB_BTABLE_BTABLE
 ((
uöt16_t
)0xFFF8Ë

	)

5474 
	#USB_ADDR0_TX_ADDR0_TX
 ((
uöt16_t
)0xFFFEË

	)

5477 
	#USB_ADDR1_TX_ADDR1_TX
 ((
uöt16_t
)0xFFFEË

	)

5480 
	#USB_ADDR2_TX_ADDR2_TX
 ((
uöt16_t
)0xFFFEË

	)

5483 
	#USB_ADDR3_TX_ADDR3_TX
 ((
uöt16_t
)0xFFFEË

	)

5486 
	#USB_ADDR4_TX_ADDR4_TX
 ((
uöt16_t
)0xFFFEË

	)

5489 
	#USB_ADDR5_TX_ADDR5_TX
 ((
uöt16_t
)0xFFFEË

	)

5492 
	#USB_ADDR6_TX_ADDR6_TX
 ((
uöt16_t
)0xFFFEË

	)

5495 
	#USB_ADDR7_TX_ADDR7_TX
 ((
uöt16_t
)0xFFFEË

	)

5500 
	#USB_COUNT0_TX_COUNT0_TX
 ((
uöt16_t
)0x03FFË

	)

5503 
	#USB_COUNT1_TX_COUNT1_TX
 ((
uöt16_t
)0x03FFË

	)

5506 
	#USB_COUNT2_TX_COUNT2_TX
 ((
uöt16_t
)0x03FFË

	)

5509 
	#USB_COUNT3_TX_COUNT3_TX
 ((
uöt16_t
)0x03FFË

	)

5512 
	#USB_COUNT4_TX_COUNT4_TX
 ((
uöt16_t
)0x03FFË

	)

5515 
	#USB_COUNT5_TX_COUNT5_TX
 ((
uöt16_t
)0x03FFË

	)

5518 
	#USB_COUNT6_TX_COUNT6_TX
 ((
uöt16_t
)0x03FFË

	)

5521 
	#USB_COUNT7_TX_COUNT7_TX
 ((
uöt16_t
)0x03FFË

	)

5526 
	#USB_COUNT0_TX_0_COUNT0_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5529 
	#USB_COUNT0_TX_1_COUNT0_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5532 
	#USB_COUNT1_TX_0_COUNT1_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5535 
	#USB_COUNT1_TX_1_COUNT1_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5538 
	#USB_COUNT2_TX_0_COUNT2_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5541 
	#USB_COUNT2_TX_1_COUNT2_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5544 
	#USB_COUNT3_TX_0_COUNT3_TX_0
 ((
uöt16_t
)0x000003FFË

	)

5547 
	#USB_COUNT3_TX_1_COUNT3_TX_1
 ((
uöt16_t
)0x03FF0000Ë

	)

5550 
	#USB_COUNT4_TX_0_COUNT4_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5553 
	#USB_COUNT4_TX_1_COUNT4_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5556 
	#USB_COUNT5_TX_0_COUNT5_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5559 
	#USB_COUNT5_TX_1_COUNT5_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5562 
	#USB_COUNT6_TX_0_COUNT6_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5565 
	#USB_COUNT6_TX_1_COUNT6_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5568 
	#USB_COUNT7_TX_0_COUNT7_TX_0
 ((
uöt32_t
)0x000003FFË

	)

5571 
	#USB_COUNT7_TX_1_COUNT7_TX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5576 
	#USB_ADDR0_RX_ADDR0_RX
 ((
uöt16_t
)0xFFFEË

	)

5579 
	#USB_ADDR1_RX_ADDR1_RX
 ((
uöt16_t
)0xFFFEË

	)

5582 
	#USB_ADDR2_RX_ADDR2_RX
 ((
uöt16_t
)0xFFFEË

	)

5585 
	#USB_ADDR3_RX_ADDR3_RX
 ((
uöt16_t
)0xFFFEË

	)

5588 
	#USB_ADDR4_RX_ADDR4_RX
 ((
uöt16_t
)0xFFFEË

	)

5591 
	#USB_ADDR5_RX_ADDR5_RX
 ((
uöt16_t
)0xFFFEË

	)

5594 
	#USB_ADDR6_RX_ADDR6_RX
 ((
uöt16_t
)0xFFFEË

	)

5597 
	#USB_ADDR7_RX_ADDR7_RX
 ((
uöt16_t
)0xFFFEË

	)

5602 
	#USB_COUNT0_RX_COUNT0_RX
 ((
uöt16_t
)0x03FFË

	)

5604 
	#USB_COUNT0_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5605 
	#USB_COUNT0_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5606 
	#USB_COUNT0_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5607 
	#USB_COUNT0_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5608 
	#USB_COUNT0_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5609 
	#USB_COUNT0_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5611 
	#USB_COUNT0_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5614 
	#USB_COUNT1_RX_COUNT1_RX
 ((
uöt16_t
)0x03FFË

	)

5616 
	#USB_COUNT1_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5617 
	#USB_COUNT1_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5618 
	#USB_COUNT1_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5619 
	#USB_COUNT1_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5620 
	#USB_COUNT1_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5621 
	#USB_COUNT1_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5623 
	#USB_COUNT1_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5626 
	#USB_COUNT2_RX_COUNT2_RX
 ((
uöt16_t
)0x03FFË

	)

5628 
	#USB_COUNT2_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5629 
	#USB_COUNT2_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5630 
	#USB_COUNT2_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5631 
	#USB_COUNT2_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5632 
	#USB_COUNT2_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5633 
	#USB_COUNT2_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5635 
	#USB_COUNT2_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5638 
	#USB_COUNT3_RX_COUNT3_RX
 ((
uöt16_t
)0x03FFË

	)

5640 
	#USB_COUNT3_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5641 
	#USB_COUNT3_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5642 
	#USB_COUNT3_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5643 
	#USB_COUNT3_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5644 
	#USB_COUNT3_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5645 
	#USB_COUNT3_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5647 
	#USB_COUNT3_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5650 
	#USB_COUNT4_RX_COUNT4_RX
 ((
uöt16_t
)0x03FFË

	)

5652 
	#USB_COUNT4_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5653 
	#USB_COUNT4_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5654 
	#USB_COUNT4_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5655 
	#USB_COUNT4_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5656 
	#USB_COUNT4_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5657 
	#USB_COUNT4_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5659 
	#USB_COUNT4_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5662 
	#USB_COUNT5_RX_COUNT5_RX
 ((
uöt16_t
)0x03FFË

	)

5664 
	#USB_COUNT5_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5665 
	#USB_COUNT5_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5666 
	#USB_COUNT5_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5667 
	#USB_COUNT5_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5668 
	#USB_COUNT5_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5669 
	#USB_COUNT5_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5671 
	#USB_COUNT5_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5674 
	#USB_COUNT6_RX_COUNT6_RX
 ((
uöt16_t
)0x03FFË

	)

5676 
	#USB_COUNT6_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5677 
	#USB_COUNT6_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5678 
	#USB_COUNT6_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5679 
	#USB_COUNT6_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5680 
	#USB_COUNT6_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5681 
	#USB_COUNT6_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5683 
	#USB_COUNT6_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5686 
	#USB_COUNT7_RX_COUNT7_RX
 ((
uöt16_t
)0x03FFË

	)

5688 
	#USB_COUNT7_RX_NUM_BLOCK
 ((
uöt16_t
)0x7C00Ë

	)

5689 
	#USB_COUNT7_RX_NUM_BLOCK_0
 ((
uöt16_t
)0x0400Ë

	)

5690 
	#USB_COUNT7_RX_NUM_BLOCK_1
 ((
uöt16_t
)0x0800Ë

	)

5691 
	#USB_COUNT7_RX_NUM_BLOCK_2
 ((
uöt16_t
)0x1000Ë

	)

5692 
	#USB_COUNT7_RX_NUM_BLOCK_3
 ((
uöt16_t
)0x2000Ë

	)

5693 
	#USB_COUNT7_RX_NUM_BLOCK_4
 ((
uöt16_t
)0x4000Ë

	)

5695 
	#USB_COUNT7_RX_BLSIZE
 ((
uöt16_t
)0x8000Ë

	)

5700 
	#USB_COUNT0_RX_0_COUNT0_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5702 
	#USB_COUNT0_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5703 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5704 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5705 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5706 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5707 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5709 
	#USB_COUNT0_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5712 
	#USB_COUNT0_RX_1_COUNT0_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5714 
	#USB_COUNT0_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5715 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5716 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5717 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5718 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5719 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5721 
	#USB_COUNT0_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5724 
	#USB_COUNT1_RX_0_COUNT1_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5726 
	#USB_COUNT1_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5727 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5728 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5729 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5730 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5731 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5733 
	#USB_COUNT1_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5736 
	#USB_COUNT1_RX_1_COUNT1_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5738 
	#USB_COUNT1_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5739 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5740 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5741 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5742 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5743 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5745 
	#USB_COUNT1_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5748 
	#USB_COUNT2_RX_0_COUNT2_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5750 
	#USB_COUNT2_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5751 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5752 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5753 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5754 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5755 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5757 
	#USB_COUNT2_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5760 
	#USB_COUNT2_RX_1_COUNT2_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5762 
	#USB_COUNT2_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5763 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5764 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5765 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5766 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5767 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5769 
	#USB_COUNT2_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5772 
	#USB_COUNT3_RX_0_COUNT3_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5774 
	#USB_COUNT3_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5775 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5776 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5777 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5778 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5779 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5781 
	#USB_COUNT3_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5784 
	#USB_COUNT3_RX_1_COUNT3_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5786 
	#USB_COUNT3_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5787 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5788 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5789 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5790 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5791 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5793 
	#USB_COUNT3_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5796 
	#USB_COUNT4_RX_0_COUNT4_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5798 
	#USB_COUNT4_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5799 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5800 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5801 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5802 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5803 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5805 
	#USB_COUNT4_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5808 
	#USB_COUNT4_RX_1_COUNT4_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5810 
	#USB_COUNT4_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5811 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5812 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5813 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5814 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5815 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5817 
	#USB_COUNT4_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5820 
	#USB_COUNT5_RX_0_COUNT5_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5822 
	#USB_COUNT5_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5823 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5824 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5825 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5826 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5827 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5829 
	#USB_COUNT5_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5832 
	#USB_COUNT5_RX_1_COUNT5_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5834 
	#USB_COUNT5_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5835 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5836 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5837 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5838 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5839 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5841 
	#USB_COUNT5_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5844 
	#USB_COUNT6_RX_0_COUNT6_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5846 
	#USB_COUNT6_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5847 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5848 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5849 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5850 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5851 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5853 
	#USB_COUNT6_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5856 
	#USB_COUNT6_RX_1_COUNT6_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5858 
	#USB_COUNT6_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5859 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5860 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5861 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5862 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5863 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5865 
	#USB_COUNT6_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5868 
	#USB_COUNT7_RX_0_COUNT7_RX_0
 ((
uöt32_t
)0x000003FFË

	)

5870 
	#USB_COUNT7_RX_0_NUM_BLOCK_0
 ((
uöt32_t
)0x00007C00Ë

	)

5871 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_0
 ((
uöt32_t
)0x00000400Ë

	)

5872 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_1
 ((
uöt32_t
)0x00000800Ë

	)

5873 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_2
 ((
uöt32_t
)0x00001000Ë

	)

5874 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_3
 ((
uöt32_t
)0x00002000Ë

	)

5875 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_4
 ((
uöt32_t
)0x00004000Ë

	)

5877 
	#USB_COUNT7_RX_0_BLSIZE_0
 ((
uöt32_t
)0x00008000Ë

	)

5880 
	#USB_COUNT7_RX_1_COUNT7_RX_1
 ((
uöt32_t
)0x03FF0000Ë

	)

5882 
	#USB_COUNT7_RX_1_NUM_BLOCK_1
 ((
uöt32_t
)0x7C000000Ë

	)

5883 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_0
 ((
uöt32_t
)0x04000000Ë

	)

5884 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_1
 ((
uöt32_t
)0x08000000Ë

	)

5885 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_2
 ((
uöt32_t
)0x10000000Ë

	)

5886 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_3
 ((
uöt32_t
)0x20000000Ë

	)

5887 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_4
 ((
uöt32_t
)0x40000000Ë

	)

5889 
	#USB_COUNT7_RX_1_BLSIZE_1
 ((
uöt32_t
)0x80000000Ë

	)

5898 
	#WWDG_CR_T
 ((
uöt8_t
)0x7FË

	)

5899 
	#WWDG_CR_T0
 ((
uöt8_t
)0x01Ë

	)

5900 
	#WWDG_CR_T1
 ((
uöt8_t
)0x02Ë

	)

5901 
	#WWDG_CR_T2
 ((
uöt8_t
)0x04Ë

	)

5902 
	#WWDG_CR_T3
 ((
uöt8_t
)0x08Ë

	)

5903 
	#WWDG_CR_T4
 ((
uöt8_t
)0x10Ë

	)

5904 
	#WWDG_CR_T5
 ((
uöt8_t
)0x20Ë

	)

5905 
	#WWDG_CR_T6
 ((
uöt8_t
)0x40Ë

	)

5907 
	#WWDG_CR_WDGA
 ((
uöt8_t
)0x80Ë

	)

5910 
	#WWDG_CFR_W
 ((
uöt16_t
)0x007FË

	)

5911 
	#WWDG_CFR_W0
 ((
uöt16_t
)0x0001Ë

	)

5912 
	#WWDG_CFR_W1
 ((
uöt16_t
)0x0002Ë

	)

5913 
	#WWDG_CFR_W2
 ((
uöt16_t
)0x0004Ë

	)

5914 
	#WWDG_CFR_W3
 ((
uöt16_t
)0x0008Ë

	)

5915 
	#WWDG_CFR_W4
 ((
uöt16_t
)0x0010Ë

	)

5916 
	#WWDG_CFR_W5
 ((
uöt16_t
)0x0020Ë

	)

5917 
	#WWDG_CFR_W6
 ((
uöt16_t
)0x0040Ë

	)

5919 
	#WWDG_CFR_WDGTB
 ((
uöt16_t
)0x0180Ë

	)

5920 
	#WWDG_CFR_WDGTB0
 ((
uöt16_t
)0x0080Ë

	)

5921 
	#WWDG_CFR_WDGTB1
 ((
uöt16_t
)0x0100Ë

	)

5923 
	#WWDG_CFR_EWI
 ((
uöt16_t
)0x0200Ë

	)

5926 
	#WWDG_SR_EWIF
 ((
uöt8_t
)0x01Ë

	)

5935 
	#SysTick_CTRL_ENABLE
 ((
uöt32_t
)0x00000001Ë

	)

5936 
	#SysTick_CTRL_TICKINT
 ((
uöt32_t
)0x00000002Ë

	)

5937 
	#SysTick_CTRL_CLKSOURCE
 ((
uöt32_t
)0x00000004Ë

	)

5938 
	#SysTick_CTRL_COUNTFLAG
 ((
uöt32_t
)0x00010000Ë

	)

5941 
	#SysTick_LOAD_RELOAD
 ((
uöt32_t
)0x00FFFFFFË

	)

5944 
	#SysTick_VAL_CURRENT
 ((
uöt32_t
)0x00FFFFFFË

	)

5947 
	#SysTick_CALIB_TENMS
 ((
uöt32_t
)0x00FFFFFFË

	)

5948 
	#SysTick_CALIB_SKEW
 ((
uöt32_t
)0x40000000Ë

	)

5949 
	#SysTick_CALIB_NOREF
 ((
uöt32_t
)0x80000000Ë

	)

5958 
	#NVIC_ISER_SETENA
 ((
uöt32_t
)0xFFFFFFFFË

	)

5959 
	#NVIC_ISER_SETENA_0
 ((
uöt32_t
)0x00000001Ë

	)

5960 
	#NVIC_ISER_SETENA_1
 ((
uöt32_t
)0x00000002Ë

	)

5961 
	#NVIC_ISER_SETENA_2
 ((
uöt32_t
)0x00000004Ë

	)

5962 
	#NVIC_ISER_SETENA_3
 ((
uöt32_t
)0x00000008Ë

	)

5963 
	#NVIC_ISER_SETENA_4
 ((
uöt32_t
)0x00000010Ë

	)

5964 
	#NVIC_ISER_SETENA_5
 ((
uöt32_t
)0x00000020Ë

	)

5965 
	#NVIC_ISER_SETENA_6
 ((
uöt32_t
)0x00000040Ë

	)

5966 
	#NVIC_ISER_SETENA_7
 ((
uöt32_t
)0x00000080Ë

	)

5967 
	#NVIC_ISER_SETENA_8
 ((
uöt32_t
)0x00000100Ë

	)

5968 
	#NVIC_ISER_SETENA_9
 ((
uöt32_t
)0x00000200Ë

	)

5969 
	#NVIC_ISER_SETENA_10
 ((
uöt32_t
)0x00000400Ë

	)

5970 
	#NVIC_ISER_SETENA_11
 ((
uöt32_t
)0x00000800Ë

	)

5971 
	#NVIC_ISER_SETENA_12
 ((
uöt32_t
)0x00001000Ë

	)

5972 
	#NVIC_ISER_SETENA_13
 ((
uöt32_t
)0x00002000Ë

	)

5973 
	#NVIC_ISER_SETENA_14
 ((
uöt32_t
)0x00004000Ë

	)

5974 
	#NVIC_ISER_SETENA_15
 ((
uöt32_t
)0x00008000Ë

	)

5975 
	#NVIC_ISER_SETENA_16
 ((
uöt32_t
)0x00010000Ë

	)

5976 
	#NVIC_ISER_SETENA_17
 ((
uöt32_t
)0x00020000Ë

	)

5977 
	#NVIC_ISER_SETENA_18
 ((
uöt32_t
)0x00040000Ë

	)

5978 
	#NVIC_ISER_SETENA_19
 ((
uöt32_t
)0x00080000Ë

	)

5979 
	#NVIC_ISER_SETENA_20
 ((
uöt32_t
)0x00100000Ë

	)

5980 
	#NVIC_ISER_SETENA_21
 ((
uöt32_t
)0x00200000Ë

	)

5981 
	#NVIC_ISER_SETENA_22
 ((
uöt32_t
)0x00400000Ë

	)

5982 
	#NVIC_ISER_SETENA_23
 ((
uöt32_t
)0x00800000Ë

	)

5983 
	#NVIC_ISER_SETENA_24
 ((
uöt32_t
)0x01000000Ë

	)

5984 
	#NVIC_ISER_SETENA_25
 ((
uöt32_t
)0x02000000Ë

	)

5985 
	#NVIC_ISER_SETENA_26
 ((
uöt32_t
)0x04000000Ë

	)

5986 
	#NVIC_ISER_SETENA_27
 ((
uöt32_t
)0x08000000Ë

	)

5987 
	#NVIC_ISER_SETENA_28
 ((
uöt32_t
)0x10000000Ë

	)

5988 
	#NVIC_ISER_SETENA_29
 ((
uöt32_t
)0x20000000Ë

	)

5989 
	#NVIC_ISER_SETENA_30
 ((
uöt32_t
)0x40000000Ë

	)

5990 
	#NVIC_ISER_SETENA_31
 ((
uöt32_t
)0x80000000Ë

	)

5993 
	#NVIC_ICER_CLRENA
 ((
uöt32_t
)0xFFFFFFFFË

	)

5994 
	#NVIC_ICER_CLRENA_0
 ((
uöt32_t
)0x00000001Ë

	)

5995 
	#NVIC_ICER_CLRENA_1
 ((
uöt32_t
)0x00000002Ë

	)

5996 
	#NVIC_ICER_CLRENA_2
 ((
uöt32_t
)0x00000004Ë

	)

5997 
	#NVIC_ICER_CLRENA_3
 ((
uöt32_t
)0x00000008Ë

	)

5998 
	#NVIC_ICER_CLRENA_4
 ((
uöt32_t
)0x00000010Ë

	)

5999 
	#NVIC_ICER_CLRENA_5
 ((
uöt32_t
)0x00000020Ë

	)

6000 
	#NVIC_ICER_CLRENA_6
 ((
uöt32_t
)0x00000040Ë

	)

6001 
	#NVIC_ICER_CLRENA_7
 ((
uöt32_t
)0x00000080Ë

	)

6002 
	#NVIC_ICER_CLRENA_8
 ((
uöt32_t
)0x00000100Ë

	)

6003 
	#NVIC_ICER_CLRENA_9
 ((
uöt32_t
)0x00000200Ë

	)

6004 
	#NVIC_ICER_CLRENA_10
 ((
uöt32_t
)0x00000400Ë

	)

6005 
	#NVIC_ICER_CLRENA_11
 ((
uöt32_t
)0x00000800Ë

	)

6006 
	#NVIC_ICER_CLRENA_12
 ((
uöt32_t
)0x00001000Ë

	)

6007 
	#NVIC_ICER_CLRENA_13
 ((
uöt32_t
)0x00002000Ë

	)

6008 
	#NVIC_ICER_CLRENA_14
 ((
uöt32_t
)0x00004000Ë

	)

6009 
	#NVIC_ICER_CLRENA_15
 ((
uöt32_t
)0x00008000Ë

	)

6010 
	#NVIC_ICER_CLRENA_16
 ((
uöt32_t
)0x00010000Ë

	)

6011 
	#NVIC_ICER_CLRENA_17
 ((
uöt32_t
)0x00020000Ë

	)

6012 
	#NVIC_ICER_CLRENA_18
 ((
uöt32_t
)0x00040000Ë

	)

6013 
	#NVIC_ICER_CLRENA_19
 ((
uöt32_t
)0x00080000Ë

	)

6014 
	#NVIC_ICER_CLRENA_20
 ((
uöt32_t
)0x00100000Ë

	)

6015 
	#NVIC_ICER_CLRENA_21
 ((
uöt32_t
)0x00200000Ë

	)

6016 
	#NVIC_ICER_CLRENA_22
 ((
uöt32_t
)0x00400000Ë

	)

6017 
	#NVIC_ICER_CLRENA_23
 ((
uöt32_t
)0x00800000Ë

	)

6018 
	#NVIC_ICER_CLRENA_24
 ((
uöt32_t
)0x01000000Ë

	)

6019 
	#NVIC_ICER_CLRENA_25
 ((
uöt32_t
)0x02000000Ë

	)

6020 
	#NVIC_ICER_CLRENA_26
 ((
uöt32_t
)0x04000000Ë

	)

6021 
	#NVIC_ICER_CLRENA_27
 ((
uöt32_t
)0x08000000Ë

	)

6022 
	#NVIC_ICER_CLRENA_28
 ((
uöt32_t
)0x10000000Ë

	)

6023 
	#NVIC_ICER_CLRENA_29
 ((
uöt32_t
)0x20000000Ë

	)

6024 
	#NVIC_ICER_CLRENA_30
 ((
uöt32_t
)0x40000000Ë

	)

6025 
	#NVIC_ICER_CLRENA_31
 ((
uöt32_t
)0x80000000Ë

	)

6028 
	#NVIC_ISPR_SETPEND
 ((
uöt32_t
)0xFFFFFFFFË

	)

6029 
	#NVIC_ISPR_SETPEND_0
 ((
uöt32_t
)0x00000001Ë

	)

6030 
	#NVIC_ISPR_SETPEND_1
 ((
uöt32_t
)0x00000002Ë

	)

6031 
	#NVIC_ISPR_SETPEND_2
 ((
uöt32_t
)0x00000004Ë

	)

6032 
	#NVIC_ISPR_SETPEND_3
 ((
uöt32_t
)0x00000008Ë

	)

6033 
	#NVIC_ISPR_SETPEND_4
 ((
uöt32_t
)0x00000010Ë

	)

6034 
	#NVIC_ISPR_SETPEND_5
 ((
uöt32_t
)0x00000020Ë

	)

6035 
	#NVIC_ISPR_SETPEND_6
 ((
uöt32_t
)0x00000040Ë

	)

6036 
	#NVIC_ISPR_SETPEND_7
 ((
uöt32_t
)0x00000080Ë

	)

6037 
	#NVIC_ISPR_SETPEND_8
 ((
uöt32_t
)0x00000100Ë

	)

6038 
	#NVIC_ISPR_SETPEND_9
 ((
uöt32_t
)0x00000200Ë

	)

6039 
	#NVIC_ISPR_SETPEND_10
 ((
uöt32_t
)0x00000400Ë

	)

6040 
	#NVIC_ISPR_SETPEND_11
 ((
uöt32_t
)0x00000800Ë

	)

6041 
	#NVIC_ISPR_SETPEND_12
 ((
uöt32_t
)0x00001000Ë

	)

6042 
	#NVIC_ISPR_SETPEND_13
 ((
uöt32_t
)0x00002000Ë

	)

6043 
	#NVIC_ISPR_SETPEND_14
 ((
uöt32_t
)0x00004000Ë

	)

6044 
	#NVIC_ISPR_SETPEND_15
 ((
uöt32_t
)0x00008000Ë

	)

6045 
	#NVIC_ISPR_SETPEND_16
 ((
uöt32_t
)0x00010000Ë

	)

6046 
	#NVIC_ISPR_SETPEND_17
 ((
uöt32_t
)0x00020000Ë

	)

6047 
	#NVIC_ISPR_SETPEND_18
 ((
uöt32_t
)0x00040000Ë

	)

6048 
	#NVIC_ISPR_SETPEND_19
 ((
uöt32_t
)0x00080000Ë

	)

6049 
	#NVIC_ISPR_SETPEND_20
 ((
uöt32_t
)0x00100000Ë

	)

6050 
	#NVIC_ISPR_SETPEND_21
 ((
uöt32_t
)0x00200000Ë

	)

6051 
	#NVIC_ISPR_SETPEND_22
 ((
uöt32_t
)0x00400000Ë

	)

6052 
	#NVIC_ISPR_SETPEND_23
 ((
uöt32_t
)0x00800000Ë

	)

6053 
	#NVIC_ISPR_SETPEND_24
 ((
uöt32_t
)0x01000000Ë

	)

6054 
	#NVIC_ISPR_SETPEND_25
 ((
uöt32_t
)0x02000000Ë

	)

6055 
	#NVIC_ISPR_SETPEND_26
 ((
uöt32_t
)0x04000000Ë

	)

6056 
	#NVIC_ISPR_SETPEND_27
 ((
uöt32_t
)0x08000000Ë

	)

6057 
	#NVIC_ISPR_SETPEND_28
 ((
uöt32_t
)0x10000000Ë

	)

6058 
	#NVIC_ISPR_SETPEND_29
 ((
uöt32_t
)0x20000000Ë

	)

6059 
	#NVIC_ISPR_SETPEND_30
 ((
uöt32_t
)0x40000000Ë

	)

6060 
	#NVIC_ISPR_SETPEND_31
 ((
uöt32_t
)0x80000000Ë

	)

6063 
	#NVIC_ICPR_CLRPEND
 ((
uöt32_t
)0xFFFFFFFFË

	)

6064 
	#NVIC_ICPR_CLRPEND_0
 ((
uöt32_t
)0x00000001Ë

	)

6065 
	#NVIC_ICPR_CLRPEND_1
 ((
uöt32_t
)0x00000002Ë

	)

6066 
	#NVIC_ICPR_CLRPEND_2
 ((
uöt32_t
)0x00000004Ë

	)

6067 
	#NVIC_ICPR_CLRPEND_3
 ((
uöt32_t
)0x00000008Ë

	)

6068 
	#NVIC_ICPR_CLRPEND_4
 ((
uöt32_t
)0x00000010Ë

	)

6069 
	#NVIC_ICPR_CLRPEND_5
 ((
uöt32_t
)0x00000020Ë

	)

6070 
	#NVIC_ICPR_CLRPEND_6
 ((
uöt32_t
)0x00000040Ë

	)

6071 
	#NVIC_ICPR_CLRPEND_7
 ((
uöt32_t
)0x00000080Ë

	)

6072 
	#NVIC_ICPR_CLRPEND_8
 ((
uöt32_t
)0x00000100Ë

	)

6073 
	#NVIC_ICPR_CLRPEND_9
 ((
uöt32_t
)0x00000200Ë

	)

6074 
	#NVIC_ICPR_CLRPEND_10
 ((
uöt32_t
)0x00000400Ë

	)

6075 
	#NVIC_ICPR_CLRPEND_11
 ((
uöt32_t
)0x00000800Ë

	)

6076 
	#NVIC_ICPR_CLRPEND_12
 ((
uöt32_t
)0x00001000Ë

	)

6077 
	#NVIC_ICPR_CLRPEND_13
 ((
uöt32_t
)0x00002000Ë

	)

6078 
	#NVIC_ICPR_CLRPEND_14
 ((
uöt32_t
)0x00004000Ë

	)

6079 
	#NVIC_ICPR_CLRPEND_15
 ((
uöt32_t
)0x00008000Ë

	)

6080 
	#NVIC_ICPR_CLRPEND_16
 ((
uöt32_t
)0x00010000Ë

	)

6081 
	#NVIC_ICPR_CLRPEND_17
 ((
uöt32_t
)0x00020000Ë

	)

6082 
	#NVIC_ICPR_CLRPEND_18
 ((
uöt32_t
)0x00040000Ë

	)

6083 
	#NVIC_ICPR_CLRPEND_19
 ((
uöt32_t
)0x00080000Ë

	)

6084 
	#NVIC_ICPR_CLRPEND_20
 ((
uöt32_t
)0x00100000Ë

	)

6085 
	#NVIC_ICPR_CLRPEND_21
 ((
uöt32_t
)0x00200000Ë

	)

6086 
	#NVIC_ICPR_CLRPEND_22
 ((
uöt32_t
)0x00400000Ë

	)

6087 
	#NVIC_ICPR_CLRPEND_23
 ((
uöt32_t
)0x00800000Ë

	)

6088 
	#NVIC_ICPR_CLRPEND_24
 ((
uöt32_t
)0x01000000Ë

	)

6089 
	#NVIC_ICPR_CLRPEND_25
 ((
uöt32_t
)0x02000000Ë

	)

6090 
	#NVIC_ICPR_CLRPEND_26
 ((
uöt32_t
)0x04000000Ë

	)

6091 
	#NVIC_ICPR_CLRPEND_27
 ((
uöt32_t
)0x08000000Ë

	)

6092 
	#NVIC_ICPR_CLRPEND_28
 ((
uöt32_t
)0x10000000Ë

	)

6093 
	#NVIC_ICPR_CLRPEND_29
 ((
uöt32_t
)0x20000000Ë

	)

6094 
	#NVIC_ICPR_CLRPEND_30
 ((
uöt32_t
)0x40000000Ë

	)

6095 
	#NVIC_ICPR_CLRPEND_31
 ((
uöt32_t
)0x80000000Ë

	)

6098 
	#NVIC_IABR_ACTIVE
 ((
uöt32_t
)0xFFFFFFFFË

	)

6099 
	#NVIC_IABR_ACTIVE_0
 ((
uöt32_t
)0x00000001Ë

	)

6100 
	#NVIC_IABR_ACTIVE_1
 ((
uöt32_t
)0x00000002Ë

	)

6101 
	#NVIC_IABR_ACTIVE_2
 ((
uöt32_t
)0x00000004Ë

	)

6102 
	#NVIC_IABR_ACTIVE_3
 ((
uöt32_t
)0x00000008Ë

	)

6103 
	#NVIC_IABR_ACTIVE_4
 ((
uöt32_t
)0x00000010Ë

	)

6104 
	#NVIC_IABR_ACTIVE_5
 ((
uöt32_t
)0x00000020Ë

	)

6105 
	#NVIC_IABR_ACTIVE_6
 ((
uöt32_t
)0x00000040Ë

	)

6106 
	#NVIC_IABR_ACTIVE_7
 ((
uöt32_t
)0x00000080Ë

	)

6107 
	#NVIC_IABR_ACTIVE_8
 ((
uöt32_t
)0x00000100Ë

	)

6108 
	#NVIC_IABR_ACTIVE_9
 ((
uöt32_t
)0x00000200Ë

	)

6109 
	#NVIC_IABR_ACTIVE_10
 ((
uöt32_t
)0x00000400Ë

	)

6110 
	#NVIC_IABR_ACTIVE_11
 ((
uöt32_t
)0x00000800Ë

	)

6111 
	#NVIC_IABR_ACTIVE_12
 ((
uöt32_t
)0x00001000Ë

	)

6112 
	#NVIC_IABR_ACTIVE_13
 ((
uöt32_t
)0x00002000Ë

	)

6113 
	#NVIC_IABR_ACTIVE_14
 ((
uöt32_t
)0x00004000Ë

	)

6114 
	#NVIC_IABR_ACTIVE_15
 ((
uöt32_t
)0x00008000Ë

	)

6115 
	#NVIC_IABR_ACTIVE_16
 ((
uöt32_t
)0x00010000Ë

	)

6116 
	#NVIC_IABR_ACTIVE_17
 ((
uöt32_t
)0x00020000Ë

	)

6117 
	#NVIC_IABR_ACTIVE_18
 ((
uöt32_t
)0x00040000Ë

	)

6118 
	#NVIC_IABR_ACTIVE_19
 ((
uöt32_t
)0x00080000Ë

	)

6119 
	#NVIC_IABR_ACTIVE_20
 ((
uöt32_t
)0x00100000Ë

	)

6120 
	#NVIC_IABR_ACTIVE_21
 ((
uöt32_t
)0x00200000Ë

	)

6121 
	#NVIC_IABR_ACTIVE_22
 ((
uöt32_t
)0x00400000Ë

	)

6122 
	#NVIC_IABR_ACTIVE_23
 ((
uöt32_t
)0x00800000Ë

	)

6123 
	#NVIC_IABR_ACTIVE_24
 ((
uöt32_t
)0x01000000Ë

	)

6124 
	#NVIC_IABR_ACTIVE_25
 ((
uöt32_t
)0x02000000Ë

	)

6125 
	#NVIC_IABR_ACTIVE_26
 ((
uöt32_t
)0x04000000Ë

	)

6126 
	#NVIC_IABR_ACTIVE_27
 ((
uöt32_t
)0x08000000Ë

	)

6127 
	#NVIC_IABR_ACTIVE_28
 ((
uöt32_t
)0x10000000Ë

	)

6128 
	#NVIC_IABR_ACTIVE_29
 ((
uöt32_t
)0x20000000Ë

	)

6129 
	#NVIC_IABR_ACTIVE_30
 ((
uöt32_t
)0x40000000Ë

	)

6130 
	#NVIC_IABR_ACTIVE_31
 ((
uöt32_t
)0x80000000Ë

	)

6133 
	#NVIC_IPR0_PRI_0
 ((
uöt32_t
)0x000000FFË

	)

6134 
	#NVIC_IPR0_PRI_1
 ((
uöt32_t
)0x0000FF00Ë

	)

6135 
	#NVIC_IPR0_PRI_2
 ((
uöt32_t
)0x00FF0000Ë

	)

6136 
	#NVIC_IPR0_PRI_3
 ((
uöt32_t
)0xFF000000Ë

	)

6139 
	#NVIC_IPR1_PRI_4
 ((
uöt32_t
)0x000000FFË

	)

6140 
	#NVIC_IPR1_PRI_5
 ((
uöt32_t
)0x0000FF00Ë

	)

6141 
	#NVIC_IPR1_PRI_6
 ((
uöt32_t
)0x00FF0000Ë

	)

6142 
	#NVIC_IPR1_PRI_7
 ((
uöt32_t
)0xFF000000Ë

	)

6145 
	#NVIC_IPR2_PRI_8
 ((
uöt32_t
)0x000000FFË

	)

6146 
	#NVIC_IPR2_PRI_9
 ((
uöt32_t
)0x0000FF00Ë

	)

6147 
	#NVIC_IPR2_PRI_10
 ((
uöt32_t
)0x00FF0000Ë

	)

6148 
	#NVIC_IPR2_PRI_11
 ((
uöt32_t
)0xFF000000Ë

	)

6151 
	#NVIC_IPR3_PRI_12
 ((
uöt32_t
)0x000000FFË

	)

6152 
	#NVIC_IPR3_PRI_13
 ((
uöt32_t
)0x0000FF00Ë

	)

6153 
	#NVIC_IPR3_PRI_14
 ((
uöt32_t
)0x00FF0000Ë

	)

6154 
	#NVIC_IPR3_PRI_15
 ((
uöt32_t
)0xFF000000Ë

	)

6157 
	#NVIC_IPR4_PRI_16
 ((
uöt32_t
)0x000000FFË

	)

6158 
	#NVIC_IPR4_PRI_17
 ((
uöt32_t
)0x0000FF00Ë

	)

6159 
	#NVIC_IPR4_PRI_18
 ((
uöt32_t
)0x00FF0000Ë

	)

6160 
	#NVIC_IPR4_PRI_19
 ((
uöt32_t
)0xFF000000Ë

	)

6163 
	#NVIC_IPR5_PRI_20
 ((
uöt32_t
)0x000000FFË

	)

6164 
	#NVIC_IPR5_PRI_21
 ((
uöt32_t
)0x0000FF00Ë

	)

6165 
	#NVIC_IPR5_PRI_22
 ((
uöt32_t
)0x00FF0000Ë

	)

6166 
	#NVIC_IPR5_PRI_23
 ((
uöt32_t
)0xFF000000Ë

	)

6169 
	#NVIC_IPR6_PRI_24
 ((
uöt32_t
)0x000000FFË

	)

6170 
	#NVIC_IPR6_PRI_25
 ((
uöt32_t
)0x0000FF00Ë

	)

6171 
	#NVIC_IPR6_PRI_26
 ((
uöt32_t
)0x00FF0000Ë

	)

6172 
	#NVIC_IPR6_PRI_27
 ((
uöt32_t
)0xFF000000Ë

	)

6175 
	#NVIC_IPR7_PRI_28
 ((
uöt32_t
)0x000000FFË

	)

6176 
	#NVIC_IPR7_PRI_29
 ((
uöt32_t
)0x0000FF00Ë

	)

6177 
	#NVIC_IPR7_PRI_30
 ((
uöt32_t
)0x00FF0000Ë

	)

6178 
	#NVIC_IPR7_PRI_31
 ((
uöt32_t
)0xFF000000Ë

	)

6181 
	#SCB_CPUID_REVISION
 ((
uöt32_t
)0x0000000FË

	)

6182 
	#SCB_CPUID_PARTNO
 ((
uöt32_t
)0x0000FFF0Ë

	)

6183 
	#SCB_CPUID_C⁄°™t
 ((
uöt32_t
)0x000F0000Ë

	)

6184 
	#SCB_CPUID_VARIANT
 ((
uöt32_t
)0x00F00000Ë

	)

6185 
	#SCB_CPUID_IMPLEMENTER
 ((
uöt32_t
)0xFF000000Ë

	)

6188 
	#SCB_ICSR_VECTACTIVE
 ((
uöt32_t
)0x000001FFË

	)

6189 
	#SCB_ICSR_RETTOBASE
 ((
uöt32_t
)0x00000800Ë

	)

6190 
	#SCB_ICSR_VECTPENDING
 ((
uöt32_t
)0x003FF000Ë

	)

6191 
	#SCB_ICSR_ISRPENDING
 ((
uöt32_t
)0x00400000Ë

	)

6192 
	#SCB_ICSR_ISRPREEMPT
 ((
uöt32_t
)0x00800000Ë

	)

6193 
	#SCB_ICSR_PENDSTCLR
 ((
uöt32_t
)0x02000000Ë

	)

6194 
	#SCB_ICSR_PENDSTSET
 ((
uöt32_t
)0x04000000Ë

	)

6195 
	#SCB_ICSR_PENDSVCLR
 ((
uöt32_t
)0x08000000Ë

	)

6196 
	#SCB_ICSR_PENDSVSET
 ((
uöt32_t
)0x10000000Ë

	)

6197 
	#SCB_ICSR_NMIPENDSET
 ((
uöt32_t
)0x80000000Ë

	)

6200 
	#SCB_VTOR_TBLOFF
 ((
uöt32_t
)0x1FFFFF80Ë

	)

6201 
	#SCB_VTOR_TBLBASE
 ((
uöt32_t
)0x20000000Ë

	)

6204 
	#SCB_AIRCR_VECTRESET
 ((
uöt32_t
)0x00000001Ë

	)

6205 
	#SCB_AIRCR_VECTCLRACTIVE
 ((
uöt32_t
)0x00000002Ë

	)

6206 
	#SCB_AIRCR_SYSRESETREQ
 ((
uöt32_t
)0x00000004Ë

	)

6208 
	#SCB_AIRCR_PRIGROUP
 ((
uöt32_t
)0x00000700Ë

	)

6209 
	#SCB_AIRCR_PRIGROUP_0
 ((
uöt32_t
)0x00000100Ë

	)

6210 
	#SCB_AIRCR_PRIGROUP_1
 ((
uöt32_t
)0x00000200Ë

	)

6211 
	#SCB_AIRCR_PRIGROUP_2
 ((
uöt32_t
)0x00000400Ë

	)

6214 
	#SCB_AIRCR_PRIGROUP0
 ((
uöt32_t
)0x00000000Ë

	)

6215 
	#SCB_AIRCR_PRIGROUP1
 ((
uöt32_t
)0x00000100Ë

	)

6216 
	#SCB_AIRCR_PRIGROUP2
 ((
uöt32_t
)0x00000200Ë

	)

6217 
	#SCB_AIRCR_PRIGROUP3
 ((
uöt32_t
)0x00000300Ë

	)

6218 
	#SCB_AIRCR_PRIGROUP4
 ((
uöt32_t
)0x00000400Ë

	)

6219 
	#SCB_AIRCR_PRIGROUP5
 ((
uöt32_t
)0x00000500Ë

	)

6220 
	#SCB_AIRCR_PRIGROUP6
 ((
uöt32_t
)0x00000600Ë

	)

6221 
	#SCB_AIRCR_PRIGROUP7
 ((
uöt32_t
)0x00000700Ë

	)

6223 
	#SCB_AIRCR_ENDIANESS
 ((
uöt32_t
)0x00008000Ë

	)

6224 
	#SCB_AIRCR_VECTKEY
 ((
uöt32_t
)0xFFFF0000Ë

	)

6227 
	#SCB_SCR_SLEEPONEXIT
 ((
uöt8_t
)0x02Ë

	)

6228 
	#SCB_SCR_SLEEPDEEP
 ((
uöt8_t
)0x04Ë

	)

6229 
	#SCB_SCR_SEVONPEND
 ((
uöt8_t
)0x10Ë

	)

6232 
	#SCB_CCR_NONBASETHRDENA
 ((
uöt16_t
)0x0001Ë

	)

6233 
	#SCB_CCR_USERSETMPEND
 ((
uöt16_t
)0x0002Ë

	)

6234 
	#SCB_CCR_UNALIGN_TRP
 ((
uöt16_t
)0x0008Ë

	)

6235 
	#SCB_CCR_DIV_0_TRP
 ((
uöt16_t
)0x0010Ë

	)

6236 
	#SCB_CCR_BFHFNMIGN
 ((
uöt16_t
)0x0100Ë

	)

6237 
	#SCB_CCR_STKALIGN
 ((
uöt16_t
)0x0200Ë

	)

6240 
	#SCB_SHPR_PRI_N
 ((
uöt32_t
)0x000000FFË

	)

6241 
	#SCB_SHPR_PRI_N1
 ((
uöt32_t
)0x0000FF00Ë

	)

6242 
	#SCB_SHPR_PRI_N2
 ((
uöt32_t
)0x00FF0000Ë

	)

6243 
	#SCB_SHPR_PRI_N3
 ((
uöt32_t
)0xFF000000Ë

	)

6246 
	#SCB_SHCSR_MEMFAULTACT
 ((
uöt32_t
)0x00000001Ë

	)

6247 
	#SCB_SHCSR_BUSFAULTACT
 ((
uöt32_t
)0x00000002Ë

	)

6248 
	#SCB_SHCSR_USGFAULTACT
 ((
uöt32_t
)0x00000008Ë

	)

6249 
	#SCB_SHCSR_SVCALLACT
 ((
uöt32_t
)0x00000080Ë

	)

6250 
	#SCB_SHCSR_MONITORACT
 ((
uöt32_t
)0x00000100Ë

	)

6251 
	#SCB_SHCSR_PENDSVACT
 ((
uöt32_t
)0x00000400Ë

	)

6252 
	#SCB_SHCSR_SYSTICKACT
 ((
uöt32_t
)0x00000800Ë

	)

6253 
	#SCB_SHCSR_USGFAULTPENDED
 ((
uöt32_t
)0x00001000Ë

	)

6254 
	#SCB_SHCSR_MEMFAULTPENDED
 ((
uöt32_t
)0x00002000Ë

	)

6255 
	#SCB_SHCSR_BUSFAULTPENDED
 ((
uöt32_t
)0x00004000Ë

	)

6256 
	#SCB_SHCSR_SVCALLPENDED
 ((
uöt32_t
)0x00008000Ë

	)

6257 
	#SCB_SHCSR_MEMFAULTENA
 ((
uöt32_t
)0x00010000Ë

	)

6258 
	#SCB_SHCSR_BUSFAULTENA
 ((
uöt32_t
)0x00020000Ë

	)

6259 
	#SCB_SHCSR_USGFAULTENA
 ((
uöt32_t
)0x00040000Ë

	)

6263 
	#SCB_CFSR_IACCVIOL
 ((
uöt32_t
)0x00000001Ë

	)

6264 
	#SCB_CFSR_DACCVIOL
 ((
uöt32_t
)0x00000002Ë

	)

6265 
	#SCB_CFSR_MUNSTKERR
 ((
uöt32_t
)0x00000008Ë

	)

6266 
	#SCB_CFSR_MSTKERR
 ((
uöt32_t
)0x00000010Ë

	)

6267 
	#SCB_CFSR_MMARVALID
 ((
uöt32_t
)0x00000080Ë

	)

6269 
	#SCB_CFSR_IBUSERR
 ((
uöt32_t
)0x00000100Ë

	)

6270 
	#SCB_CFSR_PRECISERR
 ((
uöt32_t
)0x00000200Ë

	)

6271 
	#SCB_CFSR_IMPRECISERR
 ((
uöt32_t
)0x00000400Ë

	)

6272 
	#SCB_CFSR_UNSTKERR
 ((
uöt32_t
)0x00000800Ë

	)

6273 
	#SCB_CFSR_STKERR
 ((
uöt32_t
)0x00001000Ë

	)

6274 
	#SCB_CFSR_BFARVALID
 ((
uöt32_t
)0x00008000Ë

	)

6276 
	#SCB_CFSR_UNDEFINSTR
 ((
uöt32_t
)0x00010000Ë

	)

6277 
	#SCB_CFSR_INVSTATE
 ((
uöt32_t
)0x00020000Ë

	)

6278 
	#SCB_CFSR_INVPC
 ((
uöt32_t
)0x00040000Ë

	)

6279 
	#SCB_CFSR_NOCP
 ((
uöt32_t
)0x00080000Ë

	)

6280 
	#SCB_CFSR_UNALIGNED
 ((
uöt32_t
)0x01000000Ë

	)

6281 
	#SCB_CFSR_DIVBYZERO
 ((
uöt32_t
)0x02000000Ë

	)

6284 
	#SCB_HFSR_VECTTBL
 ((
uöt32_t
)0x00000002Ë

	)

6285 
	#SCB_HFSR_FORCED
 ((
uöt32_t
)0x40000000Ë

	)

6286 
	#SCB_HFSR_DEBUGEVT
 ((
uöt32_t
)0x80000000Ë

	)

6289 
	#SCB_DFSR_HALTED
 ((
uöt8_t
)0x01Ë

	)

6290 
	#SCB_DFSR_BKPT
 ((
uöt8_t
)0x02Ë

	)

6291 
	#SCB_DFSR_DWTTRAP
 ((
uöt8_t
)0x04Ë

	)

6292 
	#SCB_DFSR_VCATCH
 ((
uöt8_t
)0x08Ë

	)

6293 
	#SCB_DFSR_EXTERNAL
 ((
uöt8_t
)0x10Ë

	)

6296 
	#SCB_MMFAR_ADDRESS
 ((
uöt32_t
)0xFFFFFFFFË

	)

6299 
	#SCB_BFAR_ADDRESS
 ((
uöt32_t
)0xFFFFFFFFË

	)

6302 
	#SCB_AFSR_IMPDEF
 ((
uöt32_t
)0xFFFFFFFFË

	)

6311 #ifde‡
USE_STDPERIPH_DRIVER


6312 
	~"°m32l1xx_c⁄f.h
"

6319 
	#SET_BIT
(
REG
, 
BIT
Ë((REGË|(BIT))

	)

6321 
	#CLEAR_BIT
(
REG
, 
BIT
Ë((REGË&~(BIT))

	)

6323 
	#READ_BIT
(
REG
, 
BIT
Ë((REGË& (BIT))

	)

6325 
	#CLEAR_REG
(
REG
Ë((REGË(0x0))

	)

6327 
	#WRITE_REG
(
REG
, 
VAL
Ë((REGË(VAL))

	)

6329 
	#READ_REG
(
REG
Ë((REG))

	)

6331 
	#MODIFY_REG
(
REG
, 
CLEARMASK
, 
SETMASK
Ë
	`WRITE_REG
((REG), (((
	`READ_REG
(REG)Ë& (~(CLEARMASK))Ë| (SETMASK)))

	)

6337 #ifde‡
__˝lu•lus


	@D:\EmBitz\GIT\projects\stm32l1xx_dac\inc\system_stm32l1xx.h

39 #i‚de‡
__SYSTEM_STM32L1XX_H


40 
	#__SYSTEM_STM32L1XX_H


	)

42 #ifde‡
__˝lu•lus


59 
uöt32_t
 
Sy°emC‹eClock
;

85 
Sy°emInô
();

86 
Sy°emC‹eClockUpd©e
();

91 #ifde‡
__˝lu•lus


	@D:\EmBitz\GIT\projects\stm32l1xx_dac\src\main.c

1 
	~"c⁄f_bﬂrd.h
"

3 
bﬂrdInô
();

4 
buâ⁄Func
();

6 
Gpio_t
 
	gLED_BLUE
, 
	gLED_GREEN
, 
	gBUTTON
;

8 
	$maö
() {

9 
	`bﬂrdInô
();

12 
	`__WFI
();

16 
	}
}

18 
	$bﬂrdInô
() {

19 
	`˝uInô
();

22 
LED_BLUE
.
pöIndex
 = 
BOARD_LED_BLUE_pö
;

23 
LED_BLUE
.
p‹tIndex
 = 
BOARD_LED_BLUE_p‹t
;

24 
	`GpioInô
(&
LED_BLUE
, 
PIN_OUTPUT
, 
PIN_PUSH_PULL
, 
PIN_NO_PULL
, 0);

25 
LED_GREEN
.
pöIndex
 = 
BOARD_LED_GREEN_pö
;

26 
LED_GREEN
.
p‹tIndex
 = 
BOARD_LED_GREEN_p‹t
;

27 
	`GpioInô
(&
LED_GREEN
, 
PIN_OUTPUT
, 
PIN_PUSH_PULL
, 
PIN_NO_PULL
, 0);

30 
BUTTON
.
pöIndex
 = 
BOARD_BUTTON_pö
;

31 
BUTTON
.
p‹tIndex
 = 
BOARD_BUTTON_p‹t
;

32 
	`GpioInô
(&
BUTTON
, 
PIN_INPUT
, 
PIN_PUSH_PULL
, 
PIN_NO_PULL
, 0);

33 
	`GpioSëI¡îru±
(&
BUTTON
, 
IRQ_RISING_EDGE
, 
IRQ_HIGH_PRIORITY
, 
buâ⁄Func
);

34 
	}
}

36 
	$buâ⁄Func
() {

38 
	}
}

	@D:\EmBitz\GIT\projects\stm32l1xx_dac\src\startup_stm32l1xx_md.S

32 .
sy¡ax
 
	gunifõd


33 .
¨ch
 
	g¨mv7
-
	gm


35 .
	g£˘i⁄
 .
	g°ack


36 .
	gÆign
 3

37 #ifde‡
__STACK_SIZE


38 .
equ
 
	gSèck_Size
, 
	g__STACK_SIZE


40 .
equ
 
	gSèck_Size
, 0x400

42 .
globl
 
	g__SèckT›


43 .
globl
 
__SèckLimô


44 
	g__SèckLimô
:

45 .
•a˚
 
Sèck_Size


46 .
size
 
__SèckLimô
, . - __StackLimit

47 
	g__SèckT›
:

48 .
size
 
__SèckT›
, . - 
	g__SèckT›


50 .
	g£˘i⁄
 .
	ghóp


51 .
	gÆign
 3

52 #ifde‡
__HEAP_SIZE


53 .
equ
 
	gHóp_Size
, 
	g__HEAP_SIZE


55 .
equ
 
	gHóp_Size
, 0xC00

57 .
globl
 
	g__HópBa£


58 .
globl
 
__HópLimô


59 
	g__HópBa£
:

60 .
Hóp_Size


61 .
•a˚
 
Hóp_Size


62 .
ídif


63 .
size
 
__HópBa£
, . - __HeapBase

64 
	g__HópLimô
:

65 .
size
 
__HópLimô
, . - 
	g__HópLimô


67 .
	g£˘i⁄
 .
	gi§_ve˘‹


68 .
	gÆign
 2

69 .
globl
 
__i§_ve˘‹


70 
	g__i§_ve˘‹
:

71 .
__SèckT›


72 .
Re£t_H™dÀr


73 .
NMI_H™dÀr


74 .
H¨dFau…_H™dÀr


75 .
MemM™age_H™dÀr


76 .
BusFau…_H™dÀr


77 .
UßgeFau…_H™dÀr


82 .
SVC_H™dÀr


83 .
DebugM⁄_H™dÀr


85 .
PídSV_H™dÀr


86 .
SysTick_H™dÀr


89 .
WWDG_IRQH™dÀr


90 .
PVD_IRQH™dÀr


91 .
TAMPER_STAMP_IRQH™dÀr


92 .
RTC_WKUP_IRQH™dÀr


93 .
FLASH_IRQH™dÀr


94 .
RCC_IRQH™dÀr


95 .
EXTI0_IRQH™dÀr


96 .
EXTI1_IRQH™dÀr


97 .
EXTI2_IRQH™dÀr


98 .
EXTI3_IRQH™dÀr


99 .
EXTI4_IRQH™dÀr


100 .
DMA1_Ch™√l1_IRQH™dÀr


101 .
DMA1_Ch™√l2_IRQH™dÀr


102 .
DMA1_Ch™√l3_IRQH™dÀr


103 .
DMA1_Ch™√l4_IRQH™dÀr


104 .
DMA1_Ch™√l5_IRQH™dÀr


105 .
DMA1_Ch™√l6_IRQH™dÀr


106 .
DMA1_Ch™√l7_IRQH™dÀr


107 .
ADC1_IRQH™dÀr


108 .
USB_HP_IRQH™dÀr


109 .
USB_LP_IRQH™dÀr


110 .
DAC_IRQH™dÀr


111 .
COMP_IRQH™dÀr


112 .
EXTI9_5_IRQH™dÀr


113 .
LCD_IRQH™dÀr


114 .
TIM9_IRQH™dÀr


115 .
TIM10_IRQH™dÀr


116 .
TIM11_IRQH™dÀr


117 .
TIM2_IRQH™dÀr


118 .
TIM3_IRQH™dÀr


119 .
TIM4_IRQH™dÀr


120 .
I2C1_EV_IRQH™dÀr


121 .
I2C1_ER_IRQH™dÀr


122 .
I2C2_EV_IRQH™dÀr


123 .
I2C2_ER_IRQH™dÀr


124 .
SPI1_IRQH™dÀr


125 .
SPI2_IRQH™dÀr


126 .
USART1_IRQH™dÀr


127 .
USART2_IRQH™dÀr


128 .
USART3_IRQH™dÀr


129 .
EXTI15_10_IRQH™dÀr


130 .
RTC_Aœrm_IRQH™dÀr


131 .
USB_FS_WKUP_IRQH™dÀr


132 .
TIM6_IRQH™dÀr


133 .
TIM7_IRQH™dÀr


135 .
size
 
__i§_ve˘‹
, . - 
	g__i§_ve˘‹


137 .
	gãxt


138 .
	gthumb


139 .
	gthumb_func


140 .
	gÆign
 2

141 .
globl
 
	gRe£t_H™dÀr


142 .
ty≥
 
	gRe£t_H™dÀr
, %
fun˘i⁄


143 
	gRe£t_H™dÀr
:

151 
ldr
 
r1
, =
__ëext


152 
ldr
 
r2
, =
__d©a_°¨t__


153 
ldr
 
r3
, =
__d©a_íd__


159 .
Êash_to_øm_lo›
:

160 
cmp
 
r2
, 
r3


161 
ôâ
 
…


162 
ldæt
 
	gr0
, [
r1
], #4

163 
°æt
 
	gr0
, [
r2
], #4

164 
	gb…
 .
	gÊash_to_øm_lo›


166 
subs
 
	gr3
, 
r2


167 
	gbÀ
 .
	gÊash_to_øm_lo›_íd


168 .
	gÊash_to_øm_lo›
:

169 
subs
 
r3
, #4

170 
ldr
 
	gr0
, [
r1
, 
r3
]

171 
°r
 
	gr0
, [
r2
, 
r3
]

172 
	gbgt
 .
	gÊash_to_øm_lo›


173 .
	gÊash_to_øm_lo›_íd
:

176 #i‚de‡
__NO_SYSTEM_INIT


177 
ldr
 
r0
, =
Sy°emInô


178 
blx
 
r0


181 
ldr
 
r0
, =
_°¨t


182 
bx
 
r0


183 .
poﬁ


184 .
size
 
Re£t_H™dÀr
, . - 
	gRe£t_H™dÀr


189 .
	gÆign
 1

190 .
	gthumb_func


191 .
wók
 
	g_°¨t


192 .
ty≥
 
	g_°¨t
, %
fun˘i⁄


193 
	g_°¨t
:

196 
ldr
 
r1
, = 
__bss_°¨t__


197 
ldr
 
r2
, = 
__bss_íd__


198 
movs
 
r3
, #0

199 
	gb
 .
	gfûl_zîo_bss


200 .
	glo›_zîo_bss
:

201 
°r
 
r3
, [
r1
], #4

203 .
	gfûl_zîo_bss
:

204 
cmp
 
r1
, 
r2


205 
	gbcc
 .
lo›_zîo_bss


208 
bl
 
maö


209 
	gb
 .

210 .
size
 
	g_°¨t
, . - _start

215 .
ma¸o
 
def_úq_h™dÀr
 
	gh™dÀr_«me


216 .
	gÆign
 1

217 .
	gthumb_func


218 .
	gwók
 \
	gh™dÀr_«me


219 .
	gty≥
 \
	gh™dÀr_«me
, %
	gfun˘i⁄


220 \
	gh™dÀr_«me
 :

221 
b
 .

222 .
size
 \
h™dÀr_«me
, . - \
	gh™dÀr_«me


223 .
ídm


225 
def_úq_h™dÀr
 
NMI_H™dÀr


226 
def_úq_h™dÀr
 
H¨dFau…_H™dÀr


227 
def_úq_h™dÀr
 
MemM™age_H™dÀr


228 
def_úq_h™dÀr
 
BusFau…_H™dÀr


229 
def_úq_h™dÀr
 
UßgeFau…_H™dÀr


230 
def_úq_h™dÀr
 
SVC_H™dÀr


231 
def_úq_h™dÀr
 
DebugM⁄_H™dÀr


232 
def_úq_h™dÀr
 
PídSV_H™dÀr


233 
def_úq_h™dÀr
 
SysTick_H™dÀr


234 
def_úq_h™dÀr
 
DeÁu…_H™dÀr


237 
def_úq_h™dÀr
 
WWDG_IRQH™dÀr


238 
def_úq_h™dÀr
 
PVD_IRQH™dÀr


239 
def_úq_h™dÀr
 
TAMPER_STAMP_IRQH™dÀr


240 
def_úq_h™dÀr
 
RTC_WKUP_IRQH™dÀr


241 
def_úq_h™dÀr
 
FLASH_IRQH™dÀr


242 
def_úq_h™dÀr
 
RCC_IRQH™dÀr


243 
def_úq_h™dÀr
 
EXTI0_IRQH™dÀr


244 
def_úq_h™dÀr
 
EXTI1_IRQH™dÀr


245 
def_úq_h™dÀr
 
EXTI2_IRQH™dÀr


246 
def_úq_h™dÀr
 
EXTI3_IRQH™dÀr


247 
def_úq_h™dÀr
 
EXTI4_IRQH™dÀr


248 
def_úq_h™dÀr
 
DMA1_Ch™√l1_IRQH™dÀr


249 
def_úq_h™dÀr
 
DMA1_Ch™√l2_IRQH™dÀr


250 
def_úq_h™dÀr
 
DMA1_Ch™√l3_IRQH™dÀr


251 
def_úq_h™dÀr
 
DMA1_Ch™√l4_IRQH™dÀr


252 
def_úq_h™dÀr
 
DMA1_Ch™√l5_IRQH™dÀr


253 
def_úq_h™dÀr
 
DMA1_Ch™√l6_IRQH™dÀr


254 
def_úq_h™dÀr
 
DMA1_Ch™√l7_IRQH™dÀr


255 
def_úq_h™dÀr
 
ADC1_IRQH™dÀr


256 
def_úq_h™dÀr
 
USB_HP_IRQH™dÀr


257 
def_úq_h™dÀr
 
USB_LP_IRQH™dÀr


258 
def_úq_h™dÀr
 
DAC_IRQH™dÀr


259 
def_úq_h™dÀr
 
COMP_IRQH™dÀr


260 
def_úq_h™dÀr
 
EXTI9_5_IRQH™dÀr


261 
def_úq_h™dÀr
 
LCD_IRQH™dÀr


262 
def_úq_h™dÀr
 
TIM9_IRQH™dÀr


263 
def_úq_h™dÀr
 
TIM10_IRQH™dÀr


264 
def_úq_h™dÀr
 
TIM11_IRQH™dÀr


265 
def_úq_h™dÀr
 
TIM2_IRQH™dÀr


266 
def_úq_h™dÀr
 
TIM3_IRQH™dÀr


267 
def_úq_h™dÀr
 
TIM4_IRQH™dÀr


268 
def_úq_h™dÀr
 
I2C1_EV_IRQH™dÀr


269 
def_úq_h™dÀr
 
I2C1_ER_IRQH™dÀr


270 
def_úq_h™dÀr
 
I2C2_EV_IRQH™dÀr


271 
def_úq_h™dÀr
 
I2C2_ER_IRQH™dÀr


272 
def_úq_h™dÀr
 
SPI1_IRQH™dÀr


273 
def_úq_h™dÀr
 
SPI2_IRQH™dÀr


274 
def_úq_h™dÀr
 
USART1_IRQH™dÀr


275 
def_úq_h™dÀr
 
USART2_IRQH™dÀr


276 
def_úq_h™dÀr
 
USART3_IRQH™dÀr


277 
def_úq_h™dÀr
 
EXTI15_10_IRQH™dÀr


278 
def_úq_h™dÀr
 
RTC_Aœrm_IRQH™dÀr


279 
def_úq_h™dÀr
 
USB_FS_WKUP_IRQH™dÀr


280 
def_úq_h™dÀr
 
TIM6_IRQH™dÀr


281 
def_úq_h™dÀr
 
	gTIM7_IRQH™dÀr


283 .
	gíd


	@D:\EmBitz\GIT\projects\stm32l1xx_dac\src\system_stm32l1xx.c

102 
	~"°m32l1xx.h
"

123 
	#VECT_TAB_OFFSET
 0x0

	)

140 
uöt32_t
 
	gSy°emC‹eClock
 = 32000000;

141 
__I
 
uöt8_t
 
	gPLLMulTabÀ
[9] = {3, 4, 6, 8, 12, 16, 24, 32, 48};

142 
__I
 
uöt8_t
 
	gAHBPªscTabÀ
[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

152 
SëSysClock
();

169 
	$Sy°emInô
 ()

172 
RCC
->
CR
 |(
uöt32_t
)0x00000100;

175 
RCC
->
CFGR
 &(
uöt32_t
)0x88FFC00C;

178 
RCC
->
CR
 &(
uöt32_t
)0xEEFEFFFE;

181 
RCC
->
CR
 &(
uöt32_t
)0xFFFBFFFF;

184 
RCC
->
CFGR
 &(
uöt32_t
)0xFF02FFFF;

187 
RCC
->
CIR
 = 0x00000000;

190 
	`SëSysClock
();

192 #ifde‡
VECT_TAB_SRAM


193 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

195 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

197 
	}
}

237 
	$Sy°emC‹eClockUpd©e
 ()

239 
uöt32_t
 
tmp
 = 0, 
∂lmul
 = 0, 
∂ldiv
 = 0, 
∂lsour˚
 = 0, 
msú™ge
 = 0;

242 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

244 
tmp
)

247 
msú™ge
 = (
RCC
->
ICSCR
 & 
RCC_ICSCR_MSIRANGE
) >> 13;

248 
Sy°emC‹eClock
 = (32768 * (1 << (
msú™ge
 + 1)));

251 
Sy°emC‹eClock
 = 
HSI_VALUE
;

254 
Sy°emC‹eClock
 = 
HSE_VALUE
;

258 
∂lmul
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMUL
;

259 
∂ldiv
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLDIV
;

260 
∂lmul
 = 
PLLMulTabÀ
[(pllmul >> 18)];

261 
∂ldiv
 = (plldiv >> 22) + 1;

263 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

265 i‡(
∂lsour˚
 == 0x00)

268 
Sy°emC‹eClock
 = (((
HSI_VALUE
Ë* 
∂lmul
Ë/ 
∂ldiv
);

273 
Sy°emC‹eClock
 = (((
HSE_VALUE
Ë* 
∂lmul
Ë/ 
∂ldiv
);

277 
msú™ge
 = (
RCC
->
ICSCR
 & 
RCC_ICSCR_MSIRANGE
) >> 13;

278 
Sy°emC‹eClock
 = (32768 * (1 << (
msú™ge
 + 1)));

283 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4)];

285 
Sy°emC‹eClock
 >>
tmp
;

286 
	}
}

296 
	$SëSysClock
()

298 
__IO
 
uöt32_t
 
SèπUpCou¡î
 = 0, 
HSISètus
 = 0;

302 
RCC
->
CR
 |((
uöt32_t
)
RCC_CR_HSION
);

307 
HSISètus
 = 
RCC
->
CR
 & 
RCC_CR_HSIRDY
;

308 } (
HSISètus
 =0Ë&& (
SèπUpCou¡î
 !
HSI_STARTUP_TIMEOUT
));

310 i‡((
RCC
->
CR
 & 
RCC_CR_HSIRDY
Ë!
RESET
)

312 
HSISètus
 = (
uöt32_t
)0x01;

316 
HSISètus
 = (
uöt32_t
)0x00;

319 i‡(
HSISètus
 =(
uöt32_t
)0x01)

322 
FLASH
->
ACR
 |
FLASH_ACR_ACC64
;

325 
FLASH
->
ACR
 |
FLASH_ACR_PRFTEN
;

328 
FLASH
->
ACR
 |
FLASH_ACR_LATENCY
;

332 
RCC
->
APB1ENR
 |
RCC_APB1ENR_PWREN
;

335 
PWR
->
CR
 = 
PWR_CR_VOS_0
;

339 (
PWR
->
CSR
 & 
PWR_CSR_VOSF
Ë!
RESET
)

344 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_HPRE_DIV1
;

347 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE2_DIV1
;

350 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_PPRE1_DIV1
;

353 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLMUL
 |

354 
RCC_CFGR_PLLDIV
));

355 
RCC
->
CFGR
 |(
uöt32_t
)(
RCC_CFGR_PLLSRC_HSI
 | 
RCC_CFGR_PLLMUL6
 | 
RCC_CFGR_PLLDIV3
);

358 
RCC
->
CR
 |
RCC_CR_PLLON
;

361 (
RCC
->
CR
 & 
RCC_CR_PLLRDY
) == 0)

366 
RCC
->
CFGR
 &(
uöt32_t
)((uöt32_t)~(
RCC_CFGR_SW
));

367 
RCC
->
CFGR
 |(
uöt32_t
)
RCC_CFGR_SW_PLL
;

370 (
RCC
->
CFGR
 & (
uöt32_t
)
RCC_CFGR_SWS
Ë!(uöt32_t)
RCC_CFGR_SWS_PLL
)

379 
	}
}

	@D:\EmBitz\GIT\projects\stm32l1xx_dac\stm32l152rb_flash.ld

33 
OUTPUT_FORMAT
("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")

34 
	$OUTPUT_ARCH
(
¨m
)

35 
	$SEARCH_DIR
(.)

38 
MEMORY


40 
	`ROM
 (
rx
Ë: 
ORIGIN
 = 0x08000000, 
LENGTH
 = 128
K


41 
	`RAM
 (
rwx
Ë: 
ORIGIN
 = 0x20000000, 
LENGTH
 = 16
K


42 
	}
}

72 
	gSECTIONS


74 .
	gãxt
 :

76 
KEEP
(*(.
i§_ve˘‹
))

77 *(.
ãxt
*)

79 
KEEP
(*(.
öô
))

80 
KEEP
(*(.
föi
))

83 *
¸tbegö
.
o
(.
˘‹s
)

84 *
¸tbegö
?.
o
(.
˘‹s
)

85 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
˘‹s
)

86 *(
SORT
(.
˘‹s
.*))

87 *(.
˘‹s
)

90 *
¸tbegö
.
o
(.
dt‹s
)

91 *
¸tbegö
?.
o
(.
dt‹s
)

92 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
dt‹s
)

93 *(
SORT
(.
dt‹s
.*))

94 *(.
dt‹s
)

96 *(.
rod©a
*)

98 
KEEP
(*(.
eh_‰ame
*))

99 } > 
ROM


101 .
ARM
.
exèb
 :

103 *(.
ARM
.
exèb
* .
gnu
.
lök⁄˚
.
¨mexèb
.*)

104 } > 
ROM


106 
__exidx_°¨t
 = .;

107 .
	gARM
.
	gexidx
 :

109 *(.
ARM
.
exidx
* .
gnu
.
lök⁄˚
.
¨mexidx
.*)

110 } > 
ROM


111 
__exidx_íd
 = .;

113 
	g__ëext
 = .;

115 .
	gd©a
 : 
AT
 (
__ëext
)

117 
__d©a_°¨t__
 = .;

118 *(
	gvèbÀ
)

119 *(.
	gd©a
*)

121 . = 
ALIGN
(4);

123 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_°¨t
 = .);

124 
KEEP
(*(.
¥eöô_¨øy
))

125 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_íd
 = .);

127 . = 
ALIGN
(4);

129 
PROVIDE_HIDDEN
 (
__öô_¨øy_°¨t
 = .);

130 
KEEP
(*(
SORT
(.
öô_¨øy
.*)))

131 
KEEP
(*(.
öô_¨øy
))

132 
PROVIDE_HIDDEN
 (
__öô_¨øy_íd
 = .);

135 . = 
ALIGN
(4);

137 
PROVIDE_HIDDEN
 (
__föi_¨øy_°¨t
 = .);

138 
KEEP
(*(
SORT
(.
föi_¨øy
.*)))

139 
KEEP
(*(.
föi_¨øy
))

140 
PROVIDE_HIDDEN
 (
__föi_¨øy_íd
 = .);

142 . = 
ALIGN
(4);

144 
	g__d©a_íd__
 = .;

146 } > 
	gRAM


148 .
bss
 (
NOLOAD
):

150 
__bss_°¨t__
 = .;

151 *(.
	gbss
*)

152 *(
	gCOMMON
)

153 
	g__bss_íd__
 = .;

154 } > 
	gRAM


156 .
hóp
 (
NOLOAD
):

158 
__íd__
 = .;

159 
	gíd
 = 
__íd__
;

160 *(.
	ghóp
*)

161 
	g__HópLimô
 = .;

162 } > 
	gRAM


167 .
°ack_dummy
 (
NOLOAD
):

169 *(.
°ack
)

170 } > 
RAM


174 
__SèckT›
 = 
ORIGIN
(
RAM
Ë+ 
LENGTH
(RAM);

175 
	g__SèckLimô
 = 
__SèckT›
 - 
SIZEOF
(.
°ack_dummy
);

176 
PROVIDE
(
__°ack
 = 
__SèckT›
);

179 
ASSERT
(
__SèckLimô
 >
__HópLimô
, "region RAM overflowed with stack")

	@D:\EmBitz\GIT\projects\stm32l1xx_dac\stm32l152rb_sram.ld

33 
OUTPUT_FORMAT
("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")

34 
	$OUTPUT_ARCH
(
¨m
)

35 
	$SEARCH_DIR
(.)

38 
MEMORY


40 
	`ROM
 (
rx
Ë: 
ORIGIN
 = 0x08000000, 
LENGTH
 = 128
K


41 
	`RAM
 (
rwx
Ë: 
ORIGIN
 = 0x20000000, 
LENGTH
 = 16
K


42 
	}
}

72 
	gSECTIONS


74 .
	gãxt
 :

76 
KEEP
(*(.
i§_ve˘‹
))

77 *(.
ãxt
*)

79 
KEEP
(*(.
öô
))

80 
KEEP
(*(.
föi
))

83 *
¸tbegö
.
o
(.
˘‹s
)

84 *
¸tbegö
?.
o
(.
˘‹s
)

85 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
˘‹s
)

86 *(
SORT
(.
˘‹s
.*))

87 *(.
˘‹s
)

90 *
¸tbegö
.
o
(.
dt‹s
)

91 *
¸tbegö
?.
o
(.
dt‹s
)

92 *(
EXCLUDE_FILE
(*
¸ãnd
?.
o
 *¸ãnd.oË.
dt‹s
)

93 *(
SORT
(.
dt‹s
.*))

94 *(.
dt‹s
)

96 *(.
rod©a
*)

98 
KEEP
(*(.
eh_‰ame
*))

99 } > 
RAM


101 .
ARM
.
exèb
 :

103 *(.
ARM
.
exèb
* .
gnu
.
lök⁄˚
.
¨mexèb
.*)

104 } > 
RAM


106 
__exidx_°¨t
 = .;

107 .
	gARM
.
	gexidx
 :

109 *(.
ARM
.
exidx
* .
gnu
.
lök⁄˚
.
¨mexidx
.*)

110 } > 
RAM


111 
__exidx_íd
 = .;

113 
	g__ëext
 = .;

115 .
	gd©a
 : 
AT
 (
__ëext
)

117 
__d©a_°¨t__
 = .;

118 *(
	gvèbÀ
)

119 *(.
	gd©a
*)

121 . = 
ALIGN
(4);

123 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_°¨t
 = .);

124 
KEEP
(*(.
¥eöô_¨øy
))

125 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_íd
 = .);

127 . = 
ALIGN
(4);

129 
PROVIDE_HIDDEN
 (
__öô_¨øy_°¨t
 = .);

130 
KEEP
(*(
SORT
(.
öô_¨øy
.*)))

131 
KEEP
(*(.
öô_¨øy
))

132 
PROVIDE_HIDDEN
 (
__öô_¨øy_íd
 = .);

135 . = 
ALIGN
(4);

137 
PROVIDE_HIDDEN
 (
__föi_¨øy_°¨t
 = .);

138 
KEEP
(*(
SORT
(.
föi_¨øy
.*)))

139 
KEEP
(*(.
föi_¨øy
))

140 
PROVIDE_HIDDEN
 (
__föi_¨øy_íd
 = .);

142 . = 
ALIGN
(4);

144 
	g__d©a_íd__
 = .;

146 } > 
	gRAM


148 .
bss
 (
NOLOAD
):

150 
__bss_°¨t__
 = .;

151 *(.
	gbss
*)

152 *(
	gCOMMON
)

153 
	g__bss_íd__
 = .;

154 } > 
	gRAM


156 .
hóp
 (
NOLOAD
):

158 
__íd__
 = .;

159 
	gíd
 = 
__íd__
;

160 *(.
	ghóp
*)

161 
	g__HópLimô
 = .;

162 } > 
	gRAM


167 .
°ack_dummy
 (
NOLOAD
):

169 . = 
ALIGN
(8);

170 *(.
	g°ack
)

171 } > 
RAM


175 
	g__SèckT›
 = 
ORIGIN
(
RAM
Ë+ 
LENGTH
(RAM);

176 
	g__SèckLimô
 = 
__SèckT›
 - 
SIZEOF
(.
°ack_dummy
);

177 
PROVIDE
(
__°ack
 = 
__SèckT›
);

180 
ASSERT
(
__SèckLimô
 >
__HópLimô
, "region RAM overflowed with stack")

	@
1
.
0
21
1033
D:\EmBitz\GIT\arch\stm32l1xx\cmsis\core_cm3.h
D:\EmBitz\GIT\arch\stm32l1xx\cmsis\core_cmFunc.h
D:\EmBitz\GIT\arch\stm32l1xx\cmsis\core_cmInstr.h
D:\EmBitz\GIT\core\stdlib_mcu32\stdlib.h
D:\EmBitz\GIT\core\stdlib_mcu32\stdlib_mcu32.c
D:\EmBitz\GIT\dev\dac.h
D:\EmBitz\GIT\dev\dev_cpu.h
D:\EmBitz\GIT\dev\dev_cpu_stm32l1xx\dev_cpu_stm32l1xx.c
D:\EmBitz\GIT\dev\dev_dac_stm32l1xx\dev_dac_stm32l1xx.c
D:\EmBitz\GIT\dev\dev_gpio_stm32l1xx\dev_gpio_stm32l1xx.c
D:\EmBitz\GIT\dev\dev_hw_timer.h
D:\EmBitz\GIT\dev\dev_hw_timer_stm32l1xx\dev_hw_timer_stm32l1xx.c
D:\EmBitz\GIT\dev\gpio.h
D:\EmBitz\GIT\projects\stm32l1xx_dac\inc\conf_board.h
D:\EmBitz\GIT\projects\stm32l1xx_dac\inc\stm32l1xx.h
D:\EmBitz\GIT\projects\stm32l1xx_dac\inc\system_stm32l1xx.h
D:\EmBitz\GIT\projects\stm32l1xx_dac\src\main.c
D:\EmBitz\GIT\projects\stm32l1xx_dac\src\startup_stm32l1xx_md.S
D:\EmBitz\GIT\projects\stm32l1xx_dac\src\system_stm32l1xx.c
D:\EmBitz\GIT\projects\stm32l1xx_dac\stm32l152rb_flash.ld
D:\EmBitz\GIT\projects\stm32l1xx_dac\stm32l152rb_sram.ld
